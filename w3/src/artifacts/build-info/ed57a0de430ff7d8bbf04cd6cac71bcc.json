{
	"id": "ed57a0de430ff7d8bbf04cd6cac71bcc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Pengyi.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.25;\n\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { ERC20Permit } from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport {ERC20Received} from \"./ERC20Received.sol\";\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\n// import { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n\ncontract MyERC20 is ERC20Permit {\n    error MyERC20__TokenTransferFailed();\n\n    uint8 public constant DECIMALS = 18;\n    constructor()  ERC20(unicode\"我的名字\", \"PENGYI\") ERC20Permit(\"what\") {\n        _mint(msg.sender, 10000 * 10 ** DECIMALS);\n    }\n\n    /**\n     * method 2\n     */\n    function transfer(address to, uint256 amount) public override returns (bool success) {\n        _transfer(msg.sender, to, amount);\n        uint32 size;\n        assembly {\n            size := extcodesize(to)\n        }\n\n        if(size > 0) {\n            bool rv = ERC20Received(to).tokensReceived(msg.sender, amount);\n            if(!rv) {\n                revert MyERC20__TokenTransferFailed();\n            }\n        }\n        success = true;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"src/ERC20Received.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.25;\n\ninterface ERC20Received {\n    function tokensReceived(address, uint256) external returns (bool success);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2288,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2290,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1267,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC20Received.sol",
								"src/Pengyi.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1267,
								"contract": "@openzeppelin/contracts/utils/Nonces.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069bc9e7a18eb14c733b6cc6defe1ae7bfe5c3e84e681b1e185a0faf46f1f9e1164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069bc9e7a18eb14c733b6cc6defe1ae7bfe5c3e84e681b1e185a0faf46f1f9e1164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xBC9E7A18EB14C733B6CC PUSH14 0xEFE1AE7BFE5C3E84E681B1E185A0 STATICCALL DELEGATECALL PUSH16 0x1F9E1164736F6C634300081900330000 ",
							"sourceMap": "1255:3053:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069bc9e7a18eb14c733b6cc6defe1ae7bfe5c3e84e681b1e185a0faf46f1f9e1164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xBC9E7A18EB14C733B6CC PUSH14 0xEFE1AE7BFE5C3E84E681B1E185A0 STATICCALL DELEGATECALL PUSH16 0x1F9E1164736F6C634300081900330000 ",
							"sourceMap": "1255:3053:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069bc9e7a18eb14c733b6cc6defe1ae7bfe5c3e84e681b1e185a0faf46f1f9e1164736f6c63430008190033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC20Received.sol",
								"src/Pengyi.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC20Received.sol",
								"src/Pengyi.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC20Received.sol",
								"src/Pengyi.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122042adc2325372f37f74233eb75bb9277e4fbf9bcbc8c52d0efff98c93d099233a64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122042adc2325372f37f74233eb75bb9277e4fbf9bcbc8c52d0efff98c93d099233a64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xAD 0xC2 ORIGIN MSTORE8 PUSH19 0xF37F74233EB75BB9277E4FBF9BCBC8C52D0EFF 0xF9 DUP13 SWAP4 0xD0 SWAP10 0x23 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "344:7386:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122042adc2325372f37f74233eb75bb9277e4fbf9bcbc8c52d0efff98c93d099233a64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xAD 0xC2 ORIGIN MSTORE8 PUSH19 0xF37F74233EB75BB9277E4FBF9BCBC8C52D0EFF 0xF9 DUP13 SWAP4 0xD0 SWAP10 0x23 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "344:7386:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042adc2325372f37f74233eb75bb9277e4fbf9bcbc8c52d0efff98c93d099233a64736f6c63430008190033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC20Received.sol",
								"src/Pengyi.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2288,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 2290,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122068a95a45da580c5027c80bb0ad2adc7ce8d4a82ce9349fd310368d54fe58bf8c64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122068a95a45da580c5027c80bb0ad2adc7ce8d4a82ce9349fd310368d54fe58bf8c64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xA95A45DA580C5027C8 SIGNEXTEND 0xB0 0xAD 0x2A 0xDC PUSH29 0xE8D4A82CE9349FD310368D54FE58BF8C64736F6C634300081900330000 ",
							"sourceMap": "521:3235:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122068a95a45da580c5027c80bb0ad2adc7ce8d4a82ce9349fd310368d54fe58bf8c64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xA95A45DA580C5027C8 SIGNEXTEND 0xB0 0xAD 0x2A 0xDC PUSH29 0xE8D4A82CE9349FD310368D54FE58BF8C64736F6C634300081900330000 ",
							"sourceMap": "521:3235:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068a95a45da580c5027c80bb0ad2adc7ce8d4a82ce9349fd310368d54fe58bf8c64736f6c63430008190033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC20Received.sol",
								"src/Pengyi.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC20Received.sol",
								"src/Pengyi.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC20Received.sol",
								"src/Pengyi.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/ERC20Received.sol": {
				"ERC20Received": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,uint256)": "24a756d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20Received.sol\":\"ERC20Received\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC20Received.sol\":{\"keccak256\":\"0xbd16574b1ba13d46cabd1b785d03e5d2382681b6cb404662f5830f48017e0b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d874dec8d927b3e8ba417319ca09399f44a522d7fa390b6897a14072cde31ba\",\"dweb:/ipfs/QmW7jyMtPrpJ2QV4mXNG5roUJBef4eywfKRsyZAQJUiSS7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Pengyi.sol": {
				"MyERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MyERC20__TokenTransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DECIMALS",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Pengyi.sol\":432:1172  contract MyERC20 is ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"src/Pengyi.sol\":554:686  constructor()  ERC20(unicode\"我的名字\", \"PENGYI\") ERC20Permit(\"what\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x7768617400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1613:1617  name */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0xe68891e79a84e5908de5ad970000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x50454e4759490000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_11\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x05\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  shl(0x20, tag_12)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_13\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x06\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup3\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  shl(0x20, tag_12)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3558:3562  name */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3607:3614  version */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_14\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3713  _buildDomainSeparator */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"src/Pengyi.sol\":638:679  _mint(msg.sender, 10000 * 10 ** DECIMALS) */\n  tag_18\n    /* \"src/Pengyi.sol\":644:654  msg.sender */\n  caller\n    /* \"src/Pengyi.sol\":546:548  18 */\n  0x12\n    /* \"src/Pengyi.sol\":664:666  10 */\n  0x0a\n    /* \"src/Pengyi.sol\":664:678  10 ** DECIMALS */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"src/Pengyi.sol\":656:661  10000 */\n  0x2710\n    /* \"src/Pengyi.sol\":656:678  10000 * 10 ** DECIMALS */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"src/Pengyi.sol\":638:643  _mint */\n  shl(0x20, tag_23)\n    /* \"src/Pengyi.sol\":638:679  _mint(msg.sender, 10000 * 10 ** DECIMALS) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"src/Pengyi.sol\":432:1172  contract MyERC20 is ERC20Permit {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_27\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3097  toShortString */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3176:3181  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  tag_30\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3160  StorageSlot.getStringSlot */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3173  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_32\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_32:\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3219:3236  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3195:3237  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_25:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_34\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_40\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_41)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1965:1969  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_46\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1971  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1941:1986  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1917:1987  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3203:3223  StringSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3311:3321  store.slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3301:3321  r.slot := store.slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_51\n  swap2\n  swap1\n  tag_52\n  jump\t// in\ntag_51:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_53)\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_55\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_56\n  jump\t// in\ntag_55:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_58)\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_58:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_59\n  swap2\n  swap1\n  tag_60\n  jump\t// in\ntag_59:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_61:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_62:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_63:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_64:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_104:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_106\n  tag_63\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":714:798   */\ntag_105:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_65:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_66:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_67:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_68:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_111\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_67\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1429:1468   */\n  tag_112\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_67\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_69:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_70:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_71:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_116\n    /* \"#utility.yul\":1818:1852   */\n  tag_117\n    /* \"#utility.yul\":1827:1851   */\n  tag_118\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_69\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1818:1852   */\n  tag_70\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1800:1853   */\n  tag_69\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_72:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_73:\n    /* \"#utility.yul\":2056:2095   */\n  tag_121\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_71\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2117:2208   */\n  tag_122\n    /* \"#utility.yul\":2166:2207   */\n  tag_123\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_72\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_68\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_74:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_75:\n    /* \"#utility.yul\":2377:2409   */\n  tag_126\n  tag_74\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2418:2483   */\n  tag_127\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_73\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_76:\n    /* \"#utility.yul\":2555:2675   */\ntag_129:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_132\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_75\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_129)\ntag_131:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_77:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_135\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_65\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2906:2935   */\n  tag_136\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_66\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_137:\n    /* \"#utility.yul\":3133:3213   */\n  tag_138\n    /* \"#utility.yul\":3189:3211   */\n  tag_139\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_66\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_76\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_134:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_78:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_79:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_142\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_78\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_80:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_144\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_79\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_146\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_61\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_148\n  tag_62\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4038:4094   */\ntag_147:\n    /* \"#utility.yul\":4118:4156   */\n  tag_149\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_64\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4203:4270   */\n  tag_150\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_77\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_152\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_153:\n    /* \"#utility.yul\":5144:5211   */\n  tag_154\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_80\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_151)\n    /* \"#utility.yul\":4365:4983   */\ntag_152:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_155\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_65\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_156:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_156)\ntag_158:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_160\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_79\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_159:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_151:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_81:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_82:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_83:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_164:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_168\n  tag_81\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5753:5803   */\ntag_167:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_169:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_170\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_82\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_164)\ntag_166:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_84:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_172\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_171)\n    /* \"#utility.yul\":6617:6657   */\ntag_172:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_173\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_171)\n    /* \"#utility.yul\":6666:6702   */\ntag_173:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_175\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_176\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_174)\n    /* \"#utility.yul\":6805:6832   */\ntag_175:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_171)\n    /* \"#utility.yul\":6841:7032   */\ntag_176:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_178\n  tag_81\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6870:6913   */\ntag_177:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_180\n  tag_81\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":6964:7004   */\ntag_179:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_171)\n    /* \"#utility.yul\":6755:7032   */\ntag_174:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_183\n  tag_81\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7219:7259   */\ntag_182:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_171)\n    /* \"#utility.yul\":7041:7287   */\ntag_181:\n    /* \"#utility.yul\":7312:7354   */\n  tag_184\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_83\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_186\n  tag_81\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7364:7415   */\ntag_185:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_171:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7547   */\ntag_85:\n    /* \"#utility.yul\":7496:7503   */\n  0x00\n    /* \"#utility.yul\":7536:7540   */\n  0xff\n    /* \"#utility.yul\":7529:7534   */\n  dup3\n    /* \"#utility.yul\":7525:7541   */\n  and\n    /* \"#utility.yul\":7514:7541   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7547   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7553:7834   */\ntag_20:\n    /* \"#utility.yul\":7611:7616   */\n  0x00\n    /* \"#utility.yul\":7635:7658   */\n  tag_189\n    /* \"#utility.yul\":7653:7657   */\n  dup3\n    /* \"#utility.yul\":7635:7658   */\n  tag_69\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":7627:7658   */\n  swap2\n  pop\n    /* \"#utility.yul\":7679:7704   */\n  tag_190\n    /* \"#utility.yul\":7695:7703   */\n  dup4\n    /* \"#utility.yul\":7679:7704   */\n  tag_85\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7667:7704   */\n  swap3\n  pop\n    /* \"#utility.yul\":7723:7827   */\n  tag_191\n    /* \"#utility.yul\":7760:7826   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7750:7758   */\n  dup5\n    /* \"#utility.yul\":7744:7748   */\n  dup5\n    /* \"#utility.yul\":7723:7827   */\n  tag_84\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":7714:7827   */\n  swap1\n  pop\n    /* \"#utility.yul\":7553:7834   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7840:8250   */\ntag_22:\n    /* \"#utility.yul\":7880:7887   */\n  0x00\n    /* \"#utility.yul\":7903:7923   */\n  tag_193\n    /* \"#utility.yul\":7921:7922   */\n  dup3\n    /* \"#utility.yul\":7903:7923   */\n  tag_69\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":7898:7923   */\n  swap2\n  pop\n    /* \"#utility.yul\":7937:7957   */\n  tag_194\n    /* \"#utility.yul\":7955:7956   */\n  dup4\n    /* \"#utility.yul\":7937:7957   */\n  tag_69\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7932:7957   */\n  swap3\n  pop\n    /* \"#utility.yul\":7992:7993   */\n  dup3\n    /* \"#utility.yul\":7989:7990   */\n  dup3\n    /* \"#utility.yul\":7985:7994   */\n  mul\n    /* \"#utility.yul\":8014:8044   */\n  tag_195\n    /* \"#utility.yul\":8032:8043   */\n  dup2\n    /* \"#utility.yul\":8014:8044   */\n  tag_69\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":8003:8044   */\n  swap2\n  pop\n    /* \"#utility.yul\":8193:8194   */\n  dup3\n    /* \"#utility.yul\":8184:8191   */\n  dup3\n    /* \"#utility.yul\":8180:8195   */\n  div\n    /* \"#utility.yul\":8177:8178   */\n  dup5\n    /* \"#utility.yul\":8174:8196   */\n  eq\n    /* \"#utility.yul\":8154:8155   */\n  dup4\n    /* \"#utility.yul\":8147:8156   */\n  iszero\n    /* \"#utility.yul\":8127:8210   */\n  or\n    /* \"#utility.yul\":8104:8243   */\n  tag_196\n  jumpi\n    /* \"#utility.yul\":8223:8241   */\n  tag_197\n  tag_81\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8104:8243   */\ntag_196:\n    /* \"#utility.yul\":7888:8250   */\n  pop\n    /* \"#utility.yul\":7840:8250   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8256:8333   */\ntag_86:\n    /* \"#utility.yul\":8293:8300   */\n  0x00\n    /* \"#utility.yul\":8322:8327   */\n  dup2\n    /* \"#utility.yul\":8311:8327   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8333   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8339:8457   */\ntag_87:\n    /* \"#utility.yul\":8426:8450   */\n  tag_200\n    /* \"#utility.yul\":8444:8449   */\n  dup2\n    /* \"#utility.yul\":8426:8450   */\n  tag_86\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8421:8424   */\n  dup3\n    /* \"#utility.yul\":8414:8451   */\n  mstore\n    /* \"#utility.yul\":8339:8457   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8463:8581   */\ntag_88:\n    /* \"#utility.yul\":8550:8574   */\n  tag_202\n    /* \"#utility.yul\":8568:8573   */\n  dup2\n    /* \"#utility.yul\":8550:8574   */\n  tag_69\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8545:8548   */\n  dup3\n    /* \"#utility.yul\":8538:8575   */\n  mstore\n    /* \"#utility.yul\":8463:8581   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8587:8713   */\ntag_89:\n    /* \"#utility.yul\":8624:8631   */\n  0x00\n    /* \"#utility.yul\":8664:8706   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8657:8662   */\n  dup3\n    /* \"#utility.yul\":8653:8707   */\n  and\n    /* \"#utility.yul\":8642:8707   */\n  swap1\n  pop\n    /* \"#utility.yul\":8587:8713   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8719:8815   */\ntag_90:\n    /* \"#utility.yul\":8756:8763   */\n  0x00\n    /* \"#utility.yul\":8785:8809   */\n  tag_205\n    /* \"#utility.yul\":8803:8808   */\n  dup3\n    /* \"#utility.yul\":8785:8809   */\n  tag_89\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8774:8809   */\n  swap1\n  pop\n    /* \"#utility.yul\":8719:8815   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8821:8939   */\ntag_91:\n    /* \"#utility.yul\":8908:8932   */\n  tag_207\n    /* \"#utility.yul\":8926:8931   */\n  dup2\n    /* \"#utility.yul\":8908:8932   */\n  tag_90\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":8903:8906   */\n  dup3\n    /* \"#utility.yul\":8896:8933   */\n  mstore\n    /* \"#utility.yul\":8821:8939   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8945:9609   */\ntag_35:\n    /* \"#utility.yul\":9150:9154   */\n  0x00\n    /* \"#utility.yul\":9188:9191   */\n  0xa0\n    /* \"#utility.yul\":9177:9186   */\n  dup3\n    /* \"#utility.yul\":9173:9192   */\n  add\n    /* \"#utility.yul\":9165:9192   */\n  swap1\n  pop\n    /* \"#utility.yul\":9202:9273   */\n  tag_209\n    /* \"#utility.yul\":9270:9271   */\n  0x00\n    /* \"#utility.yul\":9259:9268   */\n  dup4\n    /* \"#utility.yul\":9255:9272   */\n  add\n    /* \"#utility.yul\":9246:9252   */\n  dup9\n    /* \"#utility.yul\":9202:9273   */\n  tag_87\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":9283:9355   */\n  tag_210\n    /* \"#utility.yul\":9351:9353   */\n  0x20\n    /* \"#utility.yul\":9340:9349   */\n  dup4\n    /* \"#utility.yul\":9336:9354   */\n  add\n    /* \"#utility.yul\":9327:9333   */\n  dup8\n    /* \"#utility.yul\":9283:9355   */\n  tag_87\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9365:9437   */\n  tag_211\n    /* \"#utility.yul\":9433:9435   */\n  0x40\n    /* \"#utility.yul\":9422:9431   */\n  dup4\n    /* \"#utility.yul\":9418:9436   */\n  add\n    /* \"#utility.yul\":9409:9415   */\n  dup7\n    /* \"#utility.yul\":9365:9437   */\n  tag_87\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":9447:9519   */\n  tag_212\n    /* \"#utility.yul\":9515:9517   */\n  0x60\n    /* \"#utility.yul\":9504:9513   */\n  dup4\n    /* \"#utility.yul\":9500:9518   */\n  add\n    /* \"#utility.yul\":9491:9497   */\n  dup6\n    /* \"#utility.yul\":9447:9519   */\n  tag_88\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9529:9602   */\n  tag_213\n    /* \"#utility.yul\":9597:9600   */\n  0x80\n    /* \"#utility.yul\":9586:9595   */\n  dup4\n    /* \"#utility.yul\":9582:9601   */\n  add\n    /* \"#utility.yul\":9573:9579   */\n  dup5\n    /* \"#utility.yul\":9529:9602   */\n  tag_91\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":8945:9609   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9615:9837   */\ntag_39:\n    /* \"#utility.yul\":9708:9712   */\n  0x00\n    /* \"#utility.yul\":9746:9748   */\n  0x20\n    /* \"#utility.yul\":9735:9744   */\n  dup3\n    /* \"#utility.yul\":9731:9749   */\n  add\n    /* \"#utility.yul\":9723:9749   */\n  swap1\n  pop\n    /* \"#utility.yul\":9759:9830   */\n  tag_215\n    /* \"#utility.yul\":9827:9828   */\n  0x00\n    /* \"#utility.yul\":9816:9825   */\n  dup4\n    /* \"#utility.yul\":9812:9829   */\n  add\n    /* \"#utility.yul\":9803:9809   */\n  dup5\n    /* \"#utility.yul\":9759:9830   */\n  tag_91\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9615:9837   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9843:10012   */\ntag_92:\n    /* \"#utility.yul\":9927:9938   */\n  0x00\n    /* \"#utility.yul\":9961:9967   */\n  dup3\n    /* \"#utility.yul\":9956:9959   */\n  dup3\n    /* \"#utility.yul\":9949:9968   */\n  mstore\n    /* \"#utility.yul\":10001:10005   */\n  0x20\n    /* \"#utility.yul\":9996:9999   */\n  dup3\n    /* \"#utility.yul\":9992:10006   */\n  add\n    /* \"#utility.yul\":9977:10006   */\n  swap1\n  pop\n    /* \"#utility.yul\":9843:10012   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10018:10157   */\ntag_93:\n    /* \"#utility.yul\":10107:10113   */\n  dup3\n    /* \"#utility.yul\":10102:10105   */\n  dup2\n    /* \"#utility.yul\":10097:10100   */\n  dup4\n    /* \"#utility.yul\":10091:10114   */\n  mcopy\n    /* \"#utility.yul\":10148:10149   */\n  0x00\n    /* \"#utility.yul\":10139:10145   */\n  dup4\n    /* \"#utility.yul\":10134:10137   */\n  dup4\n    /* \"#utility.yul\":10130:10146   */\n  add\n    /* \"#utility.yul\":10123:10150   */\n  mstore\n    /* \"#utility.yul\":10018:10157   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10163:10265   */\ntag_94:\n    /* \"#utility.yul\":10204:10210   */\n  0x00\n    /* \"#utility.yul\":10255:10257   */\n  0x1f\n    /* \"#utility.yul\":10251:10258   */\n  not\n    /* \"#utility.yul\":10246:10248   */\n  0x1f\n    /* \"#utility.yul\":10239:10244   */\n  dup4\n    /* \"#utility.yul\":10235:10249   */\n  add\n    /* \"#utility.yul\":10231:10259   */\n  and\n    /* \"#utility.yul\":10221:10259   */\n  swap1\n  pop\n    /* \"#utility.yul\":10163:10265   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10271:10648   */\ntag_95:\n    /* \"#utility.yul\":10359:10362   */\n  0x00\n    /* \"#utility.yul\":10387:10426   */\n  tag_220\n    /* \"#utility.yul\":10420:10425   */\n  dup3\n    /* \"#utility.yul\":10387:10426   */\n  tag_61\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":10442:10513   */\n  tag_221\n    /* \"#utility.yul\":10506:10512   */\n  dup2\n    /* \"#utility.yul\":10501:10504   */\n  dup6\n    /* \"#utility.yul\":10442:10513   */\n  tag_92\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":10435:10513   */\n  swap4\n  pop\n    /* \"#utility.yul\":10522:10587   */\n  tag_222\n    /* \"#utility.yul\":10580:10586   */\n  dup2\n    /* \"#utility.yul\":10575:10578   */\n  dup6\n    /* \"#utility.yul\":10568:10572   */\n  0x20\n    /* \"#utility.yul\":10561:10566   */\n  dup7\n    /* \"#utility.yul\":10557:10573   */\n  add\n    /* \"#utility.yul\":10522:10587   */\n  tag_93\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10612:10641   */\n  tag_223\n    /* \"#utility.yul\":10634:10640   */\n  dup2\n    /* \"#utility.yul\":10612:10641   */\n  tag_94\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10607:10610   */\n  dup5\n    /* \"#utility.yul\":10603:10642   */\n  add\n    /* \"#utility.yul\":10596:10642   */\n  swap2\n  pop\n    /* \"#utility.yul\":10363:10648   */\n  pop\n    /* \"#utility.yul\":10271:10648   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10654:10967   */\ntag_45:\n    /* \"#utility.yul\":10767:10771   */\n  0x00\n    /* \"#utility.yul\":10805:10807   */\n  0x20\n    /* \"#utility.yul\":10794:10803   */\n  dup3\n    /* \"#utility.yul\":10790:10808   */\n  add\n    /* \"#utility.yul\":10782:10808   */\n  swap1\n  pop\n    /* \"#utility.yul\":10854:10863   */\n  dup2\n    /* \"#utility.yul\":10848:10852   */\n  dup2\n    /* \"#utility.yul\":10844:10864   */\n  sub\n    /* \"#utility.yul\":10840:10841   */\n  0x00\n    /* \"#utility.yul\":10829:10838   */\n  dup4\n    /* \"#utility.yul\":10825:10842   */\n  add\n    /* \"#utility.yul\":10818:10865   */\n  mstore\n    /* \"#utility.yul\":10882:10960   */\n  tag_225\n    /* \"#utility.yul\":10955:10959   */\n  dup2\n    /* \"#utility.yul\":10946:10952   */\n  dup5\n    /* \"#utility.yul\":10882:10960   */\n  tag_95\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":10874:10960   */\n  swap1\n  pop\n    /* \"#utility.yul\":10654:10967   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10973:11071   */\ntag_96:\n    /* \"#utility.yul\":11024:11030   */\n  0x00\n    /* \"#utility.yul\":11058:11063   */\n  dup2\n    /* \"#utility.yul\":11052:11064   */\n  mload\n    /* \"#utility.yul\":11042:11064   */\n  swap1\n  pop\n    /* \"#utility.yul\":10973:11071   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11077:11193   */\ntag_97:\n    /* \"#utility.yul\":11128:11132   */\n  0x00\n    /* \"#utility.yul\":11151:11154   */\n  dup2\n    /* \"#utility.yul\":11143:11154   */\n  swap1\n  pop\n    /* \"#utility.yul\":11181:11185   */\n  0x20\n    /* \"#utility.yul\":11176:11179   */\n  dup3\n    /* \"#utility.yul\":11172:11186   */\n  add\n    /* \"#utility.yul\":11164:11186   */\n  swap1\n  pop\n    /* \"#utility.yul\":11077:11193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11199:11353   */\ntag_98:\n    /* \"#utility.yul\":11242:11253   */\n  0x00\n    /* \"#utility.yul\":11278:11307   */\n  tag_229\n    /* \"#utility.yul\":11302:11305   */\n  dup3\n    /* \"#utility.yul\":11296:11306   */\n  mload\n    /* \"#utility.yul\":11278:11307   */\n  tag_86\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":11341:11346   */\n  dup1\n    /* \"#utility.yul\":11317:11346   */\n  swap2\n  pop\n    /* \"#utility.yul\":11254:11353   */\n  pop\n    /* \"#utility.yul\":11199:11353   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11359:11953   */\ntag_47:\n    /* \"#utility.yul\":11443:11448   */\n  0x00\n    /* \"#utility.yul\":11474:11512   */\n  tag_231\n    /* \"#utility.yul\":11506:11511   */\n  dup3\n    /* \"#utility.yul\":11474:11512   */\n  tag_96\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":11537:11542   */\n  dup3\n    /* \"#utility.yul\":11564:11604   */\n  tag_232\n    /* \"#utility.yul\":11598:11603   */\n  dup5\n    /* \"#utility.yul\":11564:11604   */\n  tag_97\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":11552:11604   */\n  swap1\n  pop\n    /* \"#utility.yul\":11623:11658   */\n  tag_233\n    /* \"#utility.yul\":11649:11657   */\n  dup2\n    /* \"#utility.yul\":11623:11658   */\n  tag_98\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":11614:11658   */\n  swap3\n  pop\n    /* \"#utility.yul\":11682:11684   */\n  0x20\n    /* \"#utility.yul\":11674:11680   */\n  dup3\n    /* \"#utility.yul\":11671:11685   */\n  lt\n    /* \"#utility.yul\":11668:11946   */\n  iszero\n  tag_234\n  jumpi\n    /* \"#utility.yul\":11753:11922   */\n  tag_235\n    /* \"#utility.yul\":11838:11904   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11808:11814   */\n  dup4\n    /* \"#utility.yul\":11804:11806   */\n  0x20\n    /* \"#utility.yul\":11800:11815   */\n  sub\n    /* \"#utility.yul\":11797:11798   */\n  0x08\n    /* \"#utility.yul\":11793:11816   */\n  mul\n    /* \"#utility.yul\":11753:11922   */\n  tag_67\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":11730:11735   */\n  dup4\n    /* \"#utility.yul\":11709:11936   */\n  and\n    /* \"#utility.yul\":11700:11936   */\n  swap3\n  pop\n    /* \"#utility.yul\":11668:11946   */\ntag_234:\n    /* \"#utility.yul\":11449:11953   */\n  pop\n  pop\n    /* \"#utility.yul\":11359:11953   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11959:12150   */\ntag_52:\n    /* \"#utility.yul\":11999:12002   */\n  0x00\n    /* \"#utility.yul\":12018:12038   */\n  tag_237\n    /* \"#utility.yul\":12036:12037   */\n  dup3\n    /* \"#utility.yul\":12018:12038   */\n  tag_69\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":12013:12038   */\n  swap2\n  pop\n    /* \"#utility.yul\":12052:12072   */\n  tag_238\n    /* \"#utility.yul\":12070:12071   */\n  dup4\n    /* \"#utility.yul\":12052:12072   */\n  tag_69\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":12047:12072   */\n  swap3\n  pop\n    /* \"#utility.yul\":12095:12096   */\n  dup3\n    /* \"#utility.yul\":12092:12093   */\n  dup3\n    /* \"#utility.yul\":12088:12097   */\n  add\n    /* \"#utility.yul\":12081:12097   */\n  swap1\n  pop\n    /* \"#utility.yul\":12116:12119   */\n  dup1\n    /* \"#utility.yul\":12113:12114   */\n  dup3\n    /* \"#utility.yul\":12110:12120   */\n  gt\n    /* \"#utility.yul\":12107:12143   */\n  iszero\n  tag_239\n  jumpi\n    /* \"#utility.yul\":12123:12141   */\n  tag_240\n  tag_81\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":12107:12143   */\ntag_239:\n    /* \"#utility.yul\":11959:12150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12156:12598   */\ntag_56:\n    /* \"#utility.yul\":12305:12309   */\n  0x00\n    /* \"#utility.yul\":12343:12345   */\n  0x60\n    /* \"#utility.yul\":12332:12341   */\n  dup3\n    /* \"#utility.yul\":12328:12346   */\n  add\n    /* \"#utility.yul\":12320:12346   */\n  swap1\n  pop\n    /* \"#utility.yul\":12356:12427   */\n  tag_242\n    /* \"#utility.yul\":12424:12425   */\n  0x00\n    /* \"#utility.yul\":12413:12422   */\n  dup4\n    /* \"#utility.yul\":12409:12426   */\n  add\n    /* \"#utility.yul\":12400:12406   */\n  dup7\n    /* \"#utility.yul\":12356:12427   */\n  tag_91\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":12437:12509   */\n  tag_243\n    /* \"#utility.yul\":12505:12507   */\n  0x20\n    /* \"#utility.yul\":12494:12503   */\n  dup4\n    /* \"#utility.yul\":12490:12508   */\n  add\n    /* \"#utility.yul\":12481:12487   */\n  dup6\n    /* \"#utility.yul\":12437:12509   */\n  tag_88\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":12519:12591   */\n  tag_244\n    /* \"#utility.yul\":12587:12589   */\n  0x40\n    /* \"#utility.yul\":12576:12585   */\n  dup4\n    /* \"#utility.yul\":12572:12590   */\n  add\n    /* \"#utility.yul\":12563:12569   */\n  dup5\n    /* \"#utility.yul\":12519:12591   */\n  tag_88\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12156:12598   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12604:12826   */\ntag_60:\n    /* \"#utility.yul\":12697:12701   */\n  0x00\n    /* \"#utility.yul\":12735:12737   */\n  0x20\n    /* \"#utility.yul\":12724:12733   */\n  dup3\n    /* \"#utility.yul\":12720:12738   */\n  add\n    /* \"#utility.yul\":12712:12738   */\n  swap1\n  pop\n    /* \"#utility.yul\":12748:12819   */\n  tag_246\n    /* \"#utility.yul\":12816:12817   */\n  0x00\n    /* \"#utility.yul\":12805:12814   */\n  dup4\n    /* \"#utility.yul\":12801:12818   */\n  add\n    /* \"#utility.yul\":12792:12798   */\n  dup5\n    /* \"#utility.yul\":12748:12819   */\n  tag_88\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":12604:12826   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/Pengyi.sol\":432:1172  contract MyERC20 is ERC20Permit {... */\ntag_24:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xdba8b0b8e501f759a8c83a907ffb04cbc3a8a2e872518f41faf883452be80a1c\")\n  0x00\n  assignImmutable(\"0xf8b0317fd587bf1e6954a65e833a5ea2239bc9d2e375dac6e96d9b8626e60adf\")\n  0x00\n  assignImmutable(\"0xd7e1af5f2a75086df1f992c8dfffdd87d9fb225c1b7131d986337c87ef4405ef\")\n  0x00\n  assignImmutable(\"0xf29398e6820a4cd10a2a2df5fd36897bdb56f6250cd285b7278fe6c2282b86c4\")\n  0x00\n  assignImmutable(\"0x392f803f4915d398ff33d9d04445e73c689400796f980a7ed2a6b828966be3d5\")\n  0x00\n  assignImmutable(\"0xfc9caf2091302d6ac47af78cd21cd746adc94e94de41b5f6d8cc1fc71a5111e6\")\n  0x00\n  assignImmutable(\"0x174bf242febf647ffd2a86aca0f2b3ad467e847e817984bd24c678e79e66ec76\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/Pengyi.sol\":432:1172  contract MyERC20 is ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e0f2625\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Pengyi.sol\":513:548  uint8 public constant DECIMALS = 18 */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_12:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Pengyi.sol\":724:1170  function transfer(address to, uint256 amount) public override returns (bool success) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_81\n      jump\t// in\n    tag_82:\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_84\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_83)\n    tag_84:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_85:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_85\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Pengyi.sol\":513:548  uint8 public constant DECIMALS = 18 */\n    tag_40:\n        /* \"src/Pengyi.sol\":546:548  18 */\n      0x12\n        /* \"src/Pengyi.sol\":513:548  uint8 public constant DECIMALS = 18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2715:2722  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2759  _domainSeparatorV4 */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2734:2761  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2497:2504  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2536:2541  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2535  super.nonces */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2516:2542  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_60:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5644:5654  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5682:5683  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_111\n      jumpi\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n    tag_111:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_114:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_81\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_81\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/Pengyi.sol\":724:1170  function transfer(address to, uint256 amount) public override returns (bool success) {... */\n    tag_68:\n        /* \"src/Pengyi.sol\":795:807  bool success */\n      0x00\n        /* \"src/Pengyi.sol\":819:852  _transfer(msg.sender, to, amount) */\n      tag_122\n        /* \"src/Pengyi.sol\":829:839  msg.sender */\n      caller\n        /* \"src/Pengyi.sol\":841:843  to */\n      dup5\n        /* \"src/Pengyi.sol\":845:851  amount */\n      dup5\n        /* \"src/Pengyi.sol\":819:828  _transfer */\n      tag_97\n        /* \"src/Pengyi.sol\":819:852  _transfer(msg.sender, to, amount) */\n      jump\t// in\n    tag_122:\n        /* \"src/Pengyi.sol\":862:873  uint32 size */\n      0x00\n        /* \"src/Pengyi.sol\":926:928  to */\n      dup4\n        /* \"src/Pengyi.sol\":914:929  extcodesize(to) */\n      extcodesize\n        /* \"src/Pengyi.sol\":906:929  size := extcodesize(to) */\n      swap1\n      pop\n        /* \"src/Pengyi.sol\":959:960  0 */\n      0x00\n        /* \"src/Pengyi.sol\":952:956  size */\n      dup2\n        /* \"src/Pengyi.sol\":952:960  size > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"src/Pengyi.sol\":949:1140  if(size > 0) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"src/Pengyi.sol\":976:983  bool rv */\n      0x00\n        /* \"src/Pengyi.sol\":1000:1002  to */\n      dup5\n        /* \"src/Pengyi.sol\":986:1018  ERC20Received(to).tokensReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24a756d1\n        /* \"src/Pengyi.sol\":1019:1029  msg.sender */\n      caller\n        /* \"src/Pengyi.sol\":1031:1037  amount */\n      dup7\n        /* \"src/Pengyi.sol\":986:1038  ERC20Received(to).tokensReceived(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"src/Pengyi.sol\":976:1038  bool rv = ERC20Received(to).tokensReceived(msg.sender, amount) */\n      swap1\n      pop\n        /* \"src/Pengyi.sol\":1056:1058  rv */\n      dup1\n        /* \"src/Pengyi.sol\":1052:1130  if(!rv) {... */\n      tag_130\n      jumpi\n        /* \"src/Pengyi.sol\":1085:1115  MyERC20__TokenTransferFailed() */\n      mload(0x40)\n      0x90d52e8700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Pengyi.sol\":1052:1130  if(!rv) {... */\n    tag_130:\n        /* \"src/Pengyi.sol\":962:1140  {... */\n      pop\n        /* \"src/Pengyi.sol\":949:1140  if(size > 0) {... */\n    tag_123:\n        /* \"src/Pengyi.sol\":1159:1163  true */\n      0x01\n        /* \"src/Pengyi.sol\":1149:1163  success = true */\n      swap2\n      pop\n        /* \"src/Pengyi.sol\":809:1170  {... */\n      pop\n        /* \"src/Pengyi.sol\":724:1170  function transfer(address to, uint256 amount) public override returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1901:1909  deadline */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1883:1898  block.timestamp */\n      timestamp\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1883:1909  block.timestamp > deadline */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1956:1964  deadline */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1932:1965  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1986:2004  bytes32 structHash */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1022:1117  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2045:2050  owner */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2052:2059  spender */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2061:2066  value */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2078:2083  owner */\n      dup13\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2077  _useNonce */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2086:2094  deadline */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2017:2095  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_136\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2007:2096  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1986:2096  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2107:2119  bytes32 hash */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2139:2149  structHash */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2138  _hashTypedDataV4 */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2107:2150  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2161:2175  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2192:2196  hash */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2198:2199  v */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2201:2202  r */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2204:2205  s */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2191  ECDSA.recover */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2161:2206  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2230:2235  owner */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2226  signer */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2279:2285  signer */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2287:2292  owner */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2258:2293  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2323:2328  owner */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2330:2337  spender */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2339:2344  value */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2322  _approve */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1869:2352  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3898:3905  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3938:3949  _cachedThis */\n      immutable(\"0x392f803f4915d398ff33d9d04445e73c689400796f980a7ed2a6b828966be3d5\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3929:3933  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3970:3984  _cachedChainId */\n      immutable(\"0xfc9caf2091302d6ac47af78cd21cd746adc94e94de41b5f6d8cc1fc71a5111e6\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3966  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3984  block.chainid == _cachedChainId */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4007:4029  _cachedDomainSeparator */\n      immutable(\"0x174bf242febf647ffd2a86aca0f2b3ad467e847e817984bd24c678e79e66ec76\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4000:4029  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_166)\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4088  _buildDomainSeparator */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4060:4090  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_166:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":598:605  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":624:631  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":632:637  owner */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":617:638  return _nonces[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x05\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0xf8b0317fd587bf1e6954a65e833a5ea2239bc9d2e375dac6e96d9b8626e60adf\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_175\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6092:6140  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_177\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x06\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0xdba8b0b8e501f759a8c83a907ffb04cbc3a8a2e872518f41faf883452be80a1c\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_175\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6547:6601  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":819:826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1128  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1129:1134  owner */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1137  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1114:1137  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_180\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      tag_181\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5071  _domainSeparatorV4 */\n      tag_101\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5075:5085  structHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5052  MessageHashUtils.toTypedDataHash */\n      tag_182\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5013:5086  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6888:6895  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6908:6925  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6927:6945  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6947:6963  bytes32 errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6978:6982  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6984:6985  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6987:6988  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6990:6991  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6977  tryRecover */\n      tag_185\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6907:6992  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      tag_186\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7014:7019  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7021:7029  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7013  _throwError */\n      tag_187\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7047:7056  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7040:7056  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_194\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_199)\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_203)\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n      immutable(\"0xf29398e6820a4cd10a2a2df5fd36897bdb56f6250cd285b7278fe6c2282b86c4\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n      immutable(\"0xd7e1af5f2a75086df1f992c8dfffdd87d9fb225c1b7131d986337c87ef4405ef\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_206\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3537:3554  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3527:3532  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_208)\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_213\n      swap1\n      tag_81\n      jump\t// in\n    tag_213:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_214\n      swap1\n      tag_81\n      jump\t// in\n    tag_214:\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_216\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_215)\n    tag_216:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_217:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_217\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_208:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3446:3460  bytes32 digest */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3555:3559  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3549:3560  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3585:3595  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3580:3583  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3573:3596  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3632:3647  domainSeparator */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3625:3629  0x02 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3620:3623  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3616:3630  add(ptr, 0x02) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3609:3648  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3684:3694  structHash */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3677:3681  0x22 */\n      0x22\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3672:3675  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3668:3682  add(ptr, 0x22) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3661:3695  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3733:3737  0x42 */\n      0x42\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3728:3731  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3718:3738  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3708:3738  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3524:3748  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5275:5287  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5289:5296  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6194:6195  s */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6196  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_219)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6467:6471  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6473:6474  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6476:6477  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6479:6480  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_221\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6481  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6513:6514  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6501  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6590:6591  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6582:6592  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_219)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6660:6661  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6652:6662  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6614:6663  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_219:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_228\n      tag_229\n      jump\t// in\n    tag_228:\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_230\n      jumpi\n      tag_231\n      tag_229\n      jump\t// in\n    tag_231:\n    tag_230:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7327:7334  return; */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_234\n      jumpi\n      tag_235\n      tag_229\n      jump\t// in\n    tag_235:\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_236\n      jumpi\n      tag_237\n      tag_229\n      jump\t// in\n    tag_237:\n    tag_236:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_241\n      tag_229\n      jump\t// in\n    tag_241:\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_242\n      jumpi\n      tag_243\n      tag_229\n      jump\t// in\n    tag_243:\n    tag_242:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7586:7594  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7578:7595  uint256(errorArg) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_247\n      jumpi\n      tag_248\n      tag_229\n      jump\t// in\n    tag_248:\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_249\n      jumpi\n      tag_250\n      tag_229\n      jump\t// in\n    tag_250:\n    tag_249:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7702:7710  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_226:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_254\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_256\n      jumpi\n      tag_257\n      tag_113\n      jump\t// in\n    tag_257:\n    tag_256:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_258\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_258:\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2314  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2402:2405  len */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2397:2400  str */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2442:2446  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2430:2433  str */\n      dup3\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2473:2476  str */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2466:2476  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2649  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2679:2683  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2685  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2692  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2712  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      gt\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2787:2793  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2780:2793  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_261:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_262:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_263:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_264:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_265:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_307\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_261\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":711:782   */\n      tag_308\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_262\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_309\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_263\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":881:910   */\n      tag_310\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_264\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_23:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_312\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_265\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_267:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_269:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_270:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_318\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_269\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_271:\n        /* \"#utility.yul\":1876:1900   */\n      tag_320\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_270\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_321:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_272:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_323\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_271\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_273:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_274:\n        /* \"#utility.yul\":2232:2256   */\n      tag_326\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_273\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_327:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_275:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_329\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_274\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_26:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_332\n      tag_267\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2525:2644   */\n    tag_331:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_333\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_272\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_334\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_275\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_276:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_277:\n        /* \"#utility.yul\":3089:3110   */\n      tag_337\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_276\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_29:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_339\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_277\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_278:\n        /* \"#utility.yul\":3426:3450   */\n      tag_341\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_273\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_33:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_343\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_278\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_36:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_346\n      tag_267\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3801:3920   */\n    tag_345:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_347\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_272\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_348\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_272\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_349\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_275\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_279:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_280:\n        /* \"#utility.yul\":4491:4513   */\n      tag_352\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_279\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_42:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_354\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_280\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4823   */\n    tag_281:\n        /* \"#utility.yul\":4783:4790   */\n      0x00\n        /* \"#utility.yul\":4812:4817   */\n      dup2\n        /* \"#utility.yul\":4801:4817   */\n      swap1\n      pop\n        /* \"#utility.yul\":4746:4823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4829:4947   */\n    tag_282:\n        /* \"#utility.yul\":4916:4940   */\n      tag_357\n        /* \"#utility.yul\":4934:4939   */\n      dup2\n        /* \"#utility.yul\":4916:4940   */\n      tag_281\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4911:4914   */\n      dup3\n        /* \"#utility.yul\":4904:4941   */\n      mstore\n        /* \"#utility.yul\":4829:4947   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4953:5175   */\n    tag_49:\n        /* \"#utility.yul\":5046:5050   */\n      0x00\n        /* \"#utility.yul\":5084:5086   */\n      0x20\n        /* \"#utility.yul\":5073:5082   */\n      dup3\n        /* \"#utility.yul\":5069:5087   */\n      add\n        /* \"#utility.yul\":5061:5087   */\n      swap1\n      pop\n        /* \"#utility.yul\":5097:5168   */\n      tag_359\n        /* \"#utility.yul\":5165:5166   */\n      0x00\n        /* \"#utility.yul\":5154:5163   */\n      dup4\n        /* \"#utility.yul\":5150:5167   */\n      add\n        /* \"#utility.yul\":5141:5147   */\n      dup5\n        /* \"#utility.yul\":5097:5168   */\n      tag_282\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4953:5175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5181:5510   */\n    tag_52:\n        /* \"#utility.yul\":5240:5246   */\n      0x00\n        /* \"#utility.yul\":5289:5291   */\n      0x20\n        /* \"#utility.yul\":5277:5286   */\n      dup3\n        /* \"#utility.yul\":5268:5275   */\n      dup5\n        /* \"#utility.yul\":5264:5287   */\n      sub\n        /* \"#utility.yul\":5260:5292   */\n      slt\n        /* \"#utility.yul\":5257:5376   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":5295:5374   */\n      tag_362\n      tag_267\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5257:5376   */\n    tag_361:\n        /* \"#utility.yul\":5415:5416   */\n      0x00\n        /* \"#utility.yul\":5440:5493   */\n      tag_363\n        /* \"#utility.yul\":5485:5492   */\n      dup5\n        /* \"#utility.yul\":5476:5482   */\n      dup3\n        /* \"#utility.yul\":5465:5474   */\n      dup6\n        /* \"#utility.yul\":5461:5483   */\n      add\n        /* \"#utility.yul\":5440:5493   */\n      tag_272\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5430:5493   */\n      swap2\n      pop\n        /* \"#utility.yul\":5386:5503   */\n      pop\n        /* \"#utility.yul\":5181:5510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5516:5665   */\n    tag_283:\n        /* \"#utility.yul\":5552:5559   */\n      0x00\n        /* \"#utility.yul\":5592:5658   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5585:5590   */\n      dup3\n        /* \"#utility.yul\":5581:5659   */\n      and\n        /* \"#utility.yul\":5570:5659   */\n      swap1\n      pop\n        /* \"#utility.yul\":5516:5665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5671:5786   */\n    tag_284:\n        /* \"#utility.yul\":5756:5779   */\n      tag_366\n        /* \"#utility.yul\":5773:5778   */\n      dup2\n        /* \"#utility.yul\":5756:5779   */\n      tag_283\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5751:5754   */\n      dup3\n        /* \"#utility.yul\":5744:5780   */\n      mstore\n        /* \"#utility.yul\":5671:5786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5792:5910   */\n    tag_285:\n        /* \"#utility.yul\":5879:5903   */\n      tag_368\n        /* \"#utility.yul\":5897:5902   */\n      dup2\n        /* \"#utility.yul\":5879:5903   */\n      tag_270\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5874:5877   */\n      dup3\n        /* \"#utility.yul\":5867:5904   */\n      mstore\n        /* \"#utility.yul\":5792:5910   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5916:6030   */\n    tag_286:\n        /* \"#utility.yul\":5983:5989   */\n      0x00\n        /* \"#utility.yul\":6017:6022   */\n      dup2\n        /* \"#utility.yul\":6011:6023   */\n      mload\n        /* \"#utility.yul\":6001:6023   */\n      swap1\n      pop\n        /* \"#utility.yul\":5916:6030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6036:6220   */\n    tag_287:\n        /* \"#utility.yul\":6135:6146   */\n      0x00\n        /* \"#utility.yul\":6169:6175   */\n      dup3\n        /* \"#utility.yul\":6164:6167   */\n      dup3\n        /* \"#utility.yul\":6157:6176   */\n      mstore\n        /* \"#utility.yul\":6209:6213   */\n      0x20\n        /* \"#utility.yul\":6204:6207   */\n      dup3\n        /* \"#utility.yul\":6200:6214   */\n      add\n        /* \"#utility.yul\":6185:6214   */\n      swap1\n      pop\n        /* \"#utility.yul\":6036:6220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6226:6358   */\n    tag_288:\n        /* \"#utility.yul\":6293:6297   */\n      0x00\n        /* \"#utility.yul\":6316:6319   */\n      dup2\n        /* \"#utility.yul\":6308:6319   */\n      swap1\n      pop\n        /* \"#utility.yul\":6346:6350   */\n      0x20\n        /* \"#utility.yul\":6341:6344   */\n      dup3\n        /* \"#utility.yul\":6337:6351   */\n      add\n        /* \"#utility.yul\":6329:6351   */\n      swap1\n      pop\n        /* \"#utility.yul\":6226:6358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6364:6472   */\n    tag_289:\n        /* \"#utility.yul\":6441:6465   */\n      tag_373\n        /* \"#utility.yul\":6459:6464   */\n      dup2\n        /* \"#utility.yul\":6441:6465   */\n      tag_273\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6436:6439   */\n      dup3\n        /* \"#utility.yul\":6429:6466   */\n      mstore\n        /* \"#utility.yul\":6364:6472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6478:6657   */\n    tag_290:\n        /* \"#utility.yul\":6547:6557   */\n      0x00\n        /* \"#utility.yul\":6568:6614   */\n      tag_375\n        /* \"#utility.yul\":6610:6613   */\n      dup4\n        /* \"#utility.yul\":6602:6608   */\n      dup4\n        /* \"#utility.yul\":6568:6614   */\n      tag_289\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6646:6650   */\n      0x20\n        /* \"#utility.yul\":6641:6644   */\n      dup4\n        /* \"#utility.yul\":6637:6651   */\n      add\n        /* \"#utility.yul\":6623:6651   */\n      swap1\n      pop\n        /* \"#utility.yul\":6478:6657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6663:6776   */\n    tag_291:\n        /* \"#utility.yul\":6733:6737   */\n      0x00\n        /* \"#utility.yul\":6765:6769   */\n      0x20\n        /* \"#utility.yul\":6760:6763   */\n      dup3\n        /* \"#utility.yul\":6756:6770   */\n      add\n        /* \"#utility.yul\":6748:6770   */\n      swap1\n      pop\n        /* \"#utility.yul\":6663:6776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6812:7544   */\n    tag_292:\n        /* \"#utility.yul\":6931:6934   */\n      0x00\n        /* \"#utility.yul\":6960:7014   */\n      tag_378\n        /* \"#utility.yul\":7008:7013   */\n      dup3\n        /* \"#utility.yul\":6960:7014   */\n      tag_286\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7030:7116   */\n      tag_379\n        /* \"#utility.yul\":7109:7115   */\n      dup2\n        /* \"#utility.yul\":7104:7107   */\n      dup6\n        /* \"#utility.yul\":7030:7116   */\n      tag_287\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7023:7116   */\n      swap4\n      pop\n        /* \"#utility.yul\":7140:7196   */\n      tag_380\n        /* \"#utility.yul\":7190:7195   */\n      dup4\n        /* \"#utility.yul\":7140:7196   */\n      tag_288\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7219:7226   */\n      dup1\n        /* \"#utility.yul\":7250:7251   */\n      0x00\n        /* \"#utility.yul\":7235:7519   */\n    tag_381:\n        /* \"#utility.yul\":7260:7266   */\n      dup4\n        /* \"#utility.yul\":7257:7258   */\n      dup2\n        /* \"#utility.yul\":7254:7267   */\n      lt\n        /* \"#utility.yul\":7235:7519   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7336:7342   */\n      dup2\n        /* \"#utility.yul\":7330:7343   */\n      mload\n        /* \"#utility.yul\":7363:7426   */\n      tag_384\n        /* \"#utility.yul\":7422:7425   */\n      dup9\n        /* \"#utility.yul\":7407:7420   */\n      dup3\n        /* \"#utility.yul\":7363:7426   */\n      tag_290\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7356:7426   */\n      swap8\n      pop\n        /* \"#utility.yul\":7449:7509   */\n      tag_385\n        /* \"#utility.yul\":7502:7508   */\n      dup4\n        /* \"#utility.yul\":7449:7509   */\n      tag_291\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7439:7509   */\n      swap3\n      pop\n        /* \"#utility.yul\":7295:7519   */\n      pop\n        /* \"#utility.yul\":7282:7283   */\n      0x01\n        /* \"#utility.yul\":7279:7280   */\n      dup2\n        /* \"#utility.yul\":7275:7284   */\n      add\n        /* \"#utility.yul\":7270:7284   */\n      swap1\n      pop\n        /* \"#utility.yul\":7235:7519   */\n      jump(tag_381)\n    tag_383:\n        /* \"#utility.yul\":7239:7253   */\n      pop\n        /* \"#utility.yul\":7535:7538   */\n      dup6\n        /* \"#utility.yul\":7528:7538   */\n      swap4\n      pop\n        /* \"#utility.yul\":6936:7544   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6812:7544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7550:8765   */\n    tag_62:\n        /* \"#utility.yul\":7899:7903   */\n      0x00\n        /* \"#utility.yul\":7937:7940   */\n      0xe0\n        /* \"#utility.yul\":7926:7935   */\n      dup3\n        /* \"#utility.yul\":7922:7941   */\n      add\n        /* \"#utility.yul\":7914:7941   */\n      swap1\n      pop\n        /* \"#utility.yul\":7951:8020   */\n      tag_387\n        /* \"#utility.yul\":8017:8018   */\n      0x00\n        /* \"#utility.yul\":8006:8015   */\n      dup4\n        /* \"#utility.yul\":8002:8019   */\n      add\n        /* \"#utility.yul\":7993:7999   */\n      dup11\n        /* \"#utility.yul\":7951:8020   */\n      tag_284\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8067:8076   */\n      dup2\n        /* \"#utility.yul\":8061:8065   */\n      dup2\n        /* \"#utility.yul\":8057:8077   */\n      sub\n        /* \"#utility.yul\":8052:8054   */\n      0x20\n        /* \"#utility.yul\":8041:8050   */\n      dup4\n        /* \"#utility.yul\":8037:8055   */\n      add\n        /* \"#utility.yul\":8030:8078   */\n      mstore\n        /* \"#utility.yul\":8095:8173   */\n      tag_388\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8159:8165   */\n      dup10\n        /* \"#utility.yul\":8095:8173   */\n      tag_265\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8087:8173   */\n      swap1\n      pop\n        /* \"#utility.yul\":8220:8229   */\n      dup2\n        /* \"#utility.yul\":8214:8218   */\n      dup2\n        /* \"#utility.yul\":8210:8230   */\n      sub\n        /* \"#utility.yul\":8205:8207   */\n      0x40\n        /* \"#utility.yul\":8194:8203   */\n      dup4\n        /* \"#utility.yul\":8190:8208   */\n      add\n        /* \"#utility.yul\":8183:8231   */\n      mstore\n        /* \"#utility.yul\":8248:8326   */\n      tag_389\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8312:8318   */\n      dup9\n        /* \"#utility.yul\":8248:8326   */\n      tag_265\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8240:8326   */\n      swap1\n      pop\n        /* \"#utility.yul\":8336:8408   */\n      tag_390\n        /* \"#utility.yul\":8404:8406   */\n      0x60\n        /* \"#utility.yul\":8393:8402   */\n      dup4\n        /* \"#utility.yul\":8389:8407   */\n      add\n        /* \"#utility.yul\":8380:8386   */\n      dup8\n        /* \"#utility.yul\":8336:8408   */\n      tag_278\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8418:8491   */\n      tag_391\n        /* \"#utility.yul\":8486:8489   */\n      0x80\n        /* \"#utility.yul\":8475:8484   */\n      dup4\n        /* \"#utility.yul\":8471:8490   */\n      add\n        /* \"#utility.yul\":8462:8468   */\n      dup7\n        /* \"#utility.yul\":8418:8491   */\n      tag_285\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8501:8574   */\n      tag_392\n        /* \"#utility.yul\":8569:8572   */\n      0xa0\n        /* \"#utility.yul\":8558:8567   */\n      dup4\n        /* \"#utility.yul\":8554:8573   */\n      add\n        /* \"#utility.yul\":8545:8551   */\n      dup6\n        /* \"#utility.yul\":8501:8574   */\n      tag_282\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8622:8631   */\n      dup2\n        /* \"#utility.yul\":8616:8620   */\n      dup2\n        /* \"#utility.yul\":8612:8632   */\n      sub\n        /* \"#utility.yul\":8606:8609   */\n      0xc0\n        /* \"#utility.yul\":8595:8604   */\n      dup4\n        /* \"#utility.yul\":8591:8610   */\n      add\n        /* \"#utility.yul\":8584:8633   */\n      mstore\n        /* \"#utility.yul\":8650:8758   */\n      tag_393\n        /* \"#utility.yul\":8753:8757   */\n      dup2\n        /* \"#utility.yul\":8744:8750   */\n      dup5\n        /* \"#utility.yul\":8650:8758   */\n      tag_292\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8642:8758   */\n      swap1\n      pop\n        /* \"#utility.yul\":7550:8765   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8771:8889   */\n    tag_293:\n        /* \"#utility.yul\":8842:8864   */\n      tag_395\n        /* \"#utility.yul\":8858:8863   */\n      dup2\n        /* \"#utility.yul\":8842:8864   */\n      tag_279\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8835:8840   */\n      dup2\n        /* \"#utility.yul\":8832:8865   */\n      eq\n        /* \"#utility.yul\":8822:8883   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":8879:8880   */\n      0x00\n        /* \"#utility.yul\":8876:8877   */\n      dup1\n        /* \"#utility.yul\":8869:8881   */\n      revert\n        /* \"#utility.yul\":8822:8883   */\n    tag_396:\n        /* \"#utility.yul\":8771:8889   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8895:9030   */\n    tag_294:\n        /* \"#utility.yul\":8939:8944   */\n      0x00\n        /* \"#utility.yul\":8977:8983   */\n      dup2\n        /* \"#utility.yul\":8964:8984   */\n      calldataload\n        /* \"#utility.yul\":8955:8984   */\n      swap1\n      pop\n        /* \"#utility.yul\":8993:9024   */\n      tag_398\n        /* \"#utility.yul\":9018:9023   */\n      dup2\n        /* \"#utility.yul\":8993:9024   */\n      tag_293\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8895:9030   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9036:9158   */\n    tag_295:\n        /* \"#utility.yul\":9109:9133   */\n      tag_400\n        /* \"#utility.yul\":9127:9132   */\n      dup2\n        /* \"#utility.yul\":9109:9133   */\n      tag_281\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9102:9107   */\n      dup2\n        /* \"#utility.yul\":9099:9134   */\n      eq\n        /* \"#utility.yul\":9089:9152   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9148:9149   */\n      0x00\n        /* \"#utility.yul\":9145:9146   */\n      dup1\n        /* \"#utility.yul\":9138:9150   */\n      revert\n        /* \"#utility.yul\":9089:9152   */\n    tag_401:\n        /* \"#utility.yul\":9036:9158   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9164:9303   */\n    tag_296:\n        /* \"#utility.yul\":9210:9215   */\n      0x00\n        /* \"#utility.yul\":9248:9254   */\n      dup2\n        /* \"#utility.yul\":9235:9255   */\n      calldataload\n        /* \"#utility.yul\":9226:9255   */\n      swap1\n      pop\n        /* \"#utility.yul\":9264:9297   */\n      tag_403\n        /* \"#utility.yul\":9291:9296   */\n      dup2\n        /* \"#utility.yul\":9264:9297   */\n      tag_295\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9164:9303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9309:10508   */\n    tag_72:\n        /* \"#utility.yul\":9420:9426   */\n      0x00\n        /* \"#utility.yul\":9428:9434   */\n      dup1\n        /* \"#utility.yul\":9436:9442   */\n      0x00\n        /* \"#utility.yul\":9444:9450   */\n      dup1\n        /* \"#utility.yul\":9452:9458   */\n      0x00\n        /* \"#utility.yul\":9460:9466   */\n      dup1\n        /* \"#utility.yul\":9468:9474   */\n      0x00\n        /* \"#utility.yul\":9517:9520   */\n      0xe0\n        /* \"#utility.yul\":9505:9514   */\n      dup9\n        /* \"#utility.yul\":9496:9503   */\n      dup11\n        /* \"#utility.yul\":9492:9515   */\n      sub\n        /* \"#utility.yul\":9488:9521   */\n      slt\n        /* \"#utility.yul\":9485:9605   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":9524:9603   */\n      tag_406\n      tag_267\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9485:9605   */\n    tag_405:\n        /* \"#utility.yul\":9644:9645   */\n      0x00\n        /* \"#utility.yul\":9669:9722   */\n      tag_407\n        /* \"#utility.yul\":9714:9721   */\n      dup11\n        /* \"#utility.yul\":9705:9711   */\n      dup3\n        /* \"#utility.yul\":9694:9703   */\n      dup12\n        /* \"#utility.yul\":9690:9712   */\n      add\n        /* \"#utility.yul\":9669:9722   */\n      tag_272\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9659:9722   */\n      swap8\n      pop\n        /* \"#utility.yul\":9615:9732   */\n      pop\n        /* \"#utility.yul\":9771:9773   */\n      0x20\n        /* \"#utility.yul\":9797:9850   */\n      tag_408\n        /* \"#utility.yul\":9842:9849   */\n      dup11\n        /* \"#utility.yul\":9833:9839   */\n      dup3\n        /* \"#utility.yul\":9822:9831   */\n      dup12\n        /* \"#utility.yul\":9818:9840   */\n      add\n        /* \"#utility.yul\":9797:9850   */\n      tag_272\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9787:9850   */\n      swap7\n      pop\n        /* \"#utility.yul\":9742:9860   */\n      pop\n        /* \"#utility.yul\":9899:9901   */\n      0x40\n        /* \"#utility.yul\":9925:9978   */\n      tag_409\n        /* \"#utility.yul\":9970:9977   */\n      dup11\n        /* \"#utility.yul\":9961:9967   */\n      dup3\n        /* \"#utility.yul\":9950:9959   */\n      dup12\n        /* \"#utility.yul\":9946:9968   */\n      add\n        /* \"#utility.yul\":9925:9978   */\n      tag_275\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9915:9978   */\n      swap6\n      pop\n        /* \"#utility.yul\":9870:9988   */\n      pop\n        /* \"#utility.yul\":10027:10029   */\n      0x60\n        /* \"#utility.yul\":10053:10106   */\n      tag_410\n        /* \"#utility.yul\":10098:10105   */\n      dup11\n        /* \"#utility.yul\":10089:10095   */\n      dup3\n        /* \"#utility.yul\":10078:10087   */\n      dup12\n        /* \"#utility.yul\":10074:10096   */\n      add\n        /* \"#utility.yul\":10053:10106   */\n      tag_275\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10043:10106   */\n      swap5\n      pop\n        /* \"#utility.yul\":9998:10116   */\n      pop\n        /* \"#utility.yul\":10155:10158   */\n      0x80\n        /* \"#utility.yul\":10182:10233   */\n      tag_411\n        /* \"#utility.yul\":10225:10232   */\n      dup11\n        /* \"#utility.yul\":10216:10222   */\n      dup3\n        /* \"#utility.yul\":10205:10214   */\n      dup12\n        /* \"#utility.yul\":10201:10223   */\n      add\n        /* \"#utility.yul\":10182:10233   */\n      tag_294\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10172:10233   */\n      swap4\n      pop\n        /* \"#utility.yul\":10126:10243   */\n      pop\n        /* \"#utility.yul\":10282:10285   */\n      0xa0\n        /* \"#utility.yul\":10309:10362   */\n      tag_412\n        /* \"#utility.yul\":10354:10361   */\n      dup11\n        /* \"#utility.yul\":10345:10351   */\n      dup3\n        /* \"#utility.yul\":10334:10343   */\n      dup12\n        /* \"#utility.yul\":10330:10352   */\n      add\n        /* \"#utility.yul\":10309:10362   */\n      tag_296\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10299:10362   */\n      swap3\n      pop\n        /* \"#utility.yul\":10253:10372   */\n      pop\n        /* \"#utility.yul\":10411:10414   */\n      0xc0\n        /* \"#utility.yul\":10438:10491   */\n      tag_413\n        /* \"#utility.yul\":10483:10490   */\n      dup11\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup12\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_296\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10382:10501   */\n      pop\n        /* \"#utility.yul\":9309:10508   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10988   */\n    tag_76:\n        /* \"#utility.yul\":10582:10588   */\n      0x00\n        /* \"#utility.yul\":10590:10596   */\n      dup1\n        /* \"#utility.yul\":10639:10641   */\n      0x40\n        /* \"#utility.yul\":10627:10636   */\n      dup4\n        /* \"#utility.yul\":10618:10625   */\n      dup6\n        /* \"#utility.yul\":10614:10637   */\n      sub\n        /* \"#utility.yul\":10610:10642   */\n      slt\n        /* \"#utility.yul\":10607:10726   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":10645:10724   */\n      tag_416\n      tag_267\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":10607:10726   */\n    tag_415:\n        /* \"#utility.yul\":10765:10766   */\n      0x00\n        /* \"#utility.yul\":10790:10843   */\n      tag_417\n        /* \"#utility.yul\":10835:10842   */\n      dup6\n        /* \"#utility.yul\":10826:10832   */\n      dup3\n        /* \"#utility.yul\":10815:10824   */\n      dup7\n        /* \"#utility.yul\":10811:10833   */\n      add\n        /* \"#utility.yul\":10790:10843   */\n      tag_272\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10780:10843   */\n      swap3\n      pop\n        /* \"#utility.yul\":10736:10853   */\n      pop\n        /* \"#utility.yul\":10892:10894   */\n      0x20\n        /* \"#utility.yul\":10918:10971   */\n      tag_418\n        /* \"#utility.yul\":10963:10970   */\n      dup6\n        /* \"#utility.yul\":10954:10960   */\n      dup3\n        /* \"#utility.yul\":10943:10952   */\n      dup7\n        /* \"#utility.yul\":10939:10961   */\n      add\n        /* \"#utility.yul\":10918:10971   */\n      tag_272\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10908:10971   */\n      swap2\n      pop\n        /* \"#utility.yul\":10863:10981   */\n      pop\n        /* \"#utility.yul\":10514:10988   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10994:11174   */\n    tag_297:\n        /* \"#utility.yul\":11042:11119   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11039:11040   */\n      0x00\n        /* \"#utility.yul\":11032:11120   */\n      mstore\n        /* \"#utility.yul\":11139:11143   */\n      0x22\n        /* \"#utility.yul\":11136:11137   */\n      0x04\n        /* \"#utility.yul\":11129:11144   */\n      mstore\n        /* \"#utility.yul\":11163:11167   */\n      0x24\n        /* \"#utility.yul\":11160:11161   */\n      0x00\n        /* \"#utility.yul\":11153:11168   */\n      revert\n        /* \"#utility.yul\":11180:11500   */\n    tag_81:\n        /* \"#utility.yul\":11224:11230   */\n      0x00\n        /* \"#utility.yul\":11261:11262   */\n      0x02\n        /* \"#utility.yul\":11255:11259   */\n      dup3\n        /* \"#utility.yul\":11251:11263   */\n      div\n        /* \"#utility.yul\":11241:11263   */\n      swap1\n      pop\n        /* \"#utility.yul\":11308:11309   */\n      0x01\n        /* \"#utility.yul\":11302:11306   */\n      dup3\n        /* \"#utility.yul\":11298:11310   */\n      and\n        /* \"#utility.yul\":11329:11347   */\n      dup1\n        /* \"#utility.yul\":11319:11400   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":11385:11389   */\n      0x7f\n        /* \"#utility.yul\":11377:11383   */\n      dup3\n        /* \"#utility.yul\":11373:11390   */\n      and\n        /* \"#utility.yul\":11363:11390   */\n      swap2\n      pop\n        /* \"#utility.yul\":11319:11400   */\n    tag_421:\n        /* \"#utility.yul\":11447:11449   */\n      0x20\n        /* \"#utility.yul\":11439:11445   */\n      dup3\n        /* \"#utility.yul\":11436:11450   */\n      lt\n        /* \"#utility.yul\":11416:11434   */\n      dup2\n        /* \"#utility.yul\":11413:11451   */\n      sub\n        /* \"#utility.yul\":11410:11494   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":11466:11484   */\n      tag_423\n      tag_297\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11410:11494   */\n    tag_422:\n        /* \"#utility.yul\":11231:11500   */\n      pop\n        /* \"#utility.yul\":11180:11500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11506:11686   */\n    tag_113:\n        /* \"#utility.yul\":11554:11631   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11551:11552   */\n      0x00\n        /* \"#utility.yul\":11544:11632   */\n      mstore\n        /* \"#utility.yul\":11651:11655   */\n      0x41\n        /* \"#utility.yul\":11648:11649   */\n      0x04\n        /* \"#utility.yul\":11641:11656   */\n      mstore\n        /* \"#utility.yul\":11675:11679   */\n      0x24\n        /* \"#utility.yul\":11672:11673   */\n      0x00\n        /* \"#utility.yul\":11665:11680   */\n      revert\n        /* \"#utility.yul\":11692:12024   */\n    tag_125:\n        /* \"#utility.yul\":11813:11817   */\n      0x00\n        /* \"#utility.yul\":11851:11853   */\n      0x40\n        /* \"#utility.yul\":11840:11849   */\n      dup3\n        /* \"#utility.yul\":11836:11854   */\n      add\n        /* \"#utility.yul\":11828:11854   */\n      swap1\n      pop\n        /* \"#utility.yul\":11864:11935   */\n      tag_426\n        /* \"#utility.yul\":11932:11933   */\n      0x00\n        /* \"#utility.yul\":11921:11930   */\n      dup4\n        /* \"#utility.yul\":11917:11934   */\n      add\n        /* \"#utility.yul\":11908:11914   */\n      dup6\n        /* \"#utility.yul\":11864:11935   */\n      tag_285\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11945:12017   */\n      tag_427\n        /* \"#utility.yul\":12013:12015   */\n      0x20\n        /* \"#utility.yul\":12002:12011   */\n      dup4\n        /* \"#utility.yul\":11998:12016   */\n      add\n        /* \"#utility.yul\":11989:11995   */\n      dup5\n        /* \"#utility.yul\":11945:12017   */\n      tag_278\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11692:12024   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12030:12146   */\n    tag_298:\n        /* \"#utility.yul\":12100:12121   */\n      tag_429\n        /* \"#utility.yul\":12115:12120   */\n      dup2\n        /* \"#utility.yul\":12100:12121   */\n      tag_276\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12093:12098   */\n      dup2\n        /* \"#utility.yul\":12090:12122   */\n      eq\n        /* \"#utility.yul\":12080:12140   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":12136:12137   */\n      0x00\n        /* \"#utility.yul\":12133:12134   */\n      dup1\n        /* \"#utility.yul\":12126:12138   */\n      revert\n        /* \"#utility.yul\":12080:12140   */\n    tag_430:\n        /* \"#utility.yul\":12030:12146   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12152:12289   */\n    tag_299:\n        /* \"#utility.yul\":12206:12211   */\n      0x00\n        /* \"#utility.yul\":12237:12243   */\n      dup2\n        /* \"#utility.yul\":12231:12244   */\n      mload\n        /* \"#utility.yul\":12222:12244   */\n      swap1\n      pop\n        /* \"#utility.yul\":12253:12283   */\n      tag_432\n        /* \"#utility.yul\":12277:12282   */\n      dup2\n        /* \"#utility.yul\":12253:12283   */\n      tag_298\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12152:12289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12295:12640   */\n    tag_129:\n        /* \"#utility.yul\":12362:12368   */\n      0x00\n        /* \"#utility.yul\":12411:12413   */\n      0x20\n        /* \"#utility.yul\":12399:12408   */\n      dup3\n        /* \"#utility.yul\":12390:12397   */\n      dup5\n        /* \"#utility.yul\":12386:12409   */\n      sub\n        /* \"#utility.yul\":12382:12414   */\n      slt\n        /* \"#utility.yul\":12379:12498   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":12417:12496   */\n      tag_435\n      tag_267\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":12379:12498   */\n    tag_434:\n        /* \"#utility.yul\":12537:12538   */\n      0x00\n        /* \"#utility.yul\":12562:12623   */\n      tag_436\n        /* \"#utility.yul\":12615:12622   */\n      dup5\n        /* \"#utility.yul\":12606:12612   */\n      dup3\n        /* \"#utility.yul\":12595:12604   */\n      dup6\n        /* \"#utility.yul\":12591:12613   */\n      add\n        /* \"#utility.yul\":12562:12623   */\n      tag_299\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12552:12623   */\n      swap2\n      pop\n        /* \"#utility.yul\":12508:12633   */\n      pop\n        /* \"#utility.yul\":12295:12640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12646:13421   */\n    tag_137:\n        /* \"#utility.yul\":12879:12883   */\n      0x00\n        /* \"#utility.yul\":12917:12920   */\n      0xc0\n        /* \"#utility.yul\":12906:12915   */\n      dup3\n        /* \"#utility.yul\":12902:12921   */\n      add\n        /* \"#utility.yul\":12894:12921   */\n      swap1\n      pop\n        /* \"#utility.yul\":12931:13002   */\n      tag_438\n        /* \"#utility.yul\":12999:13000   */\n      0x00\n        /* \"#utility.yul\":12988:12997   */\n      dup4\n        /* \"#utility.yul\":12984:13001   */\n      add\n        /* \"#utility.yul\":12975:12981   */\n      dup10\n        /* \"#utility.yul\":12931:13002   */\n      tag_282\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13012:13084   */\n      tag_439\n        /* \"#utility.yul\":13080:13082   */\n      0x20\n        /* \"#utility.yul\":13069:13078   */\n      dup4\n        /* \"#utility.yul\":13065:13083   */\n      add\n        /* \"#utility.yul\":13056:13062   */\n      dup9\n        /* \"#utility.yul\":13012:13084   */\n      tag_285\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13094:13166   */\n      tag_440\n        /* \"#utility.yul\":13162:13164   */\n      0x40\n        /* \"#utility.yul\":13151:13160   */\n      dup4\n        /* \"#utility.yul\":13147:13165   */\n      add\n        /* \"#utility.yul\":13138:13144   */\n      dup8\n        /* \"#utility.yul\":13094:13166   */\n      tag_285\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13176:13248   */\n      tag_441\n        /* \"#utility.yul\":13244:13246   */\n      0x60\n        /* \"#utility.yul\":13233:13242   */\n      dup4\n        /* \"#utility.yul\":13229:13247   */\n      add\n        /* \"#utility.yul\":13220:13226   */\n      dup7\n        /* \"#utility.yul\":13176:13248   */\n      tag_278\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13258:13331   */\n      tag_442\n        /* \"#utility.yul\":13326:13329   */\n      0x80\n        /* \"#utility.yul\":13315:13324   */\n      dup4\n        /* \"#utility.yul\":13311:13330   */\n      add\n        /* \"#utility.yul\":13302:13308   */\n      dup6\n        /* \"#utility.yul\":13258:13331   */\n      tag_278\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13341:13414   */\n      tag_443\n        /* \"#utility.yul\":13409:13412   */\n      0xa0\n        /* \"#utility.yul\":13398:13407   */\n      dup4\n        /* \"#utility.yul\":13394:13413   */\n      add\n        /* \"#utility.yul\":13385:13391   */\n      dup5\n        /* \"#utility.yul\":13341:13414   */\n      tag_278\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":12646:13421   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13427:13759   */\n    tag_144:\n        /* \"#utility.yul\":13548:13552   */\n      0x00\n        /* \"#utility.yul\":13586:13588   */\n      0x40\n        /* \"#utility.yul\":13575:13584   */\n      dup3\n        /* \"#utility.yul\":13571:13589   */\n      add\n        /* \"#utility.yul\":13563:13589   */\n      swap1\n      pop\n        /* \"#utility.yul\":13599:13670   */\n      tag_445\n        /* \"#utility.yul\":13667:13668   */\n      0x00\n        /* \"#utility.yul\":13656:13665   */\n      dup4\n        /* \"#utility.yul\":13652:13669   */\n      add\n        /* \"#utility.yul\":13643:13649   */\n      dup6\n        /* \"#utility.yul\":13599:13670   */\n      tag_285\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":13680:13752   */\n      tag_446\n        /* \"#utility.yul\":13748:13750   */\n      0x20\n        /* \"#utility.yul\":13737:13746   */\n      dup4\n        /* \"#utility.yul\":13733:13751   */\n      add\n        /* \"#utility.yul\":13724:13730   */\n      dup5\n        /* \"#utility.yul\":13680:13752   */\n      tag_285\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13427:13759   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13765:14207   */\n    tag_156:\n        /* \"#utility.yul\":13914:13918   */\n      0x00\n        /* \"#utility.yul\":13952:13954   */\n      0x60\n        /* \"#utility.yul\":13941:13950   */\n      dup3\n        /* \"#utility.yul\":13937:13955   */\n      add\n        /* \"#utility.yul\":13929:13955   */\n      swap1\n      pop\n        /* \"#utility.yul\":13965:14036   */\n      tag_448\n        /* \"#utility.yul\":14033:14034   */\n      0x00\n        /* \"#utility.yul\":14022:14031   */\n      dup4\n        /* \"#utility.yul\":14018:14035   */\n      add\n        /* \"#utility.yul\":14009:14015   */\n      dup7\n        /* \"#utility.yul\":13965:14036   */\n      tag_285\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14046:14118   */\n      tag_449\n        /* \"#utility.yul\":14114:14116   */\n      0x20\n        /* \"#utility.yul\":14103:14112   */\n      dup4\n        /* \"#utility.yul\":14099:14117   */\n      add\n        /* \"#utility.yul\":14090:14096   */\n      dup6\n        /* \"#utility.yul\":14046:14118   */\n      tag_278\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":14128:14200   */\n      tag_450\n        /* \"#utility.yul\":14196:14198   */\n      0x40\n        /* \"#utility.yul\":14185:14194   */\n      dup4\n        /* \"#utility.yul\":14181:14199   */\n      add\n        /* \"#utility.yul\":14172:14178   */\n      dup5\n        /* \"#utility.yul\":14128:14200   */\n      tag_278\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13765:14207   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14213:14435   */\n    tag_161:\n        /* \"#utility.yul\":14306:14310   */\n      0x00\n        /* \"#utility.yul\":14344:14346   */\n      0x20\n        /* \"#utility.yul\":14333:14342   */\n      dup3\n        /* \"#utility.yul\":14329:14347   */\n      add\n        /* \"#utility.yul\":14321:14347   */\n      swap1\n      pop\n        /* \"#utility.yul\":14357:14428   */\n      tag_452\n        /* \"#utility.yul\":14425:14426   */\n      0x00\n        /* \"#utility.yul\":14414:14423   */\n      dup4\n        /* \"#utility.yul\":14410:14427   */\n      add\n        /* \"#utility.yul\":14401:14407   */\n      dup5\n        /* \"#utility.yul\":14357:14428   */\n      tag_285\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14213:14435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14441:14621   */\n    tag_300:\n        /* \"#utility.yul\":14489:14566   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14486:14487   */\n      0x00\n        /* \"#utility.yul\":14479:14567   */\n      mstore\n        /* \"#utility.yul\":14586:14590   */\n      0x11\n        /* \"#utility.yul\":14583:14584   */\n      0x04\n        /* \"#utility.yul\":14576:14591   */\n      mstore\n        /* \"#utility.yul\":14610:14614   */\n      0x24\n        /* \"#utility.yul\":14607:14608   */\n      0x00\n        /* \"#utility.yul\":14600:14615   */\n      revert\n        /* \"#utility.yul\":14627:14818   */\n    tag_198:\n        /* \"#utility.yul\":14667:14670   */\n      0x00\n        /* \"#utility.yul\":14686:14706   */\n      tag_455\n        /* \"#utility.yul\":14704:14705   */\n      dup3\n        /* \"#utility.yul\":14686:14706   */\n      tag_273\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":14681:14706   */\n      swap2\n      pop\n        /* \"#utility.yul\":14720:14740   */\n      tag_456\n        /* \"#utility.yul\":14738:14739   */\n      dup4\n        /* \"#utility.yul\":14720:14740   */\n      tag_273\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14715:14740   */\n      swap3\n      pop\n        /* \"#utility.yul\":14763:14764   */\n      dup3\n        /* \"#utility.yul\":14760:14761   */\n      dup3\n        /* \"#utility.yul\":14756:14765   */\n      add\n        /* \"#utility.yul\":14749:14765   */\n      swap1\n      pop\n        /* \"#utility.yul\":14784:14787   */\n      dup1\n        /* \"#utility.yul\":14781:14782   */\n      dup3\n        /* \"#utility.yul\":14778:14788   */\n      gt\n        /* \"#utility.yul\":14775:14811   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":14791:14809   */\n      tag_458\n      tag_300\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14775:14811   */\n    tag_457:\n        /* \"#utility.yul\":14627:14818   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14824:15488   */\n    tag_207:\n        /* \"#utility.yul\":15029:15033   */\n      0x00\n        /* \"#utility.yul\":15067:15070   */\n      0xa0\n        /* \"#utility.yul\":15056:15065   */\n      dup3\n        /* \"#utility.yul\":15052:15071   */\n      add\n        /* \"#utility.yul\":15044:15071   */\n      swap1\n      pop\n        /* \"#utility.yul\":15081:15152   */\n      tag_460\n        /* \"#utility.yul\":15149:15150   */\n      0x00\n        /* \"#utility.yul\":15138:15147   */\n      dup4\n        /* \"#utility.yul\":15134:15151   */\n      add\n        /* \"#utility.yul\":15125:15131   */\n      dup9\n        /* \"#utility.yul\":15081:15152   */\n      tag_282\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15162:15234   */\n      tag_461\n        /* \"#utility.yul\":15230:15232   */\n      0x20\n        /* \"#utility.yul\":15219:15228   */\n      dup4\n        /* \"#utility.yul\":15215:15233   */\n      add\n        /* \"#utility.yul\":15206:15212   */\n      dup8\n        /* \"#utility.yul\":15162:15234   */\n      tag_282\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15244:15316   */\n      tag_462\n        /* \"#utility.yul\":15312:15314   */\n      0x40\n        /* \"#utility.yul\":15301:15310   */\n      dup4\n        /* \"#utility.yul\":15297:15315   */\n      add\n        /* \"#utility.yul\":15288:15294   */\n      dup7\n        /* \"#utility.yul\":15244:15316   */\n      tag_282\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":15326:15398   */\n      tag_463\n        /* \"#utility.yul\":15394:15396   */\n      0x60\n        /* \"#utility.yul\":15383:15392   */\n      dup4\n        /* \"#utility.yul\":15379:15397   */\n      add\n        /* \"#utility.yul\":15370:15376   */\n      dup6\n        /* \"#utility.yul\":15326:15398   */\n      tag_278\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":15408:15481   */\n      tag_464\n        /* \"#utility.yul\":15476:15479   */\n      0x80\n        /* \"#utility.yul\":15465:15474   */\n      dup4\n        /* \"#utility.yul\":15461:15480   */\n      add\n        /* \"#utility.yul\":15452:15458   */\n      dup5\n        /* \"#utility.yul\":15408:15481   */\n      tag_285\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14824:15488   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15494:16039   */\n    tag_222:\n        /* \"#utility.yul\":15667:15671   */\n      0x00\n        /* \"#utility.yul\":15705:15708   */\n      0x80\n        /* \"#utility.yul\":15694:15703   */\n      dup3\n        /* \"#utility.yul\":15690:15709   */\n      add\n        /* \"#utility.yul\":15682:15709   */\n      swap1\n      pop\n        /* \"#utility.yul\":15719:15790   */\n      tag_466\n        /* \"#utility.yul\":15787:15788   */\n      0x00\n        /* \"#utility.yul\":15776:15785   */\n      dup4\n        /* \"#utility.yul\":15772:15789   */\n      add\n        /* \"#utility.yul\":15763:15769   */\n      dup8\n        /* \"#utility.yul\":15719:15790   */\n      tag_282\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15800:15868   */\n      tag_467\n        /* \"#utility.yul\":15864:15866   */\n      0x20\n        /* \"#utility.yul\":15853:15862   */\n      dup4\n        /* \"#utility.yul\":15849:15867   */\n      add\n        /* \"#utility.yul\":15840:15846   */\n      dup7\n        /* \"#utility.yul\":15800:15868   */\n      tag_280\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":15878:15950   */\n      tag_468\n        /* \"#utility.yul\":15946:15948   */\n      0x40\n        /* \"#utility.yul\":15935:15944   */\n      dup4\n        /* \"#utility.yul\":15931:15949   */\n      add\n        /* \"#utility.yul\":15922:15928   */\n      dup6\n        /* \"#utility.yul\":15878:15950   */\n      tag_282\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15960:16032   */\n      tag_469\n        /* \"#utility.yul\":16028:16030   */\n      0x60\n        /* \"#utility.yul\":16017:16026   */\n      dup4\n        /* \"#utility.yul\":16013:16031   */\n      add\n        /* \"#utility.yul\":16004:16010   */\n      dup5\n        /* \"#utility.yul\":15960:16032   */\n      tag_282\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15494:16039   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16045:16225   */\n    tag_229:\n        /* \"#utility.yul\":16093:16170   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16090:16091   */\n      0x00\n        /* \"#utility.yul\":16083:16171   */\n      mstore\n        /* \"#utility.yul\":16190:16194   */\n      0x21\n        /* \"#utility.yul\":16187:16188   */\n      0x04\n        /* \"#utility.yul\":16180:16195   */\n      mstore\n        /* \"#utility.yul\":16214:16218   */\n      0x24\n        /* \"#utility.yul\":16211:16212   */\n      0x00\n        /* \"#utility.yul\":16204:16219   */\n      revert\n\n    auxdata: 0xa2646970667358221220bc766e1cd7cc7e7b13d472c07fd63666ce17a31b5a5380f9252d26235fc154b164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2348": {
									"entryPoint": null,
									"id": 2348,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3761": {
									"entryPoint": null,
									"id": 3761,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_803": {
									"entryPoint": null,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2395": {
									"entryPoint": 563,
									"id": 2395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_516": {
									"entryPoint": 653,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_483": {
									"entryPoint": 896,
									"id": 483,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getStringSlot_1625": {
									"entryPoint": 887,
									"id": 1625,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_1479": {
									"entryPoint": 486,
									"id": 1479,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_1381": {
									"entryPoint": 786,
									"id": 1381,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 3061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 3076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1626,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12829:20",
										"nodeType": "YulBlock",
										"src": "0:12829:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:20",
													"nodeType": "YulBlock",
													"src": "66:40:20",
													"statements": [
														{
															"nativeSrc": "77:22:20",
															"nodeType": "YulAssignment",
															"src": "77:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:20"
																},
																"nativeSrc": "87:12:20",
																"nodeType": "YulFunctionCall",
																"src": "87:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:20",
														"nodeType": "YulTypedName",
														"src": "49:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:20",
														"nodeType": "YulTypedName",
														"src": "59:6:20",
														"type": ""
													}
												],
												"src": "7:99:20"
											},
											{
												"body": {
													"nativeSrc": "140:152:20",
													"nodeType": "YulBlock",
													"src": "140:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:20",
																		"nodeType": "YulLiteral",
																		"src": "157:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:20",
																		"nodeType": "YulLiteral",
																		"src": "160:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:20"
																},
																"nativeSrc": "150:88:20",
																"nodeType": "YulFunctionCall",
																"src": "150:88:20"
															},
															"nativeSrc": "150:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:20",
																		"nodeType": "YulLiteral",
																		"src": "254:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:20",
																		"nodeType": "YulLiteral",
																		"src": "257:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:20"
																},
																"nativeSrc": "247:15:20",
																"nodeType": "YulFunctionCall",
																"src": "247:15:20"
															},
															"nativeSrc": "247:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:20",
																		"nodeType": "YulLiteral",
																		"src": "278:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:20",
																		"nodeType": "YulLiteral",
																		"src": "281:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:20"
																},
																"nativeSrc": "271:15:20",
																"nodeType": "YulFunctionCall",
																"src": "271:15:20"
															},
															"nativeSrc": "271:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:20"
											},
											{
												"body": {
													"nativeSrc": "326:152:20",
													"nodeType": "YulBlock",
													"src": "326:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:20",
																		"nodeType": "YulLiteral",
																		"src": "343:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:20",
																		"nodeType": "YulLiteral",
																		"src": "346:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:20"
																},
																"nativeSrc": "336:88:20",
																"nodeType": "YulFunctionCall",
																"src": "336:88:20"
															},
															"nativeSrc": "336:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:20",
																		"nodeType": "YulLiteral",
																		"src": "440:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:20",
																		"nodeType": "YulLiteral",
																		"src": "443:4:20",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:20"
																},
																"nativeSrc": "433:15:20",
																"nodeType": "YulFunctionCall",
																"src": "433:15:20"
															},
															"nativeSrc": "433:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:20",
																		"nodeType": "YulLiteral",
																		"src": "464:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:20",
																		"nodeType": "YulLiteral",
																		"src": "467:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:20"
																},
																"nativeSrc": "457:15:20",
																"nodeType": "YulFunctionCall",
																"src": "457:15:20"
															},
															"nativeSrc": "457:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:20"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:20"
											},
											{
												"body": {
													"nativeSrc": "535:269:20",
													"nodeType": "YulBlock",
													"src": "535:269:20",
													"statements": [
														{
															"nativeSrc": "545:22:20",
															"nodeType": "YulAssignment",
															"src": "545:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:20",
																		"nodeType": "YulLiteral",
																		"src": "565:1:20",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:20"
																},
																"nativeSrc": "555:12:20",
																"nodeType": "YulFunctionCall",
																"src": "555:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:20"
																}
															]
														},
														{
															"nativeSrc": "576:38:20",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:20",
																		"nodeType": "YulLiteral",
																		"src": "612:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:20"
																},
																"nativeSrc": "602:12:20",
																"nodeType": "YulFunctionCall",
																"src": "602:12:20"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:20",
																	"nodeType": "YulTypedName",
																	"src": "580:18:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:20",
																"nodeType": "YulBlock",
																"src": "653:51:20",
																"statements": [
																	{
																		"nativeSrc": "667:27:20",
																		"nodeType": "YulAssignment",
																		"src": "667:27:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:20",
																					"nodeType": "YulLiteral",
																					"src": "689:4:20",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:20"
																			},
																			"nativeSrc": "677:17:20",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:20"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:20"
																},
																"nativeSrc": "626:26:20",
																"nodeType": "YulFunctionCall",
																"src": "626:26:20"
															},
															"nativeSrc": "623:81:20",
															"nodeType": "YulIf",
															"src": "623:81:20"
														},
														{
															"body": {
																"nativeSrc": "756:42:20",
																"nodeType": "YulBlock",
																"src": "756:42:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:20"
																			},
																			"nativeSrc": "770:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:20"
																		},
																		"nativeSrc": "770:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:20",
																				"nodeType": "YulLiteral",
																				"src": "751:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:20"
																		},
																		"nativeSrc": "740:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:20"
																},
																"nativeSrc": "717:38:20",
																"nodeType": "YulFunctionCall",
																"src": "717:38:20"
															},
															"nativeSrc": "714:84:20",
															"nodeType": "YulIf",
															"src": "714:84:20"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:20",
														"nodeType": "YulTypedName",
														"src": "519:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:20",
														"nodeType": "YulTypedName",
														"src": "528:6:20",
														"type": ""
													}
												],
												"src": "484:320:20"
											},
											{
												"body": {
													"nativeSrc": "864:87:20",
													"nodeType": "YulBlock",
													"src": "864:87:20",
													"statements": [
														{
															"nativeSrc": "874:11:20",
															"nodeType": "YulAssignment",
															"src": "874:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:20",
																"nodeType": "YulIdentifier",
																"src": "882:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:20",
																		"nodeType": "YulLiteral",
																		"src": "902:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:20"
																},
																"nativeSrc": "895:14:20",
																"nodeType": "YulFunctionCall",
																"src": "895:14:20"
															},
															"nativeSrc": "895:14:20",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:20"
														},
														{
															"nativeSrc": "918:26:20",
															"nodeType": "YulAssignment",
															"src": "918:26:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:20",
																		"nodeType": "YulLiteral",
																		"src": "936:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:20",
																		"nodeType": "YulLiteral",
																		"src": "939:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:20"
																},
																"nativeSrc": "926:18:20",
																"nodeType": "YulFunctionCall",
																"src": "926:18:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:20",
														"nodeType": "YulTypedName",
														"src": "851:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:20",
														"nodeType": "YulTypedName",
														"src": "859:4:20",
														"type": ""
													}
												],
												"src": "810:141:20"
											},
											{
												"body": {
													"nativeSrc": "1001:49:20",
													"nodeType": "YulBlock",
													"src": "1001:49:20",
													"statements": [
														{
															"nativeSrc": "1011:33:20",
															"nodeType": "YulAssignment",
															"src": "1011:33:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:20",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:20"
																		},
																		"nativeSrc": "1025:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:20"
																},
																"nativeSrc": "1021:23:20",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:20"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:20",
														"nodeType": "YulTypedName",
														"src": "984:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:20",
														"nodeType": "YulTypedName",
														"src": "994:6:20",
														"type": ""
													}
												],
												"src": "957:93:20"
											},
											{
												"body": {
													"nativeSrc": "1109:54:20",
													"nodeType": "YulBlock",
													"src": "1109:54:20",
													"statements": [
														{
															"nativeSrc": "1119:37:20",
															"nodeType": "YulAssignment",
															"src": "1119:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:20"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:20"
																},
																"nativeSrc": "1140:16:20",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:20"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:20",
														"nodeType": "YulTypedName",
														"src": "1084:4:20",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:20",
														"nodeType": "YulTypedName",
														"src": "1090:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:20",
														"nodeType": "YulTypedName",
														"src": "1100:8:20",
														"type": ""
													}
												],
												"src": "1056:107:20"
											},
											{
												"body": {
													"nativeSrc": "1245:317:20",
													"nodeType": "YulBlock",
													"src": "1245:317:20",
													"statements": [
														{
															"nativeSrc": "1255:35:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:20",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:20",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:20"
																},
																"nativeSrc": "1272:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:20"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:20",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:20",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:20"
																},
																"nativeSrc": "1311:97:20",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:20"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:20",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:20",
															"nodeType": "YulAssignment",
															"src": "1417:51:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:20"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:20"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:20"
																},
																"nativeSrc": "1429:39:20",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:20"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:20"
																}
															]
														},
														{
															"nativeSrc": "1477:30:20",
															"nodeType": "YulAssignment",
															"src": "1477:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:20"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:20"
																		},
																		"nativeSrc": "1497:9:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:20"
																},
																"nativeSrc": "1486:21:20",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:20"
																}
															]
														},
														{
															"nativeSrc": "1516:40:20",
															"nodeType": "YulAssignment",
															"src": "1516:40:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:20",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:20"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:20"
																		},
																		"nativeSrc": "1536:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:20"
																},
																"nativeSrc": "1526:30:20",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:20"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:20",
														"nodeType": "YulTypedName",
														"src": "1206:5:20",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:20",
														"nodeType": "YulTypedName",
														"src": "1213:10:20",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:20",
														"nodeType": "YulTypedName",
														"src": "1225:8:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:20",
														"nodeType": "YulTypedName",
														"src": "1238:6:20",
														"type": ""
													}
												],
												"src": "1169:393:20"
											},
											{
												"body": {
													"nativeSrc": "1613:32:20",
													"nodeType": "YulBlock",
													"src": "1613:32:20",
													"statements": [
														{
															"nativeSrc": "1623:16:20",
															"nodeType": "YulAssignment",
															"src": "1623:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:20",
																"nodeType": "YulIdentifier",
																"src": "1634:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:20",
														"nodeType": "YulTypedName",
														"src": "1595:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:20",
														"nodeType": "YulTypedName",
														"src": "1605:7:20",
														"type": ""
													}
												],
												"src": "1568:77:20"
											},
											{
												"body": {
													"nativeSrc": "1683:28:20",
													"nodeType": "YulBlock",
													"src": "1683:28:20",
													"statements": [
														{
															"nativeSrc": "1693:12:20",
															"nodeType": "YulAssignment",
															"src": "1693:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:20",
																"nodeType": "YulIdentifier",
																"src": "1700:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:20"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:20",
														"nodeType": "YulTypedName",
														"src": "1669:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:20",
														"nodeType": "YulTypedName",
														"src": "1679:3:20",
														"type": ""
													}
												],
												"src": "1651:60:20"
											},
											{
												"body": {
													"nativeSrc": "1777:82:20",
													"nodeType": "YulBlock",
													"src": "1777:82:20",
													"statements": [
														{
															"nativeSrc": "1787:66:20",
															"nodeType": "YulAssignment",
															"src": "1787:66:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:20"
																				},
																				"nativeSrc": "1827:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:20"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:20",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:20"
																		},
																		"nativeSrc": "1818:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:20"
																},
																"nativeSrc": "1800:53:20",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:20",
														"nodeType": "YulTypedName",
														"src": "1757:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:20",
														"nodeType": "YulTypedName",
														"src": "1767:9:20",
														"type": ""
													}
												],
												"src": "1717:142:20"
											},
											{
												"body": {
													"nativeSrc": "1912:28:20",
													"nodeType": "YulBlock",
													"src": "1912:28:20",
													"statements": [
														{
															"nativeSrc": "1922:12:20",
															"nodeType": "YulAssignment",
															"src": "1922:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:20",
																"nodeType": "YulIdentifier",
																"src": "1929:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:20"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:20",
														"nodeType": "YulTypedName",
														"src": "1898:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:20",
														"nodeType": "YulTypedName",
														"src": "1908:3:20",
														"type": ""
													}
												],
												"src": "1865:75:20"
											},
											{
												"body": {
													"nativeSrc": "2022:193:20",
													"nodeType": "YulBlock",
													"src": "2022:193:20",
													"statements": [
														{
															"nativeSrc": "2032:63:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:20",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:20",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:20"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:20"
																},
																"nativeSrc": "2056:39:20",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:20"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:20",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:20"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:20"
																				},
																				"nativeSrc": "2145:11:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:20"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:20",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:20"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:20",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:20"
																				},
																				"nativeSrc": "2166:41:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:20"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:20",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:20"
																		},
																		"nativeSrc": "2117:91:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:20"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:20"
																},
																"nativeSrc": "2104:105:20",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:20"
															},
															"nativeSrc": "2104:105:20",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:20"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:20",
														"nodeType": "YulTypedName",
														"src": "1999:4:20",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:20",
														"nodeType": "YulTypedName",
														"src": "2005:6:20",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:20",
														"nodeType": "YulTypedName",
														"src": "2013:7:20",
														"type": ""
													}
												],
												"src": "1946:269:20"
											},
											{
												"body": {
													"nativeSrc": "2270:24:20",
													"nodeType": "YulBlock",
													"src": "2270:24:20",
													"statements": [
														{
															"nativeSrc": "2280:8:20",
															"nodeType": "YulAssignment",
															"src": "2280:8:20",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:20",
																"nodeType": "YulLiteral",
																"src": "2287:1:20",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:20"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:20",
														"nodeType": "YulTypedName",
														"src": "2266:3:20",
														"type": ""
													}
												],
												"src": "2221:73:20"
											},
											{
												"body": {
													"nativeSrc": "2353:136:20",
													"nodeType": "YulBlock",
													"src": "2353:136:20",
													"statements": [
														{
															"nativeSrc": "2363:46:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:20",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:20"
																},
																"nativeSrc": "2377:32:20",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:20"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:20",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:20"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:20"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:20"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:20"
																},
																"nativeSrc": "2418:65:20",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:20"
															},
															"nativeSrc": "2418:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:20"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:20",
														"nodeType": "YulTypedName",
														"src": "2339:4:20",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:20",
														"nodeType": "YulTypedName",
														"src": "2345:6:20",
														"type": ""
													}
												],
												"src": "2300:189:20"
											},
											{
												"body": {
													"nativeSrc": "2545:136:20",
													"nodeType": "YulBlock",
													"src": "2545:136:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:20",
																"nodeType": "YulBlock",
																"src": "2612:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:20",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:20"
																			},
																			"nativeSrc": "2626:39:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:20"
																		},
																		"nativeSrc": "2626:39:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:20"
																},
																"nativeSrc": "2562:14:20",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:20"
															},
															"nativeSrc": "2555:120:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:20",
																"nodeType": "YulBlock",
																"src": "2577:26:20",
																"statements": [
																	{
																		"nativeSrc": "2579:22:20",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:20"
																			},
																			"nativeSrc": "2588:13:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:20"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:20",
																"nodeType": "YulBlock",
																"src": "2559:2:20",
																"statements": []
															},
															"src": "2555:120:20"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:20",
														"nodeType": "YulTypedName",
														"src": "2533:5:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:20",
														"nodeType": "YulTypedName",
														"src": "2540:3:20",
														"type": ""
													}
												],
												"src": "2495:186:20"
											},
											{
												"body": {
													"nativeSrc": "2766:464:20",
													"nodeType": "YulBlock",
													"src": "2766:464:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:20",
																"nodeType": "YulBlock",
																"src": "2792:431:20",
																"statements": [
																	{
																		"nativeSrc": "2806:54:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:20"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:20",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:20"
																			},
																			"nativeSrc": "2822:38:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:20"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:20",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:20",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:20"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:20",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:20"
																					},
																					"nativeSrc": "2906:29:20",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:20"
																			},
																			"nativeSrc": "2892:44:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:20"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:20",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:20",
																			"nodeType": "YulBlock",
																			"src": "3093:27:20",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:20",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:20",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:20",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:20"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:20",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:20"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:20",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:20",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:20"
																			},
																			"nativeSrc": "3074:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:20"
																		},
																		"nativeSrc": "3071:49:20",
																		"nodeType": "YulIf",
																		"src": "3071:49:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:20",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:20",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:20"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:20"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:20",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:20"
																							},
																							"nativeSrc": "3189:22:20",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:20"
																					},
																					"nativeSrc": "3175:37:20",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:20"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:20",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:20"
																			},
																			"nativeSrc": "3133:80:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:20"
																		},
																		"nativeSrc": "3133:80:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:20"
																},
																"nativeSrc": "2780:11:20",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:20"
															},
															"nativeSrc": "2777:446:20",
															"nodeType": "YulIf",
															"src": "2777:446:20"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:20",
														"nodeType": "YulTypedName",
														"src": "2742:5:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:20",
														"nodeType": "YulTypedName",
														"src": "2749:3:20",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:20",
														"nodeType": "YulTypedName",
														"src": "2754:10:20",
														"type": ""
													}
												],
												"src": "2687:543:20"
											},
											{
												"body": {
													"nativeSrc": "3299:54:20",
													"nodeType": "YulBlock",
													"src": "3299:54:20",
													"statements": [
														{
															"nativeSrc": "3309:37:20",
															"nodeType": "YulAssignment",
															"src": "3309:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:20"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:20"
																},
																"nativeSrc": "3330:16:20",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:20"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:20",
														"nodeType": "YulTypedName",
														"src": "3274:4:20",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:20",
														"nodeType": "YulTypedName",
														"src": "3280:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:20",
														"nodeType": "YulTypedName",
														"src": "3290:8:20",
														"type": ""
													}
												],
												"src": "3236:117:20"
											},
											{
												"body": {
													"nativeSrc": "3410:118:20",
													"nodeType": "YulBlock",
													"src": "3410:118:20",
													"statements": [
														{
															"nativeSrc": "3420:68:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:20",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:20",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:20"
																				},
																				"nativeSrc": "3465:13:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:20"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:20",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:20",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:20"
																				},
																				"nativeSrc": "3480:6:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:20"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:20",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:20"
																		},
																		"nativeSrc": "3436:51:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:20"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:20"
																},
																"nativeSrc": "3432:56:20",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:20"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:20",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:20",
															"nodeType": "YulAssignment",
															"src": "3497:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:20"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:20"
																},
																"nativeSrc": "3507:15:20",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:20"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:20",
														"nodeType": "YulTypedName",
														"src": "3387:4:20",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:20",
														"nodeType": "YulTypedName",
														"src": "3393:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:20",
														"nodeType": "YulTypedName",
														"src": "3403:6:20",
														"type": ""
													}
												],
												"src": "3359:169:20"
											},
											{
												"body": {
													"nativeSrc": "3614:214:20",
													"nodeType": "YulBlock",
													"src": "3614:214:20",
													"statements": [
														{
															"nativeSrc": "3747:37:20",
															"nodeType": "YulAssignment",
															"src": "3747:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:20"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:20"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:20"
																},
																"nativeSrc": "3755:29:20",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:20"
																}
															]
														},
														{
															"nativeSrc": "3793:29:20",
															"nodeType": "YulAssignment",
															"src": "3793:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:20",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:20"
																		},
																		"nativeSrc": "3810:11:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:20"
																},
																"nativeSrc": "3801:21:20",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:20"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:20"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:20",
														"nodeType": "YulTypedName",
														"src": "3595:4:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:20",
														"nodeType": "YulTypedName",
														"src": "3601:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:20",
														"nodeType": "YulTypedName",
														"src": "3609:4:20",
														"type": ""
													}
												],
												"src": "3533:295:20"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:20",
													"nodeType": "YulBlock",
													"src": "3925:1303:20",
													"statements": [
														{
															"nativeSrc": "3936:51:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:20",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:20"
																},
																"nativeSrc": "3950:37:20",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:20"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:20",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:20",
																"nodeType": "YulBlock",
																"src": "4072:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:20"
																			},
																			"nativeSrc": "4074:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:20"
																		},
																		"nativeSrc": "4074:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:20",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:20"
																},
																"nativeSrc": "4041:30:20",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:20"
															},
															"nativeSrc": "4038:56:20",
															"nodeType": "YulIf",
															"src": "4038:56:20"
														},
														{
															"nativeSrc": "4104:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:20"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:20",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:20"
																		},
																		"nativeSrc": "4144:11:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:20"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:20"
																},
																"nativeSrc": "4118:38:20",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:20"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:20",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:20"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:20"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:20"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:20",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:20"
																},
																"nativeSrc": "4203:67:20",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:20"
															},
															"nativeSrc": "4203:67:20",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:20"
														},
														{
															"nativeSrc": "4280:18:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:20",
																"nodeType": "YulLiteral",
																"src": "4297:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:20",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:20",
															"nodeType": "YulAssignment",
															"src": "4308:17:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:20",
																"nodeType": "YulLiteral",
																"src": "4321:4:20",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:20"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:20",
																		"nodeType": "YulBlock",
																		"src": "4372:611:20",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:20"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:20",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:20",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:20"
																							},
																							"nativeSrc": "4413:9:20",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:20"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:20"
																					},
																					"nativeSrc": "4401:22:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:20"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:20",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:20"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:20",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:20"
																					},
																					"nativeSrc": "4451:37:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:20"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:20",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:20",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:20",
																					"nodeType": "YulBlock",
																					"src": "4569:163:20",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:20",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:20"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:20",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:20"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:20"
																												},
																												"nativeSrc": "4608:19:20",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:20"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:20",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:20"
																										},
																										"nativeSrc": "4602:26:20",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:20"
																								},
																								"nativeSrc": "4587:42:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:20"
																							},
																							"nativeSrc": "4587:42:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:20"
																						},
																						{
																							"nativeSrc": "4646:24:20",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:20",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:20",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:20"
																								},
																								"nativeSrc": "4656:14:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:20"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:20"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:20",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:20",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:20",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:20",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:20"
																								},
																								"nativeSrc": "4700:18:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:20"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:20",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:20"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:20"
																					},
																					"nativeSrc": "4532:14:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:20"
																				},
																				"nativeSrc": "4524:208:20",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:20",
																					"nodeType": "YulBlock",
																					"src": "4547:21:20",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:20",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:20",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:20",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:20",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:20"
																								},
																								"nativeSrc": "4554:12:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:20"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:20"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:20",
																					"nodeType": "YulBlock",
																					"src": "4528:3:20",
																					"statements": []
																				},
																				"src": "4524:208:20"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:20",
																					"nodeType": "YulBlock",
																					"src": "4768:156:20",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:20",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:20"
																										},
																										"nativeSrc": "4809:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:20"
																								},
																								"nativeSrc": "4803:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:20"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:20",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:20",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:20"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:20",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:20"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:20",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:20",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:20"
																												},
																												"nativeSrc": "4891:17:20",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:20"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:20",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:20"
																										},
																										"nativeSrc": "4861:48:20",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:20"
																								},
																								"nativeSrc": "4846:64:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:20"
																							},
																							"nativeSrc": "4846:64:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:20"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:20"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:20"
																					},
																					"nativeSrc": "4748:19:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:20"
																				},
																				"nativeSrc": "4745:179:20",
																				"nodeType": "YulIf",
																				"src": "4745:179:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:20",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:20"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:20",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:20",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:20"
																									},
																									"nativeSrc": "4954:14:20",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:20"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:20",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:20",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:20"
																							},
																							"nativeSrc": "4950:22:20",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:20"
																					},
																					"nativeSrc": "4937:36:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:20"
																				},
																				"nativeSrc": "4937:36:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:20"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:20",
																	"nodeType": "YulCase",
																	"src": "4365:618:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:20",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:20",
																		"nodeType": "YulBlock",
																		"src": "5000:222:20",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:20",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:20",
																					"nodeType": "YulBlock",
																					"src": "5051:67:20",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:20",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:20"
																										},
																										"nativeSrc": "5084:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:20"
																								},
																								"nativeSrc": "5078:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:20"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:20"
																				},
																				"nativeSrc": "5041:77:20",
																				"nodeType": "YulIf",
																				"src": "5041:77:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:20"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:20"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:20",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:20"
																							},
																							"nativeSrc": "5144:67:20",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:20"
																					},
																					"nativeSrc": "5131:81:20",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:20"
																				},
																				"nativeSrc": "5131:81:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:20"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:20",
																	"nodeType": "YulCase",
																	"src": "4992:230:20",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:20"
																},
																"nativeSrc": "4342:14:20",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:20"
															},
															"nativeSrc": "4335:887:20",
															"nodeType": "YulSwitch",
															"src": "4335:887:20"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:20",
														"nodeType": "YulTypedName",
														"src": "3914:4:20",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:20",
														"nodeType": "YulTypedName",
														"src": "3920:3:20",
														"type": ""
													}
												],
												"src": "3833:1395:20"
											},
											{
												"body": {
													"nativeSrc": "5262:152:20",
													"nodeType": "YulBlock",
													"src": "5262:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5279:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5282:77:20",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:20"
																},
																"nativeSrc": "5272:88:20",
																"nodeType": "YulFunctionCall",
																"src": "5272:88:20"
															},
															"nativeSrc": "5272:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5376:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5379:4:20",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:20"
																},
																"nativeSrc": "5369:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5369:15:20"
															},
															"nativeSrc": "5369:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5400:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:4:20",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5393:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:20"
																},
																"nativeSrc": "5393:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5393:15:20"
															},
															"nativeSrc": "5393:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5234:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:20"
											},
											{
												"body": {
													"nativeSrc": "5471:51:20",
													"nodeType": "YulBlock",
													"src": "5471:51:20",
													"statements": [
														{
															"nativeSrc": "5481:34:20",
															"nodeType": "YulAssignment",
															"src": "5481:34:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5506:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:20",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5509:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5502:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:20"
																},
																"nativeSrc": "5502:13:20",
																"nodeType": "YulFunctionCall",
																"src": "5502:13:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5481:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:20"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5420:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5452:5:20",
														"nodeType": "YulTypedName",
														"src": "5452:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5462:8:20",
														"nodeType": "YulTypedName",
														"src": "5462:8:20",
														"type": ""
													}
												],
												"src": "5420:102:20"
											},
											{
												"body": {
													"nativeSrc": "5601:775:20",
													"nodeType": "YulBlock",
													"src": "5601:775:20",
													"statements": [
														{
															"nativeSrc": "5611:15:20",
															"nodeType": "YulAssignment",
															"src": "5611:15:20",
															"value": {
																"name": "_power",
																"nativeSrc": "5620:6:20",
																"nodeType": "YulIdentifier",
																"src": "5620:6:20"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5611:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:20"
																}
															]
														},
														{
															"nativeSrc": "5635:14:20",
															"nodeType": "YulAssignment",
															"src": "5635:14:20",
															"value": {
																"name": "_base",
																"nativeSrc": "5644:5:20",
																"nodeType": "YulIdentifier",
																"src": "5644:5:20"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5635:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5693:677:20",
																"nodeType": "YulBlock",
																"src": "5693:677:20",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5781:22:20",
																			"nodeType": "YulBlock",
																			"src": "5781:22:20",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5783:16:20",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:20"
																						},
																						"nativeSrc": "5783:18:20",
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:20"
																					},
																					"nativeSrc": "5783:18:20",
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:20"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5759:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5769:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:20"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5774:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:20"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5765:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:20"
																					},
																					"nativeSrc": "5765:14:20",
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:20"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5756:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:20"
																			},
																			"nativeSrc": "5756:24:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:20"
																		},
																		"nativeSrc": "5753:50:20",
																		"nodeType": "YulIf",
																		"src": "5753:50:20"
																	},
																	{
																		"body": {
																			"nativeSrc": "5848:419:20",
																			"nodeType": "YulBlock",
																			"src": "5848:419:20",
																			"statements": [
																				{
																					"nativeSrc": "6228:25:20",
																					"nodeType": "YulAssignment",
																					"src": "6228:25:20",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6241:5:20",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:20"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6248:4:20",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:20"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6237:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:20"
																						},
																						"nativeSrc": "6237:16:20",
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:20"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6228:5:20",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:20"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5823:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5833:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5819:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:20"
																			},
																			"nativeSrc": "5819:16:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:20"
																		},
																		"nativeSrc": "5816:451:20",
																		"nodeType": "YulIf",
																		"src": "5816:451:20"
																	},
																	{
																		"nativeSrc": "6280:23:20",
																		"nodeType": "YulAssignment",
																		"src": "6280:23:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6292:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:20"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6298:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:20"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6288:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:20"
																			},
																			"nativeSrc": "6288:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:20"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6280:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6316:44:20",
																		"nodeType": "YulAssignment",
																		"src": "6316:44:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6351:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:20"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6328:22:20",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:20"
																			},
																			"nativeSrc": "6328:32:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:20"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6316:8:20",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5669:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5679:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5666:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:20"
																},
																"nativeSrc": "5666:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5666:15:20"
															},
															"nativeSrc": "5658:712:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5682:2:20",
																"nodeType": "YulBlock",
																"src": "5682:2:20",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5662:3:20",
																"nodeType": "YulBlock",
																"src": "5662:3:20",
																"statements": []
															},
															"src": "5658:712:20"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5528:848:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5556:6:20",
														"nodeType": "YulTypedName",
														"src": "5556:6:20",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5564:5:20",
														"nodeType": "YulTypedName",
														"src": "5564:5:20",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5571:8:20",
														"nodeType": "YulTypedName",
														"src": "5571:8:20",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5581:3:20",
														"nodeType": "YulTypedName",
														"src": "5581:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5589:5:20",
														"nodeType": "YulTypedName",
														"src": "5589:5:20",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5596:4:20",
														"nodeType": "YulTypedName",
														"src": "5596:4:20",
														"type": ""
													}
												],
												"src": "5528:848:20"
											},
											{
												"body": {
													"nativeSrc": "6442:1013:20",
													"nodeType": "YulBlock",
													"src": "6442:1013:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "6637:20:20",
																"nodeType": "YulBlock",
																"src": "6637:20:20",
																"statements": [
																	{
																		"nativeSrc": "6639:10:20",
																		"nodeType": "YulAssignment",
																		"src": "6639:10:20",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6648:1:20",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:20",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6639:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6650:5:20",
																		"nodeType": "YulLeave",
																		"src": "6650:5:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6627:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6620:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:20"
																},
																"nativeSrc": "6620:16:20",
																"nodeType": "YulFunctionCall",
																"src": "6620:16:20"
															},
															"nativeSrc": "6617:40:20",
															"nodeType": "YulIf",
															"src": "6617:40:20"
														},
														{
															"body": {
																"nativeSrc": "6682:20:20",
																"nodeType": "YulBlock",
																"src": "6682:20:20",
																"statements": [
																	{
																		"nativeSrc": "6684:10:20",
																		"nodeType": "YulAssignment",
																		"src": "6684:10:20",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6693:1:20",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:20",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6684:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6695:5:20",
																		"nodeType": "YulLeave",
																		"src": "6695:5:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6676:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6669:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:20"
																},
																"nativeSrc": "6669:12:20",
																"nodeType": "YulFunctionCall",
																"src": "6669:12:20"
															},
															"nativeSrc": "6666:36:20",
															"nodeType": "YulIf",
															"src": "6666:36:20"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6812:20:20",
																		"nodeType": "YulBlock",
																		"src": "6812:20:20",
																		"statements": [
																			{
																				"nativeSrc": "6814:10:20",
																				"nodeType": "YulAssignment",
																				"src": "6814:10:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6823:1:20",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:20",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6814:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:20"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6825:5:20",
																				"nodeType": "YulLeave",
																				"src": "6825:5:20"
																			}
																		]
																	},
																	"nativeSrc": "6805:27:20",
																	"nodeType": "YulCase",
																	"src": "6805:27:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6810:1:20",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:20",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6856:176:20",
																		"nodeType": "YulBlock",
																		"src": "6856:176:20",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6891:22:20",
																					"nodeType": "YulBlock",
																					"src": "6891:22:20",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6893:16:20",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:20"
																								},
																								"nativeSrc": "6893:18:20",
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:20"
																							},
																							"nativeSrc": "6893:18:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:20"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6876:8:20",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:20"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6886:3:20",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:20",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6873:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:20"
																					},
																					"nativeSrc": "6873:17:20",
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:20"
																				},
																				"nativeSrc": "6870:43:20",
																				"nodeType": "YulIf",
																				"src": "6870:43:20"
																			},
																			{
																				"nativeSrc": "6926:25:20",
																				"nodeType": "YulAssignment",
																				"src": "6926:25:20",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6939:1:20",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:20",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6942:8:20",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:20"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6935:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:20"
																					},
																					"nativeSrc": "6935:16:20",
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:20"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6926:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:20"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6982:22:20",
																					"nodeType": "YulBlock",
																					"src": "6982:22:20",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6984:16:20",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:20"
																								},
																								"nativeSrc": "6984:18:20",
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:20"
																							},
																							"nativeSrc": "6984:18:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:20"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6970:5:20",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:20"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6977:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:20"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6967:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:20"
																					},
																					"nativeSrc": "6967:14:20",
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:20"
																				},
																				"nativeSrc": "6964:40:20",
																				"nodeType": "YulIf",
																				"src": "6964:40:20"
																			},
																			{
																				"nativeSrc": "7017:5:20",
																				"nodeType": "YulLeave",
																				"src": "7017:5:20"
																			}
																		]
																	},
																	"nativeSrc": "6841:191:20",
																	"nodeType": "YulCase",
																	"src": "6841:191:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6846:1:20",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:20",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6762:4:20",
																"nodeType": "YulIdentifier",
																"src": "6762:4:20"
															},
															"nativeSrc": "6755:277:20",
															"nodeType": "YulSwitch",
															"src": "6755:277:20"
														},
														{
															"body": {
																"nativeSrc": "7164:123:20",
																"nodeType": "YulBlock",
																"src": "7164:123:20",
																"statements": [
																	{
																		"nativeSrc": "7178:28:20",
																		"nodeType": "YulAssignment",
																		"src": "7178:28:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7191:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:20"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7197:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:20"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7187:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:20"
																			},
																			"nativeSrc": "7187:19:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:20"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7178:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:20"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7237:22:20",
																			"nodeType": "YulBlock",
																			"src": "7237:22:20",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7239:16:20",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:20"
																						},
																						"nativeSrc": "7239:18:20",
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:20"
																					},
																					"nativeSrc": "7239:18:20",
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:20"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7225:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:20"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7232:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:20"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7222:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:20"
																			},
																			"nativeSrc": "7222:14:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:20"
																		},
																		"nativeSrc": "7219:40:20",
																		"nodeType": "YulIf",
																		"src": "7219:40:20"
																	},
																	{
																		"nativeSrc": "7272:5:20",
																		"nodeType": "YulLeave",
																		"src": "7272:5:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7067:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7073:2:20",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:20",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7064:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:20"
																				},
																				"nativeSrc": "7064:12:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7081:8:20",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7091:2:20",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:20",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7078:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:20"
																				},
																				"nativeSrc": "7078:16:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7060:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:20"
																		},
																		"nativeSrc": "7060:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7116:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7122:3:20",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:20",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7113:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:20"
																				},
																				"nativeSrc": "7113:13:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7131:8:20",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7141:2:20",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:20",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7128:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:20"
																				},
																				"nativeSrc": "7128:16:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7109:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:20"
																		},
																		"nativeSrc": "7109:36:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7044:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:20"
																},
																"nativeSrc": "7044:111:20",
																"nodeType": "YulFunctionCall",
																"src": "7044:111:20"
															},
															"nativeSrc": "7041:246:20",
															"nodeType": "YulIf",
															"src": "7041:246:20"
														},
														{
															"nativeSrc": "7297:57:20",
															"nodeType": "YulAssignment",
															"src": "7297:57:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7331:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:20",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7334:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:20"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7340:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:20"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7350:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:20"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7312:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:20"
																},
																"nativeSrc": "7312:42:20",
																"nodeType": "YulFunctionCall",
																"src": "7312:42:20"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7297:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:20"
																},
																{
																	"name": "base",
																	"nativeSrc": "7304:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7393:22:20",
																"nodeType": "YulBlock",
																"src": "7393:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7395:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:20"
																			},
																			"nativeSrc": "7395:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:20"
																		},
																		"nativeSrc": "7395:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7370:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7381:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:20"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7386:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:20"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7377:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:20"
																		},
																		"nativeSrc": "7377:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7367:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:20"
																},
																"nativeSrc": "7367:25:20",
																"nodeType": "YulFunctionCall",
																"src": "7367:25:20"
															},
															"nativeSrc": "7364:51:20",
															"nodeType": "YulIf",
															"src": "7364:51:20"
														},
														{
															"nativeSrc": "7424:25:20",
															"nodeType": "YulAssignment",
															"src": "7424:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7437:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:20"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7444:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7433:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:20"
																},
																"nativeSrc": "7433:16:20",
																"nodeType": "YulFunctionCall",
																"src": "7433:16:20"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7424:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:20"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6382:1073:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6412:4:20",
														"nodeType": "YulTypedName",
														"src": "6412:4:20",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6418:8:20",
														"nodeType": "YulTypedName",
														"src": "6418:8:20",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6428:3:20",
														"nodeType": "YulTypedName",
														"src": "6428:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6436:5:20",
														"nodeType": "YulTypedName",
														"src": "6436:5:20",
														"type": ""
													}
												],
												"src": "6382:1073:20"
											},
											{
												"body": {
													"nativeSrc": "7504:43:20",
													"nodeType": "YulBlock",
													"src": "7504:43:20",
													"statements": [
														{
															"nativeSrc": "7514:27:20",
															"nodeType": "YulAssignment",
															"src": "7514:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7529:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7529:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7536:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7536:4:20",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7525:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:20"
																},
																"nativeSrc": "7525:16:20",
																"nodeType": "YulFunctionCall",
																"src": "7525:16:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7514:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "7514:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7461:86:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7486:5:20",
														"nodeType": "YulTypedName",
														"src": "7486:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7496:7:20",
														"nodeType": "YulTypedName",
														"src": "7496:7:20",
														"type": ""
													}
												],
												"src": "7461:86:20"
											},
											{
												"body": {
													"nativeSrc": "7617:217:20",
													"nodeType": "YulBlock",
													"src": "7617:217:20",
													"statements": [
														{
															"nativeSrc": "7627:31:20",
															"nodeType": "YulAssignment",
															"src": "7627:31:20",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7653:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "7653:4:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7635:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "7635:17:20"
																},
																"nativeSrc": "7635:23:20",
																"nodeType": "YulFunctionCall",
																"src": "7635:23:20"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7627:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:20"
																}
															]
														},
														{
															"nativeSrc": "7667:37:20",
															"nodeType": "YulAssignment",
															"src": "7667:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7695:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "7695:8:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "7679:15:20",
																	"nodeType": "YulIdentifier",
																	"src": "7679:15:20"
																},
																"nativeSrc": "7679:25:20",
																"nodeType": "YulFunctionCall",
																"src": "7679:25:20"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7667:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "7667:8:20"
																}
															]
														},
														{
															"nativeSrc": "7714:113:20",
															"nodeType": "YulAssignment",
															"src": "7714:113:20",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7744:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "7744:4:20"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7750:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "7750:8:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7760:66:20",
																		"nodeType": "YulLiteral",
																		"src": "7760:66:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7723:20:20",
																	"nodeType": "YulIdentifier",
																	"src": "7723:20:20"
																},
																"nativeSrc": "7723:104:20",
																"nodeType": "YulFunctionCall",
																"src": "7723:104:20"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7714:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "7714:5:20"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "7553:281:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7592:4:20",
														"nodeType": "YulTypedName",
														"src": "7592:4:20",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7598:8:20",
														"nodeType": "YulTypedName",
														"src": "7598:8:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7611:5:20",
														"nodeType": "YulTypedName",
														"src": "7611:5:20",
														"type": ""
													}
												],
												"src": "7553:281:20"
											},
											{
												"body": {
													"nativeSrc": "7888:362:20",
													"nodeType": "YulBlock",
													"src": "7888:362:20",
													"statements": [
														{
															"nativeSrc": "7898:25:20",
															"nodeType": "YulAssignment",
															"src": "7898:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7921:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7921:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7903:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "7903:17:20"
																},
																"nativeSrc": "7903:20:20",
																"nodeType": "YulFunctionCall",
																"src": "7903:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7898:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "7898:1:20"
																}
															]
														},
														{
															"nativeSrc": "7932:25:20",
															"nodeType": "YulAssignment",
															"src": "7932:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7955:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7955:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7937:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "7937:17:20"
																},
																"nativeSrc": "7937:20:20",
																"nodeType": "YulFunctionCall",
																"src": "7937:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7932:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "7932:1:20"
																}
															]
														},
														{
															"nativeSrc": "7966:28:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7966:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7989:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7992:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7992:1:20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7985:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:20"
																},
																"nativeSrc": "7985:9:20",
																"nodeType": "YulFunctionCall",
																"src": "7985:9:20"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7970:11:20",
																	"nodeType": "YulTypedName",
																	"src": "7970:11:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8003:41:20",
															"nodeType": "YulAssignment",
															"src": "8003:41:20",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8032:11:20",
																		"nodeType": "YulIdentifier",
																		"src": "8032:11:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8014:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "8014:17:20"
																},
																"nativeSrc": "8014:30:20",
																"nodeType": "YulFunctionCall",
																"src": "8014:30:20"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8003:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "8003:7:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8221:22:20",
																"nodeType": "YulBlock",
																"src": "8221:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8223:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "8223:16:20"
																			},
																			"nativeSrc": "8223:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8223:18:20"
																		},
																		"nativeSrc": "8223:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8154:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "8154:1:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8147:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "8147:6:20"
																				},
																				"nativeSrc": "8147:9:20",
																				"nodeType": "YulFunctionCall",
																				"src": "8147:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8177:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "8177:1:20"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8184:7:20",
																								"nodeType": "YulIdentifier",
																								"src": "8184:7:20"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8193:1:20",
																								"nodeType": "YulIdentifier",
																								"src": "8193:1:20"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8180:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "8180:3:20"
																						},
																						"nativeSrc": "8180:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "8180:15:20"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8174:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "8174:2:20"
																				},
																				"nativeSrc": "8174:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "8174:22:20"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8127:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "8127:2:20"
																		},
																		"nativeSrc": "8127:83:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8127:83:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8107:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:20"
																},
																"nativeSrc": "8107:113:20",
																"nodeType": "YulFunctionCall",
																"src": "8107:113:20"
															},
															"nativeSrc": "8104:139:20",
															"nodeType": "YulIf",
															"src": "8104:139:20"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7840:410:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7871:1:20",
														"nodeType": "YulTypedName",
														"src": "7871:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7874:1:20",
														"nodeType": "YulTypedName",
														"src": "7874:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7880:7:20",
														"nodeType": "YulTypedName",
														"src": "7880:7:20",
														"type": ""
													}
												],
												"src": "7840:410:20"
											},
											{
												"body": {
													"nativeSrc": "8301:32:20",
													"nodeType": "YulBlock",
													"src": "8301:32:20",
													"statements": [
														{
															"nativeSrc": "8311:16:20",
															"nodeType": "YulAssignment",
															"src": "8311:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "8322:5:20",
																"nodeType": "YulIdentifier",
																"src": "8322:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8311:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "8311:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "8256:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8283:5:20",
														"nodeType": "YulTypedName",
														"src": "8283:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8293:7:20",
														"nodeType": "YulTypedName",
														"src": "8293:7:20",
														"type": ""
													}
												],
												"src": "8256:77:20"
											},
											{
												"body": {
													"nativeSrc": "8404:53:20",
													"nodeType": "YulBlock",
													"src": "8404:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8421:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8421:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8444:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8444:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8426:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "8426:17:20"
																		},
																		"nativeSrc": "8426:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8426:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8414:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:20"
																},
																"nativeSrc": "8414:37:20",
																"nodeType": "YulFunctionCall",
																"src": "8414:37:20"
															},
															"nativeSrc": "8414:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "8414:37:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8339:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8392:5:20",
														"nodeType": "YulTypedName",
														"src": "8392:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8399:3:20",
														"nodeType": "YulTypedName",
														"src": "8399:3:20",
														"type": ""
													}
												],
												"src": "8339:118:20"
											},
											{
												"body": {
													"nativeSrc": "8528:53:20",
													"nodeType": "YulBlock",
													"src": "8528:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8545:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8568:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8568:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8550:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "8550:17:20"
																		},
																		"nativeSrc": "8550:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8550:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8538:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8538:6:20"
																},
																"nativeSrc": "8538:37:20",
																"nodeType": "YulFunctionCall",
																"src": "8538:37:20"
															},
															"nativeSrc": "8538:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "8538:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8463:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8516:5:20",
														"nodeType": "YulTypedName",
														"src": "8516:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8523:3:20",
														"nodeType": "YulTypedName",
														"src": "8523:3:20",
														"type": ""
													}
												],
												"src": "8463:118:20"
											},
											{
												"body": {
													"nativeSrc": "8632:81:20",
													"nodeType": "YulBlock",
													"src": "8632:81:20",
													"statements": [
														{
															"nativeSrc": "8642:65:20",
															"nodeType": "YulAssignment",
															"src": "8642:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8657:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "8657:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8664:42:20",
																		"nodeType": "YulLiteral",
																		"src": "8664:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8653:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8653:3:20"
																},
																"nativeSrc": "8653:54:20",
																"nodeType": "YulFunctionCall",
																"src": "8653:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8642:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "8642:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8587:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8614:5:20",
														"nodeType": "YulTypedName",
														"src": "8614:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8624:7:20",
														"nodeType": "YulTypedName",
														"src": "8624:7:20",
														"type": ""
													}
												],
												"src": "8587:126:20"
											},
											{
												"body": {
													"nativeSrc": "8764:51:20",
													"nodeType": "YulBlock",
													"src": "8764:51:20",
													"statements": [
														{
															"nativeSrc": "8774:35:20",
															"nodeType": "YulAssignment",
															"src": "8774:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8803:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "8803:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8785:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "8785:17:20"
																},
																"nativeSrc": "8785:24:20",
																"nodeType": "YulFunctionCall",
																"src": "8785:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8774:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "8774:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8719:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8746:5:20",
														"nodeType": "YulTypedName",
														"src": "8746:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8756:7:20",
														"nodeType": "YulTypedName",
														"src": "8756:7:20",
														"type": ""
													}
												],
												"src": "8719:96:20"
											},
											{
												"body": {
													"nativeSrc": "8886:53:20",
													"nodeType": "YulBlock",
													"src": "8886:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8903:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8903:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8926:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8926:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8908:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "8908:17:20"
																		},
																		"nativeSrc": "8908:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8908:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8896:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8896:6:20"
																},
																"nativeSrc": "8896:37:20",
																"nodeType": "YulFunctionCall",
																"src": "8896:37:20"
															},
															"nativeSrc": "8896:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "8896:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8821:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8874:5:20",
														"nodeType": "YulTypedName",
														"src": "8874:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8881:3:20",
														"nodeType": "YulTypedName",
														"src": "8881:3:20",
														"type": ""
													}
												],
												"src": "8821:118:20"
											},
											{
												"body": {
													"nativeSrc": "9155:454:20",
													"nodeType": "YulBlock",
													"src": "9155:454:20",
													"statements": [
														{
															"nativeSrc": "9165:27:20",
															"nodeType": "YulAssignment",
															"src": "9165:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9177:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9177:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:3:20",
																		"nodeType": "YulLiteral",
																		"src": "9188:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9173:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9173:3:20"
																},
																"nativeSrc": "9173:19:20",
																"nodeType": "YulFunctionCall",
																"src": "9173:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9165:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9165:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9246:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9246:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9259:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9270:1:20",
																				"nodeType": "YulLiteral",
																				"src": "9270:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9255:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:20"
																		},
																		"nativeSrc": "9255:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9255:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9202:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9202:43:20"
																},
																"nativeSrc": "9202:71:20",
																"nodeType": "YulFunctionCall",
																"src": "9202:71:20"
															},
															"nativeSrc": "9202:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "9202:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9327:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9327:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9340:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9340:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9351:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9351:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9336:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:20"
																		},
																		"nativeSrc": "9336:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9336:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9283:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9283:43:20"
																},
																"nativeSrc": "9283:72:20",
																"nodeType": "YulFunctionCall",
																"src": "9283:72:20"
															},
															"nativeSrc": "9283:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "9283:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9409:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9409:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9422:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9422:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9433:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9433:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9418:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9418:3:20"
																		},
																		"nativeSrc": "9418:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9418:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9365:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9365:43:20"
																},
																"nativeSrc": "9365:72:20",
																"nodeType": "YulFunctionCall",
																"src": "9365:72:20"
															},
															"nativeSrc": "9365:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "9365:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9491:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9491:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9504:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9504:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9515:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9515:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9500:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9500:3:20"
																		},
																		"nativeSrc": "9500:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9500:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9447:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9447:43:20"
																},
																"nativeSrc": "9447:72:20",
																"nodeType": "YulFunctionCall",
																"src": "9447:72:20"
															},
															"nativeSrc": "9447:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "9447:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "9573:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9573:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9586:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9586:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9597:3:20",
																				"nodeType": "YulLiteral",
																				"src": "9597:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9582:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9582:3:20"
																		},
																		"nativeSrc": "9582:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9582:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9529:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9529:43:20"
																},
																"nativeSrc": "9529:73:20",
																"nodeType": "YulFunctionCall",
																"src": "9529:73:20"
															},
															"nativeSrc": "9529:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "9529:73:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8945:664:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9095:9:20",
														"nodeType": "YulTypedName",
														"src": "9095:9:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9107:6:20",
														"nodeType": "YulTypedName",
														"src": "9107:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9115:6:20",
														"nodeType": "YulTypedName",
														"src": "9115:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9123:6:20",
														"nodeType": "YulTypedName",
														"src": "9123:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9131:6:20",
														"nodeType": "YulTypedName",
														"src": "9131:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9139:6:20",
														"nodeType": "YulTypedName",
														"src": "9139:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9150:4:20",
														"nodeType": "YulTypedName",
														"src": "9150:4:20",
														"type": ""
													}
												],
												"src": "8945:664:20"
											},
											{
												"body": {
													"nativeSrc": "9713:124:20",
													"nodeType": "YulBlock",
													"src": "9713:124:20",
													"statements": [
														{
															"nativeSrc": "9723:26:20",
															"nodeType": "YulAssignment",
															"src": "9723:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9735:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9735:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9746:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9746:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9731:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9731:3:20"
																},
																"nativeSrc": "9731:18:20",
																"nodeType": "YulFunctionCall",
																"src": "9731:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9723:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9723:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9803:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9803:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9816:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9816:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9827:1:20",
																				"nodeType": "YulLiteral",
																				"src": "9827:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9812:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:20"
																		},
																		"nativeSrc": "9812:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9812:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9759:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9759:43:20"
																},
																"nativeSrc": "9759:71:20",
																"nodeType": "YulFunctionCall",
																"src": "9759:71:20"
															},
															"nativeSrc": "9759:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "9759:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9615:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9685:9:20",
														"nodeType": "YulTypedName",
														"src": "9685:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9697:6:20",
														"nodeType": "YulTypedName",
														"src": "9697:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9708:4:20",
														"nodeType": "YulTypedName",
														"src": "9708:4:20",
														"type": ""
													}
												],
												"src": "9615:222:20"
											},
											{
												"body": {
													"nativeSrc": "9939:73:20",
													"nodeType": "YulBlock",
													"src": "9939:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9956:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9956:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9961:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9961:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9949:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9949:6:20"
																},
																"nativeSrc": "9949:19:20",
																"nodeType": "YulFunctionCall",
																"src": "9949:19:20"
															},
															"nativeSrc": "9949:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "9949:19:20"
														},
														{
															"nativeSrc": "9977:29:20",
															"nodeType": "YulAssignment",
															"src": "9977:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9996:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9996:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10001:4:20",
																		"nodeType": "YulLiteral",
																		"src": "10001:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9992:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9992:3:20"
																},
																"nativeSrc": "9992:14:20",
																"nodeType": "YulFunctionCall",
																"src": "9992:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9977:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "9977:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9843:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9911:3:20",
														"nodeType": "YulTypedName",
														"src": "9911:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9916:6:20",
														"nodeType": "YulTypedName",
														"src": "9916:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9927:11:20",
														"nodeType": "YulTypedName",
														"src": "9927:11:20",
														"type": ""
													}
												],
												"src": "9843:169:20"
											},
											{
												"body": {
													"nativeSrc": "10080:77:20",
													"nodeType": "YulBlock",
													"src": "10080:77:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10097:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10097:3:20"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10102:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10102:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10107:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10107:6:20"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "10091:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "10091:5:20"
																},
																"nativeSrc": "10091:23:20",
																"nodeType": "YulFunctionCall",
																"src": "10091:23:20"
															},
															"nativeSrc": "10091:23:20",
															"nodeType": "YulExpressionStatement",
															"src": "10091:23:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10134:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "10134:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10139:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10139:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10130:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10130:3:20"
																		},
																		"nativeSrc": "10130:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10130:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10148:1:20",
																		"nodeType": "YulLiteral",
																		"src": "10148:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10123:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10123:6:20"
																},
																"nativeSrc": "10123:27:20",
																"nodeType": "YulFunctionCall",
																"src": "10123:27:20"
															},
															"nativeSrc": "10123:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "10123:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10018:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10062:3:20",
														"nodeType": "YulTypedName",
														"src": "10062:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10067:3:20",
														"nodeType": "YulTypedName",
														"src": "10067:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10072:6:20",
														"nodeType": "YulTypedName",
														"src": "10072:6:20",
														"type": ""
													}
												],
												"src": "10018:139:20"
											},
											{
												"body": {
													"nativeSrc": "10211:54:20",
													"nodeType": "YulBlock",
													"src": "10211:54:20",
													"statements": [
														{
															"nativeSrc": "10221:38:20",
															"nodeType": "YulAssignment",
															"src": "10221:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10239:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "10239:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10246:2:20",
																				"nodeType": "YulLiteral",
																				"src": "10246:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10235:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10235:3:20"
																		},
																		"nativeSrc": "10235:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10235:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10255:2:20",
																				"nodeType": "YulLiteral",
																				"src": "10255:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10251:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10251:3:20"
																		},
																		"nativeSrc": "10251:7:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10251:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10231:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10231:3:20"
																},
																"nativeSrc": "10231:28:20",
																"nodeType": "YulFunctionCall",
																"src": "10231:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10221:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10221:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "10163:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10194:5:20",
														"nodeType": "YulTypedName",
														"src": "10194:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10204:6:20",
														"nodeType": "YulTypedName",
														"src": "10204:6:20",
														"type": ""
													}
												],
												"src": "10163:102:20"
											},
											{
												"body": {
													"nativeSrc": "10363:285:20",
													"nodeType": "YulBlock",
													"src": "10363:285:20",
													"statements": [
														{
															"nativeSrc": "10373:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "10373:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10420:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "10420:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "10387:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "10387:32:20"
																},
																"nativeSrc": "10387:39:20",
																"nodeType": "YulFunctionCall",
																"src": "10387:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10377:6:20",
																	"nodeType": "YulTypedName",
																	"src": "10377:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10435:78:20",
															"nodeType": "YulAssignment",
															"src": "10435:78:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10501:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10501:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10506:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10506:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10442:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "10442:58:20"
																},
																"nativeSrc": "10442:71:20",
																"nodeType": "YulFunctionCall",
																"src": "10442:71:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10435:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10435:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10561:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "10561:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10568:4:20",
																				"nodeType": "YulLiteral",
																				"src": "10568:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10557:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10557:3:20"
																		},
																		"nativeSrc": "10557:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10557:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10575:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10575:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10580:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10580:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10522:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "10522:34:20"
																},
																"nativeSrc": "10522:65:20",
																"nodeType": "YulFunctionCall",
																"src": "10522:65:20"
															},
															"nativeSrc": "10522:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "10522:65:20"
														},
														{
															"nativeSrc": "10596:46:20",
															"nodeType": "YulAssignment",
															"src": "10596:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10607:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10607:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10634:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10634:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10612:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "10612:21:20"
																		},
																		"nativeSrc": "10612:29:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10612:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10603:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10603:3:20"
																},
																"nativeSrc": "10603:39:20",
																"nodeType": "YulFunctionCall",
																"src": "10603:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10596:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10596:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10271:377:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10344:5:20",
														"nodeType": "YulTypedName",
														"src": "10344:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10351:3:20",
														"nodeType": "YulTypedName",
														"src": "10351:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10359:3:20",
														"nodeType": "YulTypedName",
														"src": "10359:3:20",
														"type": ""
													}
												],
												"src": "10271:377:20"
											},
											{
												"body": {
													"nativeSrc": "10772:195:20",
													"nodeType": "YulBlock",
													"src": "10772:195:20",
													"statements": [
														{
															"nativeSrc": "10782:26:20",
															"nodeType": "YulAssignment",
															"src": "10782:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10794:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "10794:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10805:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10805:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10790:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10790:3:20"
																},
																"nativeSrc": "10790:18:20",
																"nodeType": "YulFunctionCall",
																"src": "10790:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10782:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "10782:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10829:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10829:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10840:1:20",
																				"nodeType": "YulLiteral",
																				"src": "10840:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10825:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10825:3:20"
																		},
																		"nativeSrc": "10825:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10825:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10848:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "10848:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10854:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10854:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10844:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10844:3:20"
																		},
																		"nativeSrc": "10844:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10844:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10818:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10818:6:20"
																},
																"nativeSrc": "10818:47:20",
																"nodeType": "YulFunctionCall",
																"src": "10818:47:20"
															},
															"nativeSrc": "10818:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "10818:47:20"
														},
														{
															"nativeSrc": "10874:86:20",
															"nodeType": "YulAssignment",
															"src": "10874:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10946:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10946:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10955:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "10955:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10882:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "10882:63:20"
																},
																"nativeSrc": "10882:78:20",
																"nodeType": "YulFunctionCall",
																"src": "10882:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10874:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "10874:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10654:313:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10744:9:20",
														"nodeType": "YulTypedName",
														"src": "10744:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10756:6:20",
														"nodeType": "YulTypedName",
														"src": "10756:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10767:4:20",
														"nodeType": "YulTypedName",
														"src": "10767:4:20",
														"type": ""
													}
												],
												"src": "10654:313:20"
											},
											{
												"body": {
													"nativeSrc": "11031:40:20",
													"nodeType": "YulBlock",
													"src": "11031:40:20",
													"statements": [
														{
															"nativeSrc": "11042:22:20",
															"nodeType": "YulAssignment",
															"src": "11042:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11058:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "11058:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11052:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "11052:5:20"
																},
																"nativeSrc": "11052:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11052:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11042:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11042:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "10973:98:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11014:5:20",
														"nodeType": "YulTypedName",
														"src": "11014:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11024:6:20",
														"nodeType": "YulTypedName",
														"src": "11024:6:20",
														"type": ""
													}
												],
												"src": "10973:98:20"
											},
											{
												"body": {
													"nativeSrc": "11133:60:20",
													"nodeType": "YulBlock",
													"src": "11133:60:20",
													"statements": [
														{
															"nativeSrc": "11143:11:20",
															"nodeType": "YulAssignment",
															"src": "11143:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "11151:3:20",
																"nodeType": "YulIdentifier",
																"src": "11151:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11143:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11143:4:20"
																}
															]
														},
														{
															"nativeSrc": "11164:22:20",
															"nodeType": "YulAssignment",
															"src": "11164:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11176:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11176:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11181:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11181:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11172:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11172:3:20"
																},
																"nativeSrc": "11172:14:20",
																"nodeType": "YulFunctionCall",
																"src": "11172:14:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11164:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11164:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "11077:116:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11120:3:20",
														"nodeType": "YulTypedName",
														"src": "11120:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11128:4:20",
														"nodeType": "YulTypedName",
														"src": "11128:4:20",
														"type": ""
													}
												],
												"src": "11077:116:20"
											},
											{
												"body": {
													"nativeSrc": "11254:99:20",
													"nodeType": "YulBlock",
													"src": "11254:99:20",
													"statements": [
														{
															"nativeSrc": "11265:42:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11265:42:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "11302:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "11302:3:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11296:5:20",
																			"nodeType": "YulIdentifier",
																			"src": "11296:5:20"
																		},
																		"nativeSrc": "11296:10:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11296:10:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "11278:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "11278:17:20"
																},
																"nativeSrc": "11278:29:20",
																"nodeType": "YulFunctionCall",
																"src": "11278:29:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11269:5:20",
																	"nodeType": "YulTypedName",
																	"src": "11269:5:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11317:29:20",
															"nodeType": "YulAssignment",
															"src": "11317:29:20",
															"value": {
																"name": "value",
																"nativeSrc": "11341:5:20",
																"nodeType": "YulIdentifier",
																"src": "11341:5:20"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "11317:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "11317:11:20"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "11199:154:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11234:3:20",
														"nodeType": "YulTypedName",
														"src": "11234:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "11242:11:20",
														"nodeType": "YulTypedName",
														"src": "11242:11:20",
														"type": ""
													}
												],
												"src": "11199:154:20"
											},
											{
												"body": {
													"nativeSrc": "11449:504:20",
													"nodeType": "YulBlock",
													"src": "11449:504:20",
													"statements": [
														{
															"nativeSrc": "11460:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11460:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11506:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "11506:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11474:31:20",
																	"nodeType": "YulIdentifier",
																	"src": "11474:31:20"
																},
																"nativeSrc": "11474:38:20",
																"nodeType": "YulFunctionCall",
																"src": "11474:38:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11464:6:20",
																	"nodeType": "YulTypedName",
																	"src": "11464:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11521:21:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11521:21:20",
															"value": {
																"name": "array",
																"nativeSrc": "11537:5:20",
																"nodeType": "YulIdentifier",
																"src": "11537:5:20"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11525:8:20",
																	"nodeType": "YulTypedName",
																	"src": "11525:8:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11552:52:20",
															"nodeType": "YulAssignment",
															"src": "11552:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11598:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "11598:5:20"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "11564:33:20",
																	"nodeType": "YulIdentifier",
																	"src": "11564:33:20"
																},
																"nativeSrc": "11564:40:20",
																"nodeType": "YulFunctionCall",
																"src": "11564:40:20"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11552:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "11552:8:20"
																}
															]
														},
														{
															"nativeSrc": "11614:44:20",
															"nodeType": "YulAssignment",
															"src": "11614:44:20",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "11649:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "11649:8:20"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "11623:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "11623:25:20"
																},
																"nativeSrc": "11623:35:20",
																"nodeType": "YulFunctionCall",
																"src": "11623:35:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11614:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "11614:5:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11686:260:20",
																"nodeType": "YulBlock",
																"src": "11686:260:20",
																"statements": [
																	{
																		"nativeSrc": "11700:236:20",
																		"nodeType": "YulAssignment",
																		"src": "11700:236:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "11730:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "11730:5:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11797:1:20",
																									"nodeType": "YulLiteral",
																									"src": "11797:1:20",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11804:2:20",
																											"nodeType": "YulLiteral",
																											"src": "11804:2:20",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "11808:6:20",
																											"nodeType": "YulIdentifier",
																											"src": "11808:6:20"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "11800:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "11800:3:20"
																									},
																									"nativeSrc": "11800:15:20",
																									"nodeType": "YulFunctionCall",
																									"src": "11800:15:20"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "11793:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "11793:3:20"
																							},
																							"nativeSrc": "11793:23:20",
																							"nodeType": "YulFunctionCall",
																							"src": "11793:23:20"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11838:66:20",
																							"nodeType": "YulLiteral",
																							"src": "11838:66:20",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "11753:18:20",
																						"nodeType": "YulIdentifier",
																						"src": "11753:18:20"
																					},
																					"nativeSrc": "11753:169:20",
																					"nodeType": "YulFunctionCall",
																					"src": "11753:169:20"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11709:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "11709:3:20"
																			},
																			"nativeSrc": "11709:227:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11709:227:20"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "11700:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "11700:5:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11674:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11674:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11682:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11682:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11671:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "11671:2:20"
																},
																"nativeSrc": "11671:14:20",
																"nodeType": "YulFunctionCall",
																"src": "11671:14:20"
															},
															"nativeSrc": "11668:278:20",
															"nodeType": "YulIf",
															"src": "11668:278:20"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "11359:594:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11433:5:20",
														"nodeType": "YulTypedName",
														"src": "11433:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11443:5:20",
														"nodeType": "YulTypedName",
														"src": "11443:5:20",
														"type": ""
													}
												],
												"src": "11359:594:20"
											},
											{
												"body": {
													"nativeSrc": "12003:147:20",
													"nodeType": "YulBlock",
													"src": "12003:147:20",
													"statements": [
														{
															"nativeSrc": "12013:25:20",
															"nodeType": "YulAssignment",
															"src": "12013:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12036:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12036:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12018:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "12018:17:20"
																},
																"nativeSrc": "12018:20:20",
																"nodeType": "YulFunctionCall",
																"src": "12018:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12013:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "12013:1:20"
																}
															]
														},
														{
															"nativeSrc": "12047:25:20",
															"nodeType": "YulAssignment",
															"src": "12047:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12070:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12070:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12052:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "12052:17:20"
																},
																"nativeSrc": "12052:20:20",
																"nodeType": "YulFunctionCall",
																"src": "12052:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12047:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "12047:1:20"
																}
															]
														},
														{
															"nativeSrc": "12081:16:20",
															"nodeType": "YulAssignment",
															"src": "12081:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12092:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12092:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12095:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12095:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12088:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12088:3:20"
																},
																"nativeSrc": "12088:9:20",
																"nodeType": "YulFunctionCall",
																"src": "12088:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12081:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12081:3:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12121:22:20",
																"nodeType": "YulBlock",
																"src": "12121:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12123:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "12123:16:20"
																			},
																			"nativeSrc": "12123:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "12123:18:20"
																		},
																		"nativeSrc": "12123:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "12123:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12113:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12113:1:20"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12116:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "12116:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12110:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "12110:2:20"
																},
																"nativeSrc": "12110:10:20",
																"nodeType": "YulFunctionCall",
																"src": "12110:10:20"
															},
															"nativeSrc": "12107:36:20",
															"nodeType": "YulIf",
															"src": "12107:36:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11959:191:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11990:1:20",
														"nodeType": "YulTypedName",
														"src": "11990:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11993:1:20",
														"nodeType": "YulTypedName",
														"src": "11993:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11999:3:20",
														"nodeType": "YulTypedName",
														"src": "11999:3:20",
														"type": ""
													}
												],
												"src": "11959:191:20"
											},
											{
												"body": {
													"nativeSrc": "12310:288:20",
													"nodeType": "YulBlock",
													"src": "12310:288:20",
													"statements": [
														{
															"nativeSrc": "12320:26:20",
															"nodeType": "YulAssignment",
															"src": "12320:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12332:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12332:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12343:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12343:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12328:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12328:3:20"
																},
																"nativeSrc": "12328:18:20",
																"nodeType": "YulFunctionCall",
																"src": "12328:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12320:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12320:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12400:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12400:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12413:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12413:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12424:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12424:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12409:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12409:3:20"
																		},
																		"nativeSrc": "12409:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12409:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12356:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12356:43:20"
																},
																"nativeSrc": "12356:71:20",
																"nodeType": "YulFunctionCall",
																"src": "12356:71:20"
															},
															"nativeSrc": "12356:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "12356:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12481:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12481:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12494:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12494:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12505:2:20",
																				"nodeType": "YulLiteral",
																				"src": "12505:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12490:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12490:3:20"
																		},
																		"nativeSrc": "12490:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12490:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12437:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12437:43:20"
																},
																"nativeSrc": "12437:72:20",
																"nodeType": "YulFunctionCall",
																"src": "12437:72:20"
															},
															"nativeSrc": "12437:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "12437:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12563:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12563:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12576:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12576:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12587:2:20",
																				"nodeType": "YulLiteral",
																				"src": "12587:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12572:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12572:3:20"
																		},
																		"nativeSrc": "12572:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12572:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12519:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12519:43:20"
																},
																"nativeSrc": "12519:72:20",
																"nodeType": "YulFunctionCall",
																"src": "12519:72:20"
															},
															"nativeSrc": "12519:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "12519:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12156:442:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12266:9:20",
														"nodeType": "YulTypedName",
														"src": "12266:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12278:6:20",
														"nodeType": "YulTypedName",
														"src": "12278:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12286:6:20",
														"nodeType": "YulTypedName",
														"src": "12286:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12294:6:20",
														"nodeType": "YulTypedName",
														"src": "12294:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12305:4:20",
														"nodeType": "YulTypedName",
														"src": "12305:4:20",
														"type": ""
													}
												],
												"src": "12156:442:20"
											},
											{
												"body": {
													"nativeSrc": "12702:124:20",
													"nodeType": "YulBlock",
													"src": "12702:124:20",
													"statements": [
														{
															"nativeSrc": "12712:26:20",
															"nodeType": "YulAssignment",
															"src": "12712:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12724:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12724:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12735:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12735:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12720:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12720:3:20"
																},
																"nativeSrc": "12720:18:20",
																"nodeType": "YulFunctionCall",
																"src": "12720:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12712:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12712:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12792:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12792:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12805:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12805:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12816:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12816:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12801:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12801:3:20"
																		},
																		"nativeSrc": "12801:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12801:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12748:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12748:43:20"
																},
																"nativeSrc": "12748:71:20",
																"nodeType": "YulFunctionCall",
																"src": "12748:71:20"
															},
															"nativeSrc": "12748:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "12748:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "12604:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12674:9:20",
														"nodeType": "YulTypedName",
														"src": "12674:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12686:6:20",
														"nodeType": "YulTypedName",
														"src": "12686:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12697:4:20",
														"nodeType": "YulTypedName",
														"src": "12697:4:20",
														"type": ""
													}
												],
												"src": "12604:222:20"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7768617400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xE68891E79A84E5908DE5AD970000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50454E4759490000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x7D3 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x7D3 JUMP JUMPDEST POP POP POP PUSH2 0x120 PUSH1 0x5 DUP4 PUSH2 0x1E6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x13C PUSH1 0x6 DUP3 PUSH2 0x1E6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x179 PUSH2 0x233 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x1E1 CALLER PUSH1 0x12 PUSH1 0xA PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x28D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x207 JUMPI PUSH2 0x200 DUP4 PUSH2 0x312 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x22D JUMP JUMPDEST DUP3 PUSH2 0x217 DUP4 PUSH2 0x377 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x7D3 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x272 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30E PUSH0 DUP4 DUP4 PUSH2 0x380 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x35E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x36A SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0xC7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x49E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x459 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x450 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x52F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x614 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x627 JUMPI PUSH2 0x626 PUSH2 0x5D0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x689 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x693 DUP7 DUP4 PUSH2 0x64E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6D7 PUSH2 0x6D2 PUSH2 0x6CD DUP5 PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F0 DUP4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x704 PUSH2 0x6FC DUP3 PUSH2 0x6DE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x65A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x718 PUSH2 0x70C JUMP JUMPDEST PUSH2 0x723 DUP2 DUP5 DUP5 PUSH2 0x6E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x746 JUMPI PUSH2 0x73B PUSH0 DUP3 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x729 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x78B JUMPI PUSH2 0x75C DUP2 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x765 DUP5 PUSH2 0x63F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x774 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x788 PUSH2 0x780 DUP6 PUSH2 0x63F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x728 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7AB PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x790 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7C3 DUP4 DUP4 PUSH2 0x79C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DC DUP3 PUSH2 0x599 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7F5 JUMPI PUSH2 0x7F4 PUSH2 0x5A3 JUMP JUMPDEST JUMPDEST PUSH2 0x7FF DUP3 SLOAD PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x80A DUP3 DUP3 DUP6 PUSH2 0x74A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x83B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x829 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x833 DUP6 DUP3 PUSH2 0x7B8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x89A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x849 DUP7 PUSH2 0x62D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x870 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x84B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x88D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x889 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x79C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x924 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x8FF PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x90F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x91D DUP6 PUSH2 0x8CF JUMP JUMPDEST SWAP5 POP PUSH2 0x8E4 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x93C JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9F7 JUMP JUMPDEST DUP2 PUSH2 0x949 JUMPI PUSH0 SWAP1 POP PUSH2 0x9F7 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x95F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x969 JUMPI PUSH2 0x998 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x97B JUMPI PUSH2 0x97A PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x992 JUMPI PUSH2 0x991 PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST POP PUSH2 0x9F7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x9CD JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x9C7 PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x9DA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x8DB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA14 DUP3 PUSH2 0x6AB JUMP JUMPDEST SWAP2 POP PUSH2 0xA1F DUP4 PUSH2 0x9FE JUMP JUMPDEST SWAP3 POP PUSH2 0xA4C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x92D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA5E DUP3 PUSH2 0x6AB JUMP JUMPDEST SWAP2 POP PUSH2 0xA69 DUP4 PUSH2 0x6AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA77 DUP2 PUSH2 0x6AB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA8E JUMPI PUSH2 0xA8D PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH2 0xA95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAB6 DUP2 PUSH2 0x6AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAE5 DUP3 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF5 DUP2 PUSH2 0xADB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xB0E PUSH0 DUP4 ADD DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xB1B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xB28 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xB35 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xAAD JUMP JUMPDEST PUSH2 0xB42 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xAEC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5F PUSH0 DUP4 ADD DUP5 PUSH2 0xAEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9D DUP3 PUSH2 0x599 JUMP JUMPDEST PUSH2 0xBA7 DUP2 DUP6 PUSH2 0xB65 JUMP JUMPDEST SWAP4 POP PUSH2 0xBB7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB75 JUMP JUMPDEST PUSH2 0xBC0 DUP2 PUSH2 0xB83 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE3 DUP2 DUP5 PUSH2 0xB93 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC0F DUP3 MLOAD PUSH2 0xA95 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC22 DUP3 PUSH2 0xBEB JUMP JUMPDEST DUP3 PUSH2 0xC2C DUP5 PUSH2 0xBF5 JUMP JUMPDEST SWAP1 POP PUSH2 0xC37 DUP2 PUSH2 0xC04 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xC77 JUMPI PUSH2 0xC72 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x64E JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC88 DUP3 PUSH2 0x6AB JUMP JUMPDEST SWAP2 POP PUSH2 0xC93 DUP4 PUSH2 0x6AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCAB JUMPI PUSH2 0xCAA PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCC4 PUSH0 DUP4 ADD DUP7 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0xCD1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAAD JUMP JUMPDEST PUSH2 0xCDE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAAD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF9 PUSH0 DUP4 ADD DUP5 PUSH2 0xAAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1CCD PUSH2 0xD50 PUSH0 CODECOPY PUSH0 PUSH2 0xB12 ADD MSTORE PUSH0 PUSH2 0xAD7 ADD MSTORE PUSH0 PUSH2 0x100B ADD MSTORE PUSH0 PUSH2 0xFEA ADD MSTORE PUSH0 PUSH2 0x9D5 ADD MSTORE PUSH0 PUSH2 0xA2B ADD MSTORE PUSH0 PUSH2 0xA54 ADD MSTORE PUSH2 0x1CCD PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D0 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x242 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x195E JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33B SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x39A PUSH2 0x837 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A7 DUP2 DUP6 DUP6 PUSH2 0x83E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3C5 PUSH2 0x837 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D2 DUP6 DUP3 DUP6 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x3DD DUP6 DUP6 DUP6 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3FF PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x453 DUP3 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x46B PUSH2 0xACE JUMP JUMPDEST PUSH2 0x473 PUSH2 0xB09 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x492 JUMPI PUSH2 0x491 PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x50E SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53A SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x585 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x55C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x585 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x568 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x59B CALLER DUP5 DUP5 PUSH2 0x8E2 JUMP JUMPDEST PUSH0 DUP4 EXTCODESIZE SWAP1 POP PUSH0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x665 JUMPI PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24A756D1 CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP3 SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90D52E8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6B5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6E3 DUP13 PUSH2 0xB44 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x71B DUP3 PUSH2 0xB97 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x72A DUP3 DUP8 DUP8 DUP8 PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x795 SWAP3 SWAP2 SWAP1 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A9 DUP11 DUP11 DUP11 PUSH2 0x83E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x85B DUP5 DUP5 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x8DC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8CD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x952 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B9 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CD DUP4 DUP4 DUP4 PUSH2 0xDAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA4D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA7A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xA82 PUSH2 0xFC6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB04 PUSH1 0x5 PUSH32 0x0 PUSH2 0x105B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB3F PUSH1 0x6 PUSH32 0x0 PUSH2 0x105B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBA9 PUSH2 0xBA3 PUSH2 0x9D2 JUMP JUMPDEST DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xBC0 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1148 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBD0 DUP3 DUP3 PUSH2 0x122F JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC45 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCBE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDA7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDFD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDF1 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xECB JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE86 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF12 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF5C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1040 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1077 JUMPI PUSH2 0x1070 DUP4 PUSH2 0x1391 JUMP JUMPDEST SWAP1 POP PUSH2 0x1102 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1083 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10AF SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1184 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1225 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x11A7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1218 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1225 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1242 JUMPI PUSH2 0x1241 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x138D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x126F JUMPI PUSH2 0x126E PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1282 JUMPI PUSH2 0x1281 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12CC PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12E0 JUMPI PUSH2 0x12DF PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1324 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131B SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1337 JUMPI PUSH2 0x1336 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x134A JUMPI PUSH2 0x1349 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x138C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x139D DUP4 PUSH2 0x1403 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13BB JUMPI PUSH2 0x13BA PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13ED JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1448 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1493 DUP3 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x149D DUP2 DUP6 PUSH2 0x145B JUMP JUMPDEST SWAP4 POP PUSH2 0x14AD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x146B JUMP JUMPDEST PUSH2 0x14B6 DUP2 PUSH2 0x1479 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D9 DUP2 DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150E DUP3 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151E DUP2 PUSH2 0x1504 JUMP JUMPDEST DUP2 EQ PUSH2 0x1528 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1539 DUP2 PUSH2 0x1515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1551 DUP2 PUSH2 0x153F JUMP JUMPDEST DUP2 EQ PUSH2 0x155B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156C DUP2 PUSH2 0x1548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1595 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A6 DUP6 DUP3 DUP7 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C4 DUP2 PUSH2 0x15B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15DD PUSH0 DUP4 ADD DUP5 PUSH2 0x15BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15EC DUP2 PUSH2 0x153F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1605 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1622 JUMPI PUSH2 0x1621 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x162F DUP7 DUP3 DUP8 ADD PUSH2 0x152B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1640 DUP7 DUP3 DUP8 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1651 DUP7 DUP3 DUP8 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1670 DUP2 PUSH2 0x165B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1689 PUSH0 DUP4 ADD DUP5 PUSH2 0x1667 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A1 DUP2 PUSH2 0x168F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1698 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E2 DUP5 DUP3 DUP6 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171F DUP2 PUSH2 0x16EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1504 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1766 DUP2 PUSH2 0x153F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1777 DUP4 DUP4 PUSH2 0x175D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1799 DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x17A3 DUP2 DUP6 PUSH2 0x173E JUMP JUMPDEST SWAP4 POP PUSH2 0x17AE DUP4 PUSH2 0x174E JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17DE JUMPI DUP2 MLOAD PUSH2 0x17C5 DUP9 DUP3 PUSH2 0x176C JUMP JUMPDEST SWAP8 POP PUSH2 0x17D0 DUP4 PUSH2 0x1783 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17B1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x17FE PUSH0 DUP4 ADD DUP11 PUSH2 0x1716 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1810 DUP2 DUP10 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1824 DUP2 DUP9 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP PUSH2 0x1833 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1840 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x184D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1698 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x185F DUP2 DUP5 PUSH2 0x178F JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1876 DUP2 PUSH2 0x165B JUMP JUMPDEST DUP2 EQ PUSH2 0x1880 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1891 DUP2 PUSH2 0x186D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18A0 DUP2 PUSH2 0x168F JUMP JUMPDEST DUP2 EQ PUSH2 0x18AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18BB DUP2 PUSH2 0x1897 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x18DC JUMPI PUSH2 0x18DB PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18E9 DUP11 DUP3 DUP12 ADD PUSH2 0x152B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x18FA DUP11 DUP3 DUP12 ADD PUSH2 0x152B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x190B DUP11 DUP3 DUP12 ADD PUSH2 0x155E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x191C DUP11 DUP3 DUP12 ADD PUSH2 0x155E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x192D DUP11 DUP3 DUP12 ADD PUSH2 0x1883 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x193E DUP11 DUP3 DUP12 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x194F DUP11 DUP3 DUP12 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1974 JUMPI PUSH2 0x1973 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1981 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1992 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A39 PUSH0 DUP4 ADD DUP6 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1A46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A56 DUP2 PUSH2 0x15B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A60 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A71 DUP2 PUSH2 0x1A4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A8C JUMPI PUSH2 0x1A8B PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A99 DUP5 DUP3 DUP6 ADD PUSH2 0x1A63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1AB5 PUSH0 DUP4 ADD DUP10 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1AC2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1ACF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1ADC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1AE9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1AF6 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x15E3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B14 PUSH0 DUP4 ADD DUP6 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1B21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1725 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B3B PUSH0 DUP4 ADD DUP7 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1B48 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1B55 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B70 PUSH0 DUP4 ADD DUP5 PUSH2 0x1725 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BAD DUP3 PUSH2 0x153F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB8 DUP4 PUSH2 0x153F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BD0 JUMPI PUSH2 0x1BCF PUSH2 0x1B76 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BE9 PUSH0 DUP4 ADD DUP9 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1BF6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1C03 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1C10 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1C1D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1725 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C3A PUSH0 DUP4 ADD DUP8 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1C47 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1C54 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1C61 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1698 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC PUSH23 0x6E1CD7CC7E7B13D472C07FD63666CE17A31B5A5380F925 0x2D 0x26 0x23 PUSH0 0xC1 SLOAD 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "432:740:19:-:0;;;554:132;;;;;;;;;;1574:52:4;;;;;;;;;;;;;;;;;1613:4;3328:431:14;;;;;;;;;;;;;;;;;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:14;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:4;638:41:19::2;644:10;546:2;664;:14;;;;:::i;:::-;656:5;:22;;;;:::i;:::-;638:5;;;:41;;:::i;:::-;432:740:::0;;2914:340:10;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:14:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1708:286:10:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:11:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:86::-;7496:7;7536:4;7529:5;7525:16;7514:27;;7461:86;;;:::o;7553:281::-;7611:5;7635:23;7653:4;7635:23;:::i;:::-;7627:31;;7679:25;7695:8;7679:25;:::i;:::-;7667:37;;7723:104;7760:66;7750:8;7744:4;7723:104;:::i;:::-;7714:113;;7553:281;;;;:::o;7840:410::-;7880:7;7903:20;7921:1;7903:20;:::i;:::-;7898:25;;7937:20;7955:1;7937:20;:::i;:::-;7932:25;;7992:1;7989;7985:9;8014:30;8032:11;8014:30;:::i;:::-;8003:41;;8193:1;8184:7;8180:15;8177:1;8174:22;8154:1;8147:9;8127:83;8104:139;;8223:18;;:::i;:::-;8104:139;7888:362;7840:410;;;;:::o;8256:77::-;8293:7;8322:5;8311:16;;8256:77;;;:::o;8339:118::-;8426:24;8444:5;8426:24;:::i;:::-;8421:3;8414:37;8339:118;;:::o;8463:::-;8550:24;8568:5;8550:24;:::i;:::-;8545:3;8538:37;8463:118;;:::o;8587:126::-;8624:7;8664:42;8657:5;8653:54;8642:65;;8587:126;;;:::o;8719:96::-;8756:7;8785:24;8803:5;8785:24;:::i;:::-;8774:35;;8719:96;;;:::o;8821:118::-;8908:24;8926:5;8908:24;:::i;:::-;8903:3;8896:37;8821:118;;:::o;8945:664::-;9150:4;9188:3;9177:9;9173:19;9165:27;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9283:72;9351:2;9340:9;9336:18;9327:6;9283:72;:::i;:::-;9365;9433:2;9422:9;9418:18;9409:6;9365:72;:::i;:::-;9447;9515:2;9504:9;9500:18;9491:6;9447:72;:::i;:::-;9529:73;9597:3;9586:9;9582:19;9573:6;9529:73;:::i;:::-;8945:664;;;;;;;;:::o;9615:222::-;9708:4;9746:2;9735:9;9731:18;9723:26;;9759:71;9827:1;9816:9;9812:17;9803:6;9759:71;:::i;:::-;9615:222;;;;:::o;9843:169::-;9927:11;9961:6;9956:3;9949:19;10001:4;9996:3;9992:14;9977:29;;9843:169;;;;:::o;10018:139::-;10107:6;10102:3;10097;10091:23;10148:1;10139:6;10134:3;10130:16;10123:27;10018:139;;;:::o;10163:102::-;10204:6;10255:2;10251:7;10246:2;10239:5;10235:14;10231:28;10221:38;;10163:102;;;:::o;10271:377::-;10359:3;10387:39;10420:5;10387:39;:::i;:::-;10442:71;10506:6;10501:3;10442:71;:::i;:::-;10435:78;;10522:65;10580:6;10575:3;10568:4;10561:5;10557:16;10522:65;:::i;:::-;10612:29;10634:6;10612:29;:::i;:::-;10607:3;10603:39;10596:46;;10363:285;10271:377;;;;:::o;10654:313::-;10767:4;10805:2;10794:9;10790:18;10782:26;;10854:9;10848:4;10844:20;10840:1;10829:9;10825:17;10818:47;10882:78;10955:4;10946:6;10882:78;:::i;:::-;10874:86;;10654:313;;;;:::o;10973:98::-;11024:6;11058:5;11052:12;11042:22;;10973:98;;;:::o;11077:116::-;11128:4;11151:3;11143:11;;11181:4;11176:3;11172:14;11164:22;;11077:116;;;:::o;11199:154::-;11242:11;11278:29;11302:3;11296:10;11278:29;:::i;:::-;11341:5;11317:29;;11254:99;11199:154;;;:::o;11359:594::-;11443:5;11474:38;11506:5;11474:38;:::i;:::-;11537:5;11564:40;11598:5;11564:40;:::i;:::-;11552:52;;11623:35;11649:8;11623:35;:::i;:::-;11614:44;;11682:2;11674:6;11671:14;11668:278;;;11753:169;11838:66;11808:6;11804:2;11800:15;11797:1;11793:23;11753:169;:::i;:::-;11730:5;11709:227;11700:236;;11668:278;11449:504;;11359:594;;;:::o;11959:191::-;11999:3;12018:20;12036:1;12018:20;:::i;:::-;12013:25;;12052:20;12070:1;12052:20;:::i;:::-;12047:25;;12095:1;12092;12088:9;12081:16;;12116:3;12113:1;12110:10;12107:36;;;12123:18;;:::i;:::-;12107:36;11959:191;;;;:::o;12156:442::-;12305:4;12343:2;12332:9;12328:18;12320:26;;12356:71;12424:1;12413:9;12409:17;12400:6;12356:71;:::i;:::-;12437:72;12505:2;12494:9;12490:18;12481:6;12437:72;:::i;:::-;12519;12587:2;12576:9;12572:18;12563:6;12519:72;:::i;:::-;12156:442;;;;;;:::o;12604:222::-;12697:4;12735:2;12724:9;12720:18;12712:26;;12748:71;12816:1;12805:9;12801:17;12792:6;12748:71;:::i;:::-;12604:222;;;;:::o;432:740:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DECIMALS_3740": {
									"entryPoint": 1001,
									"id": 3740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DOMAIN_SEPARATOR_907": {
									"entryPoint": 1014,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_2465": {
									"entryPoint": 2766,
									"id": 2465,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2477": {
									"entryPoint": 2825,
									"id": 2477,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_567": {
									"entryPoint": 2110,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 3038,
									"id": 627,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2395": {
									"entryPoint": 4038,
									"id": 2395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_domainSeparatorV4_2374": {
									"entryPoint": 2514,
									"id": 2374,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_2411": {
									"entryPoint": 2967,
									"id": 2411,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1235": {
									"entryPoint": 2103,
									"id": 1235,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_675": {
									"entryPoint": 2128,
									"id": 675,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_2250": {
									"entryPoint": 4655,
									"id": 2250,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_406": {
									"entryPoint": 2274,
									"id": 406,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_483": {
									"entryPoint": 3501,
									"id": 483,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_1295": {
									"entryPoint": 2884,
									"id": 1295,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_303": {
									"entryPoint": 1973,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_327": {
									"entryPoint": 912,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_262": {
									"entryPoint": 1028,
									"id": 262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_1439": {
									"entryPoint": 5123,
									"id": 1439,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_240": {
									"entryPoint": 1006,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2453": {
									"entryPoint": 1114,
									"id": 2453,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@name_222": {
									"entryPoint": 768,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_1280": {
									"entryPoint": 2696,
									"id": 1280,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_897": {
									"entryPoint": 1097,
									"id": 897,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_880": {
									"entryPoint": 1648,
									"id": 880,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_2201": {
									"entryPoint": 2992,
									"id": 2201,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@symbol_231": {
									"entryPoint": 1279,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_1506": {
									"entryPoint": 4187,
									"id": 1506,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_1407": {
									"entryPoint": 5009,
									"id": 1407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2551": {
									"entryPoint": 4360,
									"id": 2551,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_249": {
									"entryPoint": 946,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_359": {
									"entryPoint": 955,
									"id": 359,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_3811": {
									"entryPoint": 1423,
									"id": 3811,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_2165": {
									"entryPoint": 4424,
									"id": 2165,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7126,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 5867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6649,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16228:20",
										"nodeType": "YulBlock",
										"src": "0:16228:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:20",
													"nodeType": "YulBlock",
													"src": "66:40:20",
													"statements": [
														{
															"nativeSrc": "77:22:20",
															"nodeType": "YulAssignment",
															"src": "77:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:20"
																},
																"nativeSrc": "87:12:20",
																"nodeType": "YulFunctionCall",
																"src": "87:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:20",
														"nodeType": "YulTypedName",
														"src": "49:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:20",
														"nodeType": "YulTypedName",
														"src": "59:6:20",
														"type": ""
													}
												],
												"src": "7:99:20"
											},
											{
												"body": {
													"nativeSrc": "208:73:20",
													"nodeType": "YulBlock",
													"src": "208:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:20"
																},
																"nativeSrc": "218:19:20",
																"nodeType": "YulFunctionCall",
																"src": "218:19:20"
															},
															"nativeSrc": "218:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:20"
														},
														{
															"nativeSrc": "246:29:20",
															"nodeType": "YulAssignment",
															"src": "246:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:20",
																		"nodeType": "YulLiteral",
																		"src": "270:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:20"
																},
																"nativeSrc": "261:14:20",
																"nodeType": "YulFunctionCall",
																"src": "261:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:20",
														"nodeType": "YulTypedName",
														"src": "180:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:20",
														"nodeType": "YulTypedName",
														"src": "185:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:20",
														"nodeType": "YulTypedName",
														"src": "196:11:20",
														"type": ""
													}
												],
												"src": "112:169:20"
											},
											{
												"body": {
													"nativeSrc": "349:77:20",
													"nodeType": "YulBlock",
													"src": "349:77:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:20"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:20"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:20"
																},
																"nativeSrc": "360:23:20",
																"nodeType": "YulFunctionCall",
																"src": "360:23:20"
															},
															"nativeSrc": "360:23:20",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:20"
																		},
																		"nativeSrc": "399:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:20",
																		"nodeType": "YulLiteral",
																		"src": "417:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:20"
																},
																"nativeSrc": "392:27:20",
																"nodeType": "YulFunctionCall",
																"src": "392:27:20"
															},
															"nativeSrc": "392:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:20",
														"nodeType": "YulTypedName",
														"src": "331:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:20",
														"nodeType": "YulTypedName",
														"src": "336:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:20",
														"nodeType": "YulTypedName",
														"src": "341:6:20",
														"type": ""
													}
												],
												"src": "287:139:20"
											},
											{
												"body": {
													"nativeSrc": "480:54:20",
													"nodeType": "YulBlock",
													"src": "480:54:20",
													"statements": [
														{
															"nativeSrc": "490:38:20",
															"nodeType": "YulAssignment",
															"src": "490:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:20",
																				"nodeType": "YulLiteral",
																				"src": "515:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:20"
																		},
																		"nativeSrc": "504:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:20",
																				"nodeType": "YulLiteral",
																				"src": "524:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:20"
																		},
																		"nativeSrc": "520:7:20",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:20"
																},
																"nativeSrc": "500:28:20",
																"nodeType": "YulFunctionCall",
																"src": "500:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:20",
														"nodeType": "YulTypedName",
														"src": "463:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:20",
														"nodeType": "YulTypedName",
														"src": "473:6:20",
														"type": ""
													}
												],
												"src": "432:102:20"
											},
											{
												"body": {
													"nativeSrc": "632:285:20",
													"nodeType": "YulBlock",
													"src": "632:285:20",
													"statements": [
														{
															"nativeSrc": "642:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:20"
																},
																"nativeSrc": "656:39:20",
																"nodeType": "YulFunctionCall",
																"src": "656:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:20",
																	"nodeType": "YulTypedName",
																	"src": "646:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:20",
															"nodeType": "YulAssignment",
															"src": "704:78:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:20"
																},
																"nativeSrc": "711:71:20",
																"nodeType": "YulFunctionCall",
																"src": "711:71:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:20",
																				"nodeType": "YulLiteral",
																				"src": "837:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:20"
																		},
																		"nativeSrc": "826:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:20"
																},
																"nativeSrc": "791:65:20",
																"nodeType": "YulFunctionCall",
																"src": "791:65:20"
															},
															"nativeSrc": "791:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:20"
														},
														{
															"nativeSrc": "865:46:20",
															"nodeType": "YulAssignment",
															"src": "865:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:20"
																		},
																		"nativeSrc": "881:29:20",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:20"
																},
																"nativeSrc": "872:39:20",
																"nodeType": "YulFunctionCall",
																"src": "872:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:20",
														"nodeType": "YulTypedName",
														"src": "613:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:20",
														"nodeType": "YulTypedName",
														"src": "620:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:20",
														"nodeType": "YulTypedName",
														"src": "628:3:20",
														"type": ""
													}
												],
												"src": "540:377:20"
											},
											{
												"body": {
													"nativeSrc": "1041:195:20",
													"nodeType": "YulBlock",
													"src": "1041:195:20",
													"statements": [
														{
															"nativeSrc": "1051:26:20",
															"nodeType": "YulAssignment",
															"src": "1051:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:20"
																},
																"nativeSrc": "1059:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:20"
																		},
																		"nativeSrc": "1094:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:20"
																		},
																		"nativeSrc": "1113:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:20"
																},
																"nativeSrc": "1087:47:20",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:20"
															},
															"nativeSrc": "1087:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:20"
														},
														{
															"nativeSrc": "1143:86:20",
															"nodeType": "YulAssignment",
															"src": "1143:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:20"
																},
																"nativeSrc": "1151:78:20",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:20",
														"nodeType": "YulTypedName",
														"src": "1013:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:20",
														"nodeType": "YulTypedName",
														"src": "1025:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:20",
														"nodeType": "YulTypedName",
														"src": "1036:4:20",
														"type": ""
													}
												],
												"src": "923:313:20"
											},
											{
												"body": {
													"nativeSrc": "1282:35:20",
													"nodeType": "YulBlock",
													"src": "1282:35:20",
													"statements": [
														{
															"nativeSrc": "1292:19:20",
															"nodeType": "YulAssignment",
															"src": "1292:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:20"
																},
																"nativeSrc": "1302:9:20",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:20",
														"nodeType": "YulTypedName",
														"src": "1275:6:20",
														"type": ""
													}
												],
												"src": "1242:75:20"
											},
											{
												"body": {
													"nativeSrc": "1412:28:20",
													"nodeType": "YulBlock",
													"src": "1412:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:20"
																},
																"nativeSrc": "1422:12:20",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:20"
															},
															"nativeSrc": "1422:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:20"
											},
											{
												"body": {
													"nativeSrc": "1535:28:20",
													"nodeType": "YulBlock",
													"src": "1535:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:20"
																},
																"nativeSrc": "1545:12:20",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:20"
															},
															"nativeSrc": "1545:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:20"
											},
											{
												"body": {
													"nativeSrc": "1614:81:20",
													"nodeType": "YulBlock",
													"src": "1614:81:20",
													"statements": [
														{
															"nativeSrc": "1624:65:20",
															"nodeType": "YulAssignment",
															"src": "1624:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:20",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:20"
																},
																"nativeSrc": "1635:54:20",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:20",
														"nodeType": "YulTypedName",
														"src": "1596:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:20",
														"nodeType": "YulTypedName",
														"src": "1606:7:20",
														"type": ""
													}
												],
												"src": "1569:126:20"
											},
											{
												"body": {
													"nativeSrc": "1746:51:20",
													"nodeType": "YulBlock",
													"src": "1746:51:20",
													"statements": [
														{
															"nativeSrc": "1756:35:20",
															"nodeType": "YulAssignment",
															"src": "1756:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:20"
																},
																"nativeSrc": "1767:24:20",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:20",
														"nodeType": "YulTypedName",
														"src": "1728:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:20",
														"nodeType": "YulTypedName",
														"src": "1738:7:20",
														"type": ""
													}
												],
												"src": "1701:96:20"
											},
											{
												"body": {
													"nativeSrc": "1846:79:20",
													"nodeType": "YulBlock",
													"src": "1846:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:20",
																"nodeType": "YulBlock",
																"src": "1903:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:20"
																			},
																			"nativeSrc": "1905:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:20"
																		},
																		"nativeSrc": "1905:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:20"
																				},
																				"nativeSrc": "1876:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:20"
																		},
																		"nativeSrc": "1866:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:20"
																},
																"nativeSrc": "1859:43:20",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:20"
															},
															"nativeSrc": "1856:63:20",
															"nodeType": "YulIf",
															"src": "1856:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:20",
														"nodeType": "YulTypedName",
														"src": "1839:5:20",
														"type": ""
													}
												],
												"src": "1803:122:20"
											},
											{
												"body": {
													"nativeSrc": "1983:87:20",
													"nodeType": "YulBlock",
													"src": "1983:87:20",
													"statements": [
														{
															"nativeSrc": "1993:29:20",
															"nodeType": "YulAssignment",
															"src": "1993:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:20"
																},
																"nativeSrc": "2002:20:20",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:20"
																},
																"nativeSrc": "2031:33:20",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:20"
															},
															"nativeSrc": "2031:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:20"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:20",
														"nodeType": "YulTypedName",
														"src": "1961:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:20",
														"nodeType": "YulTypedName",
														"src": "1969:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:20",
														"nodeType": "YulTypedName",
														"src": "1977:5:20",
														"type": ""
													}
												],
												"src": "1931:139:20"
											},
											{
												"body": {
													"nativeSrc": "2121:32:20",
													"nodeType": "YulBlock",
													"src": "2121:32:20",
													"statements": [
														{
															"nativeSrc": "2131:16:20",
															"nodeType": "YulAssignment",
															"src": "2131:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:20",
																"nodeType": "YulIdentifier",
																"src": "2142:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:20",
														"nodeType": "YulTypedName",
														"src": "2103:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:20",
														"nodeType": "YulTypedName",
														"src": "2113:7:20",
														"type": ""
													}
												],
												"src": "2076:77:20"
											},
											{
												"body": {
													"nativeSrc": "2202:79:20",
													"nodeType": "YulBlock",
													"src": "2202:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:20",
																"nodeType": "YulBlock",
																"src": "2259:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:20"
																			},
																			"nativeSrc": "2261:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:20"
																		},
																		"nativeSrc": "2261:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:20"
																				},
																				"nativeSrc": "2232:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:20"
																		},
																		"nativeSrc": "2222:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:20"
																},
																"nativeSrc": "2215:43:20",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:20"
															},
															"nativeSrc": "2212:63:20",
															"nodeType": "YulIf",
															"src": "2212:63:20"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:20",
														"nodeType": "YulTypedName",
														"src": "2195:5:20",
														"type": ""
													}
												],
												"src": "2159:122:20"
											},
											{
												"body": {
													"nativeSrc": "2339:87:20",
													"nodeType": "YulBlock",
													"src": "2339:87:20",
													"statements": [
														{
															"nativeSrc": "2349:29:20",
															"nodeType": "YulAssignment",
															"src": "2349:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:20"
																},
																"nativeSrc": "2358:20:20",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:20"
																},
																"nativeSrc": "2387:33:20",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:20"
															},
															"nativeSrc": "2387:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:20",
														"nodeType": "YulTypedName",
														"src": "2317:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:20",
														"nodeType": "YulTypedName",
														"src": "2325:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:20",
														"nodeType": "YulTypedName",
														"src": "2333:5:20",
														"type": ""
													}
												],
												"src": "2287:139:20"
											},
											{
												"body": {
													"nativeSrc": "2515:391:20",
													"nodeType": "YulBlock",
													"src": "2515:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:20",
																"nodeType": "YulBlock",
																"src": "2561:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:20"
																			},
																			"nativeSrc": "2563:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:20"
																		},
																		"nativeSrc": "2563:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:20"
																		},
																		"nativeSrc": "2532:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:20"
																},
																"nativeSrc": "2528:32:20",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:20"
															},
															"nativeSrc": "2525:119:20",
															"nodeType": "YulIf",
															"src": "2525:119:20"
														},
														{
															"nativeSrc": "2654:117:20",
															"nodeType": "YulBlock",
															"src": "2654:117:20",
															"statements": [
																{
																	"nativeSrc": "2669:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:20",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:20",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:20",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:20"
																				},
																				"nativeSrc": "2729:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:20"
																		},
																		"nativeSrc": "2708:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:20",
															"nodeType": "YulBlock",
															"src": "2781:118:20",
															"statements": [
																{
																	"nativeSrc": "2796:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:20",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:20",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:20"
																				},
																				"nativeSrc": "2857:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:20"
																		},
																		"nativeSrc": "2836:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:20",
														"nodeType": "YulTypedName",
														"src": "2477:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:20",
														"nodeType": "YulTypedName",
														"src": "2488:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:20",
														"nodeType": "YulTypedName",
														"src": "2500:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:20",
														"nodeType": "YulTypedName",
														"src": "2508:6:20",
														"type": ""
													}
												],
												"src": "2432:474:20"
											},
											{
												"body": {
													"nativeSrc": "2954:48:20",
													"nodeType": "YulBlock",
													"src": "2954:48:20",
													"statements": [
														{
															"nativeSrc": "2964:32:20",
															"nodeType": "YulAssignment",
															"src": "2964:32:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:20"
																		},
																		"nativeSrc": "2982:13:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:20"
																},
																"nativeSrc": "2975:21:20",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:20",
														"nodeType": "YulTypedName",
														"src": "2936:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:20",
														"nodeType": "YulTypedName",
														"src": "2946:7:20",
														"type": ""
													}
												],
												"src": "2912:90:20"
											},
											{
												"body": {
													"nativeSrc": "3067:50:20",
													"nodeType": "YulBlock",
													"src": "3067:50:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:20",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:20"
																		},
																		"nativeSrc": "3089:21:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:20"
																},
																"nativeSrc": "3077:34:20",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:20"
															},
															"nativeSrc": "3077:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:20"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:20",
														"nodeType": "YulTypedName",
														"src": "3055:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:20",
														"nodeType": "YulTypedName",
														"src": "3062:3:20",
														"type": ""
													}
												],
												"src": "3008:109:20"
											},
											{
												"body": {
													"nativeSrc": "3215:118:20",
													"nodeType": "YulBlock",
													"src": "3215:118:20",
													"statements": [
														{
															"nativeSrc": "3225:26:20",
															"nodeType": "YulAssignment",
															"src": "3225:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:20"
																},
																"nativeSrc": "3233:18:20",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:20"
																		},
																		"nativeSrc": "3308:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:20",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:20"
																},
																"nativeSrc": "3261:65:20",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:20"
															},
															"nativeSrc": "3261:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:20",
														"nodeType": "YulTypedName",
														"src": "3187:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:20",
														"nodeType": "YulTypedName",
														"src": "3199:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:20",
														"nodeType": "YulTypedName",
														"src": "3210:4:20",
														"type": ""
													}
												],
												"src": "3123:210:20"
											},
											{
												"body": {
													"nativeSrc": "3404:53:20",
													"nodeType": "YulBlock",
													"src": "3404:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:20"
																		},
																		"nativeSrc": "3426:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:20"
																},
																"nativeSrc": "3414:37:20",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:20"
															},
															"nativeSrc": "3414:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:20",
														"nodeType": "YulTypedName",
														"src": "3392:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:20",
														"nodeType": "YulTypedName",
														"src": "3399:3:20",
														"type": ""
													}
												],
												"src": "3339:118:20"
											},
											{
												"body": {
													"nativeSrc": "3561:124:20",
													"nodeType": "YulBlock",
													"src": "3561:124:20",
													"statements": [
														{
															"nativeSrc": "3571:26:20",
															"nodeType": "YulAssignment",
															"src": "3571:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:20"
																},
																"nativeSrc": "3579:18:20",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:20"
																		},
																		"nativeSrc": "3660:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:20"
																},
																"nativeSrc": "3607:71:20",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:20"
															},
															"nativeSrc": "3607:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:20",
														"nodeType": "YulTypedName",
														"src": "3533:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:20",
														"nodeType": "YulTypedName",
														"src": "3545:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:20",
														"nodeType": "YulTypedName",
														"src": "3556:4:20",
														"type": ""
													}
												],
												"src": "3463:222:20"
											},
											{
												"body": {
													"nativeSrc": "3791:519:20",
													"nodeType": "YulBlock",
													"src": "3791:519:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:20",
																"nodeType": "YulBlock",
																"src": "3837:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:20"
																			},
																			"nativeSrc": "3839:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:20"
																		},
																		"nativeSrc": "3839:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:20"
																		},
																		"nativeSrc": "3808:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:20"
																},
																"nativeSrc": "3804:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:20"
															},
															"nativeSrc": "3801:119:20",
															"nodeType": "YulIf",
															"src": "3801:119:20"
														},
														{
															"nativeSrc": "3930:117:20",
															"nodeType": "YulBlock",
															"src": "3930:117:20",
															"statements": [
																{
																	"nativeSrc": "3945:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:20",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:20",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:20",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:20"
																				},
																				"nativeSrc": "4005:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:20"
																		},
																		"nativeSrc": "3984:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:20",
															"nodeType": "YulBlock",
															"src": "4057:118:20",
															"statements": [
																{
																	"nativeSrc": "4072:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:20"
																				},
																				"nativeSrc": "4133:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:20"
																		},
																		"nativeSrc": "4112:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:20",
															"nodeType": "YulBlock",
															"src": "4185:118:20",
															"statements": [
																{
																	"nativeSrc": "4200:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:20"
																				},
																				"nativeSrc": "4261:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:20"
																		},
																		"nativeSrc": "4240:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:20",
														"nodeType": "YulTypedName",
														"src": "3745:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:20",
														"nodeType": "YulTypedName",
														"src": "3756:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:20",
														"nodeType": "YulTypedName",
														"src": "3768:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:20",
														"nodeType": "YulTypedName",
														"src": "3776:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:20",
														"nodeType": "YulTypedName",
														"src": "3784:6:20",
														"type": ""
													}
												],
												"src": "3691:619:20"
											},
											{
												"body": {
													"nativeSrc": "4359:43:20",
													"nodeType": "YulBlock",
													"src": "4359:43:20",
													"statements": [
														{
															"nativeSrc": "4369:27:20",
															"nodeType": "YulAssignment",
															"src": "4369:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:20",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:20",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:20"
																},
																"nativeSrc": "4380:16:20",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:20",
														"nodeType": "YulTypedName",
														"src": "4341:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:20",
														"nodeType": "YulTypedName",
														"src": "4351:7:20",
														"type": ""
													}
												],
												"src": "4316:86:20"
											},
											{
												"body": {
													"nativeSrc": "4469:51:20",
													"nodeType": "YulBlock",
													"src": "4469:51:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:20",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:20"
																		},
																		"nativeSrc": "4491:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:20"
																},
																"nativeSrc": "4479:35:20",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:20"
															},
															"nativeSrc": "4479:35:20",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:20"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:20",
														"nodeType": "YulTypedName",
														"src": "4457:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:20",
														"nodeType": "YulTypedName",
														"src": "4464:3:20",
														"type": ""
													}
												],
												"src": "4408:112:20"
											},
											{
												"body": {
													"nativeSrc": "4620:120:20",
													"nodeType": "YulBlock",
													"src": "4620:120:20",
													"statements": [
														{
															"nativeSrc": "4630:26:20",
															"nodeType": "YulAssignment",
															"src": "4630:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:20"
																},
																"nativeSrc": "4638:18:20",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:20",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:20"
																		},
																		"nativeSrc": "4715:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:20",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:20"
																},
																"nativeSrc": "4666:67:20",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:20"
															},
															"nativeSrc": "4666:67:20",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:20",
														"nodeType": "YulTypedName",
														"src": "4592:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:20",
														"nodeType": "YulTypedName",
														"src": "4604:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:20",
														"nodeType": "YulTypedName",
														"src": "4615:4:20",
														"type": ""
													}
												],
												"src": "4526:214:20"
											},
											{
												"body": {
													"nativeSrc": "4791:32:20",
													"nodeType": "YulBlock",
													"src": "4791:32:20",
													"statements": [
														{
															"nativeSrc": "4801:16:20",
															"nodeType": "YulAssignment",
															"src": "4801:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "4812:5:20",
																"nodeType": "YulIdentifier",
																"src": "4812:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4801:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "4801:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4746:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4773:5:20",
														"nodeType": "YulTypedName",
														"src": "4773:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4783:7:20",
														"nodeType": "YulTypedName",
														"src": "4783:7:20",
														"type": ""
													}
												],
												"src": "4746:77:20"
											},
											{
												"body": {
													"nativeSrc": "4894:53:20",
													"nodeType": "YulBlock",
													"src": "4894:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4911:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "4911:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4934:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "4934:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4916:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "4916:17:20"
																		},
																		"nativeSrc": "4916:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4916:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4904:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:20"
																},
																"nativeSrc": "4904:37:20",
																"nodeType": "YulFunctionCall",
																"src": "4904:37:20"
															},
															"nativeSrc": "4904:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "4904:37:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4829:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4882:5:20",
														"nodeType": "YulTypedName",
														"src": "4882:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4889:3:20",
														"nodeType": "YulTypedName",
														"src": "4889:3:20",
														"type": ""
													}
												],
												"src": "4829:118:20"
											},
											{
												"body": {
													"nativeSrc": "5051:124:20",
													"nodeType": "YulBlock",
													"src": "5051:124:20",
													"statements": [
														{
															"nativeSrc": "5061:26:20",
															"nodeType": "YulAssignment",
															"src": "5061:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5073:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5073:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5084:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5084:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5069:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:20"
																},
																"nativeSrc": "5069:18:20",
																"nodeType": "YulFunctionCall",
																"src": "5069:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5061:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5061:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5141:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5141:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5154:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5154:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:20",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5150:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5150:3:20"
																		},
																		"nativeSrc": "5150:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5150:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5097:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "5097:43:20"
																},
																"nativeSrc": "5097:71:20",
																"nodeType": "YulFunctionCall",
																"src": "5097:71:20"
															},
															"nativeSrc": "5097:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "5097:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4953:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5023:9:20",
														"nodeType": "YulTypedName",
														"src": "5023:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5035:6:20",
														"nodeType": "YulTypedName",
														"src": "5035:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5046:4:20",
														"nodeType": "YulTypedName",
														"src": "5046:4:20",
														"type": ""
													}
												],
												"src": "4953:222:20"
											},
											{
												"body": {
													"nativeSrc": "5247:263:20",
													"nodeType": "YulBlock",
													"src": "5247:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "5293:83:20",
																"nodeType": "YulBlock",
																"src": "5293:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5295:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "5295:77:20"
																			},
																			"nativeSrc": "5295:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5295:79:20"
																		},
																		"nativeSrc": "5295:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5295:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5268:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "5268:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5277:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5277:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5264:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:20"
																		},
																		"nativeSrc": "5264:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5264:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5289:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5289:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5260:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5260:3:20"
																},
																"nativeSrc": "5260:32:20",
																"nodeType": "YulFunctionCall",
																"src": "5260:32:20"
															},
															"nativeSrc": "5257:119:20",
															"nodeType": "YulIf",
															"src": "5257:119:20"
														},
														{
															"nativeSrc": "5386:117:20",
															"nodeType": "YulBlock",
															"src": "5386:117:20",
															"statements": [
																{
																	"nativeSrc": "5401:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5401:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5415:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5415:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5405:6:20",
																			"nodeType": "YulTypedName",
																			"src": "5405:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5430:63:20",
																	"nodeType": "YulAssignment",
																	"src": "5430:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5465:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "5465:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5476:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "5476:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5461:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "5461:3:20"
																				},
																				"nativeSrc": "5461:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "5461:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5485:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "5485:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5440:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "5440:20:20"
																		},
																		"nativeSrc": "5440:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5440:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5430:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "5430:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5181:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5217:9:20",
														"nodeType": "YulTypedName",
														"src": "5217:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5228:7:20",
														"nodeType": "YulTypedName",
														"src": "5228:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5240:6:20",
														"nodeType": "YulTypedName",
														"src": "5240:6:20",
														"type": ""
													}
												],
												"src": "5181:329:20"
											},
											{
												"body": {
													"nativeSrc": "5560:105:20",
													"nodeType": "YulBlock",
													"src": "5560:105:20",
													"statements": [
														{
															"nativeSrc": "5570:89:20",
															"nodeType": "YulAssignment",
															"src": "5570:89:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5585:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5585:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5592:66:20",
																		"nodeType": "YulLiteral",
																		"src": "5592:66:20",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5581:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5581:3:20"
																},
																"nativeSrc": "5581:78:20",
																"nodeType": "YulFunctionCall",
																"src": "5581:78:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5570:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "5570:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "5516:149:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5542:5:20",
														"nodeType": "YulTypedName",
														"src": "5542:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5552:7:20",
														"nodeType": "YulTypedName",
														"src": "5552:7:20",
														"type": ""
													}
												],
												"src": "5516:149:20"
											},
											{
												"body": {
													"nativeSrc": "5734:52:20",
													"nodeType": "YulBlock",
													"src": "5734:52:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5751:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5751:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5773:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "5773:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "5756:16:20",
																			"nodeType": "YulIdentifier",
																			"src": "5756:16:20"
																		},
																		"nativeSrc": "5756:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5756:23:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5744:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5744:6:20"
																},
																"nativeSrc": "5744:36:20",
																"nodeType": "YulFunctionCall",
																"src": "5744:36:20"
															},
															"nativeSrc": "5744:36:20",
															"nodeType": "YulExpressionStatement",
															"src": "5744:36:20"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "5671:115:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5722:5:20",
														"nodeType": "YulTypedName",
														"src": "5722:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5729:3:20",
														"nodeType": "YulTypedName",
														"src": "5729:3:20",
														"type": ""
													}
												],
												"src": "5671:115:20"
											},
											{
												"body": {
													"nativeSrc": "5857:53:20",
													"nodeType": "YulBlock",
													"src": "5857:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5874:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5874:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5897:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "5897:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5879:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "5879:17:20"
																		},
																		"nativeSrc": "5879:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5867:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:20"
																},
																"nativeSrc": "5867:37:20",
																"nodeType": "YulFunctionCall",
																"src": "5867:37:20"
															},
															"nativeSrc": "5867:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "5867:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5792:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5845:5:20",
														"nodeType": "YulTypedName",
														"src": "5845:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5852:3:20",
														"nodeType": "YulTypedName",
														"src": "5852:3:20",
														"type": ""
													}
												],
												"src": "5792:118:20"
											},
											{
												"body": {
													"nativeSrc": "5990:40:20",
													"nodeType": "YulBlock",
													"src": "5990:40:20",
													"statements": [
														{
															"nativeSrc": "6001:22:20",
															"nodeType": "YulAssignment",
															"src": "6001:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6017:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "6017:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6011:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "6011:5:20"
																},
																"nativeSrc": "6011:12:20",
																"nodeType": "YulFunctionCall",
																"src": "6011:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6001:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6001:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5916:114:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5973:5:20",
														"nodeType": "YulTypedName",
														"src": "5973:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5983:6:20",
														"nodeType": "YulTypedName",
														"src": "5983:6:20",
														"type": ""
													}
												],
												"src": "5916:114:20"
											},
											{
												"body": {
													"nativeSrc": "6147:73:20",
													"nodeType": "YulBlock",
													"src": "6147:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6164:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6164:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6169:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6169:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6157:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:20"
																},
																"nativeSrc": "6157:19:20",
																"nodeType": "YulFunctionCall",
																"src": "6157:19:20"
															},
															"nativeSrc": "6157:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "6157:19:20"
														},
														{
															"nativeSrc": "6185:29:20",
															"nodeType": "YulAssignment",
															"src": "6185:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6204:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6204:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6209:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6209:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6200:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:20"
																},
																"nativeSrc": "6200:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6200:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6185:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "6185:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6036:184:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6119:3:20",
														"nodeType": "YulTypedName",
														"src": "6119:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6124:6:20",
														"nodeType": "YulTypedName",
														"src": "6124:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6135:11:20",
														"nodeType": "YulTypedName",
														"src": "6135:11:20",
														"type": ""
													}
												],
												"src": "6036:184:20"
											},
											{
												"body": {
													"nativeSrc": "6298:60:20",
													"nodeType": "YulBlock",
													"src": "6298:60:20",
													"statements": [
														{
															"nativeSrc": "6308:11:20",
															"nodeType": "YulAssignment",
															"src": "6308:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "6316:3:20",
																"nodeType": "YulIdentifier",
																"src": "6316:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6308:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6308:4:20"
																}
															]
														},
														{
															"nativeSrc": "6329:22:20",
															"nodeType": "YulAssignment",
															"src": "6329:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6341:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6341:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6346:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6346:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6337:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6337:3:20"
																},
																"nativeSrc": "6337:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6337:14:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6329:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6329:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6226:132:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6285:3:20",
														"nodeType": "YulTypedName",
														"src": "6285:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6293:4:20",
														"nodeType": "YulTypedName",
														"src": "6293:4:20",
														"type": ""
													}
												],
												"src": "6226:132:20"
											},
											{
												"body": {
													"nativeSrc": "6419:53:20",
													"nodeType": "YulBlock",
													"src": "6419:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6436:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6436:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6459:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6459:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6441:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "6441:17:20"
																		},
																		"nativeSrc": "6441:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6441:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6429:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:20"
																},
																"nativeSrc": "6429:37:20",
																"nodeType": "YulFunctionCall",
																"src": "6429:37:20"
															},
															"nativeSrc": "6429:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "6429:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6364:108:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6407:5:20",
														"nodeType": "YulTypedName",
														"src": "6407:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6414:3:20",
														"nodeType": "YulTypedName",
														"src": "6414:3:20",
														"type": ""
													}
												],
												"src": "6364:108:20"
											},
											{
												"body": {
													"nativeSrc": "6558:99:20",
													"nodeType": "YulBlock",
													"src": "6558:99:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6602:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6602:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6610:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6610:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6568:33:20",
																	"nodeType": "YulIdentifier",
																	"src": "6568:33:20"
																},
																"nativeSrc": "6568:46:20",
																"nodeType": "YulFunctionCall",
																"src": "6568:46:20"
															},
															"nativeSrc": "6568:46:20",
															"nodeType": "YulExpressionStatement",
															"src": "6568:46:20"
														},
														{
															"nativeSrc": "6623:28:20",
															"nodeType": "YulAssignment",
															"src": "6623:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6641:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6641:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6646:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6646:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6637:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6637:3:20"
																},
																"nativeSrc": "6637:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6637:14:20"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6623:10:20",
																	"nodeType": "YulIdentifier",
																	"src": "6623:10:20"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6478:179:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6531:6:20",
														"nodeType": "YulTypedName",
														"src": "6531:6:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6539:3:20",
														"nodeType": "YulTypedName",
														"src": "6539:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6547:10:20",
														"nodeType": "YulTypedName",
														"src": "6547:10:20",
														"type": ""
													}
												],
												"src": "6478:179:20"
											},
											{
												"body": {
													"nativeSrc": "6738:38:20",
													"nodeType": "YulBlock",
													"src": "6738:38:20",
													"statements": [
														{
															"nativeSrc": "6748:22:20",
															"nodeType": "YulAssignment",
															"src": "6748:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6760:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6760:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6765:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6765:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6756:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:20"
																},
																"nativeSrc": "6756:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6756:14:20"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6748:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6748:4:20"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6663:113:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6725:3:20",
														"nodeType": "YulTypedName",
														"src": "6725:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6733:4:20",
														"nodeType": "YulTypedName",
														"src": "6733:4:20",
														"type": ""
													}
												],
												"src": "6663:113:20"
											},
											{
												"body": {
													"nativeSrc": "6936:608:20",
													"nodeType": "YulBlock",
													"src": "6936:608:20",
													"statements": [
														{
															"nativeSrc": "6946:68:20",
															"nodeType": "YulVariableDeclaration",
															"src": "6946:68:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7008:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7008:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6960:47:20",
																	"nodeType": "YulIdentifier",
																	"src": "6960:47:20"
																},
																"nativeSrc": "6960:54:20",
																"nodeType": "YulFunctionCall",
																"src": "6960:54:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6950:6:20",
																	"nodeType": "YulTypedName",
																	"src": "6950:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7023:93:20",
															"nodeType": "YulAssignment",
															"src": "7023:93:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7104:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7104:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7109:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7109:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7030:73:20",
																	"nodeType": "YulIdentifier",
																	"src": "7030:73:20"
																},
																"nativeSrc": "7030:86:20",
																"nodeType": "YulFunctionCall",
																"src": "7030:86:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7023:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7023:3:20"
																}
															]
														},
														{
															"nativeSrc": "7125:71:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7125:71:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7190:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7190:5:20"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7140:49:20",
																	"nodeType": "YulIdentifier",
																	"src": "7140:49:20"
																},
																"nativeSrc": "7140:56:20",
																"nodeType": "YulFunctionCall",
																"src": "7140:56:20"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7129:7:20",
																	"nodeType": "YulTypedName",
																	"src": "7129:7:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7205:21:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7205:21:20",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7219:7:20",
																"nodeType": "YulIdentifier",
																"src": "7219:7:20"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7209:6:20",
																	"nodeType": "YulTypedName",
																	"src": "7209:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7295:224:20",
																"nodeType": "YulBlock",
																"src": "7295:224:20",
																"statements": [
																	{
																		"nativeSrc": "7309:34:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7309:34:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7336:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "7336:6:20"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7330:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "7330:5:20"
																			},
																			"nativeSrc": "7330:13:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7330:13:20"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7313:13:20",
																				"nodeType": "YulTypedName",
																				"src": "7313:13:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7356:70:20",
																		"nodeType": "YulAssignment",
																		"src": "7356:70:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7407:13:20",
																					"nodeType": "YulIdentifier",
																					"src": "7407:13:20"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7422:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7422:3:20"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7363:43:20",
																				"nodeType": "YulIdentifier",
																				"src": "7363:43:20"
																			},
																			"nativeSrc": "7363:63:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7363:63:20"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7356:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7356:3:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7439:70:20",
																		"nodeType": "YulAssignment",
																		"src": "7439:70:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7502:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "7502:6:20"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7449:52:20",
																				"nodeType": "YulIdentifier",
																				"src": "7449:52:20"
																			},
																			"nativeSrc": "7449:60:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7449:60:20"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7439:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7439:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7257:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7257:1:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7260:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7260:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7254:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "7254:2:20"
																},
																"nativeSrc": "7254:13:20",
																"nodeType": "YulFunctionCall",
																"src": "7254:13:20"
															},
															"nativeSrc": "7235:284:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7268:18:20",
																"nodeType": "YulBlock",
																"src": "7268:18:20",
																"statements": [
																	{
																		"nativeSrc": "7270:14:20",
																		"nodeType": "YulAssignment",
																		"src": "7270:14:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7279:1:20",
																					"nodeType": "YulIdentifier",
																					"src": "7279:1:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7282:1:20",
																					"nodeType": "YulLiteral",
																					"src": "7282:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7275:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7275:3:20"
																			},
																			"nativeSrc": "7275:9:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7275:9:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7270:1:20",
																				"nodeType": "YulIdentifier",
																				"src": "7270:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7239:14:20",
																"nodeType": "YulBlock",
																"src": "7239:14:20",
																"statements": [
																	{
																		"nativeSrc": "7241:10:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7241:10:20",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7250:1:20",
																			"nodeType": "YulLiteral",
																			"src": "7250:1:20",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7245:1:20",
																				"nodeType": "YulTypedName",
																				"src": "7245:1:20",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7235:284:20"
														},
														{
															"nativeSrc": "7528:10:20",
															"nodeType": "YulAssignment",
															"src": "7528:10:20",
															"value": {
																"name": "pos",
																"nativeSrc": "7535:3:20",
																"nodeType": "YulIdentifier",
																"src": "7535:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7528:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6812:732:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:20",
														"nodeType": "YulTypedName",
														"src": "6915:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:20",
														"nodeType": "YulTypedName",
														"src": "6922:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6931:3:20",
														"nodeType": "YulTypedName",
														"src": "6931:3:20",
														"type": ""
													}
												],
												"src": "6812:732:20"
											},
											{
												"body": {
													"nativeSrc": "7904:861:20",
													"nodeType": "YulBlock",
													"src": "7904:861:20",
													"statements": [
														{
															"nativeSrc": "7914:27:20",
															"nodeType": "YulAssignment",
															"src": "7914:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7926:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7926:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7937:3:20",
																		"nodeType": "YulLiteral",
																		"src": "7937:3:20",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7922:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:20"
																},
																"nativeSrc": "7922:19:20",
																"nodeType": "YulFunctionCall",
																"src": "7922:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7914:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7914:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7993:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7993:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8006:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8017:1:20",
																				"nodeType": "YulLiteral",
																				"src": "8017:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8002:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:20"
																		},
																		"nativeSrc": "8002:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8002:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "7951:41:20",
																	"nodeType": "YulIdentifier",
																	"src": "7951:41:20"
																},
																"nativeSrc": "7951:69:20",
																"nodeType": "YulFunctionCall",
																"src": "7951:69:20"
															},
															"nativeSrc": "7951:69:20",
															"nodeType": "YulExpressionStatement",
															"src": "7951:69:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8041:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8041:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8052:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8052:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8037:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8037:3:20"
																		},
																		"nativeSrc": "8037:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8037:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8061:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8061:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8067:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8067:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8057:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8057:3:20"
																		},
																		"nativeSrc": "8057:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8057:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8030:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:20"
																},
																"nativeSrc": "8030:48:20",
																"nodeType": "YulFunctionCall",
																"src": "8030:48:20"
															},
															"nativeSrc": "8030:48:20",
															"nodeType": "YulExpressionStatement",
															"src": "8030:48:20"
														},
														{
															"nativeSrc": "8087:86:20",
															"nodeType": "YulAssignment",
															"src": "8087:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8159:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8159:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8168:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8168:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8095:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "8095:63:20"
																},
																"nativeSrc": "8095:78:20",
																"nodeType": "YulFunctionCall",
																"src": "8095:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8087:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8087:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8194:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8194:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8205:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8205:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8190:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:20"
																		},
																		"nativeSrc": "8190:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8190:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8214:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8214:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8220:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8220:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8210:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8210:3:20"
																		},
																		"nativeSrc": "8210:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8210:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8183:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8183:6:20"
																},
																"nativeSrc": "8183:48:20",
																"nodeType": "YulFunctionCall",
																"src": "8183:48:20"
															},
															"nativeSrc": "8183:48:20",
															"nodeType": "YulExpressionStatement",
															"src": "8183:48:20"
														},
														{
															"nativeSrc": "8240:86:20",
															"nodeType": "YulAssignment",
															"src": "8240:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8312:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8312:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8321:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8321:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8248:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "8248:63:20"
																},
																"nativeSrc": "8248:78:20",
																"nodeType": "YulFunctionCall",
																"src": "8248:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8240:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8240:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8380:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8380:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8393:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8393:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8404:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8404:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8389:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:20"
																		},
																		"nativeSrc": "8389:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8389:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8336:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8336:43:20"
																},
																"nativeSrc": "8336:72:20",
																"nodeType": "YulFunctionCall",
																"src": "8336:72:20"
															},
															"nativeSrc": "8336:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "8336:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8462:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8462:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8475:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8475:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8486:3:20",
																				"nodeType": "YulLiteral",
																				"src": "8486:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8471:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8471:3:20"
																		},
																		"nativeSrc": "8471:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8471:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8418:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8418:43:20"
																},
																"nativeSrc": "8418:73:20",
																"nodeType": "YulFunctionCall",
																"src": "8418:73:20"
															},
															"nativeSrc": "8418:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "8418:73:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8545:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8545:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8558:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8558:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8569:3:20",
																				"nodeType": "YulLiteral",
																				"src": "8569:3:20",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8554:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8554:3:20"
																		},
																		"nativeSrc": "8554:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8554:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8501:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8501:43:20"
																},
																"nativeSrc": "8501:73:20",
																"nodeType": "YulFunctionCall",
																"src": "8501:73:20"
															},
															"nativeSrc": "8501:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "8501:73:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8595:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8595:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8606:3:20",
																				"nodeType": "YulLiteral",
																				"src": "8606:3:20",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8591:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8591:3:20"
																		},
																		"nativeSrc": "8591:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8591:19:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8616:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8616:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8622:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8622:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:20"
																		},
																		"nativeSrc": "8612:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8584:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8584:6:20"
																},
																"nativeSrc": "8584:49:20",
																"nodeType": "YulFunctionCall",
																"src": "8584:49:20"
															},
															"nativeSrc": "8584:49:20",
															"nodeType": "YulExpressionStatement",
															"src": "8584:49:20"
														},
														{
															"nativeSrc": "8642:116:20",
															"nodeType": "YulAssignment",
															"src": "8642:116:20",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "8744:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8744:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8753:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8753:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8650:93:20",
																	"nodeType": "YulIdentifier",
																	"src": "8650:93:20"
																},
																"nativeSrc": "8650:108:20",
																"nodeType": "YulFunctionCall",
																"src": "8650:108:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8642:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8642:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7550:1215:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7828:9:20",
														"nodeType": "YulTypedName",
														"src": "7828:9:20",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7840:6:20",
														"nodeType": "YulTypedName",
														"src": "7840:6:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7848:6:20",
														"nodeType": "YulTypedName",
														"src": "7848:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7856:6:20",
														"nodeType": "YulTypedName",
														"src": "7856:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7864:6:20",
														"nodeType": "YulTypedName",
														"src": "7864:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7872:6:20",
														"nodeType": "YulTypedName",
														"src": "7872:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7880:6:20",
														"nodeType": "YulTypedName",
														"src": "7880:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7888:6:20",
														"nodeType": "YulTypedName",
														"src": "7888:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7899:4:20",
														"nodeType": "YulTypedName",
														"src": "7899:4:20",
														"type": ""
													}
												],
												"src": "7550:1215:20"
											},
											{
												"body": {
													"nativeSrc": "8812:77:20",
													"nodeType": "YulBlock",
													"src": "8812:77:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "8867:16:20",
																"nodeType": "YulBlock",
																"src": "8867:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8876:1:20",
																					"nodeType": "YulLiteral",
																					"src": "8876:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8879:1:20",
																					"nodeType": "YulLiteral",
																					"src": "8879:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8869:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8869:6:20"
																			},
																			"nativeSrc": "8869:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8869:12:20"
																		},
																		"nativeSrc": "8869:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8869:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8835:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8835:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8858:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "8858:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "8842:15:20",
																					"nodeType": "YulIdentifier",
																					"src": "8842:15:20"
																				},
																				"nativeSrc": "8842:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "8842:22:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8832:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "8832:2:20"
																		},
																		"nativeSrc": "8832:33:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8832:33:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8825:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8825:6:20"
																},
																"nativeSrc": "8825:41:20",
																"nodeType": "YulFunctionCall",
																"src": "8825:41:20"
															},
															"nativeSrc": "8822:61:20",
															"nodeType": "YulIf",
															"src": "8822:61:20"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "8771:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8805:5:20",
														"nodeType": "YulTypedName",
														"src": "8805:5:20",
														"type": ""
													}
												],
												"src": "8771:118:20"
											},
											{
												"body": {
													"nativeSrc": "8945:85:20",
													"nodeType": "YulBlock",
													"src": "8945:85:20",
													"statements": [
														{
															"nativeSrc": "8955:29:20",
															"nodeType": "YulAssignment",
															"src": "8955:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8977:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8977:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8964:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "8964:12:20"
																},
																"nativeSrc": "8964:20:20",
																"nodeType": "YulFunctionCall",
																"src": "8964:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8955:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "8955:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9018:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9018:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "8993:24:20",
																	"nodeType": "YulIdentifier",
																	"src": "8993:24:20"
																},
																"nativeSrc": "8993:31:20",
																"nodeType": "YulFunctionCall",
																"src": "8993:31:20"
															},
															"nativeSrc": "8993:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "8993:31:20"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "8895:135:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8923:6:20",
														"nodeType": "YulTypedName",
														"src": "8923:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8931:3:20",
														"nodeType": "YulTypedName",
														"src": "8931:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8939:5:20",
														"nodeType": "YulTypedName",
														"src": "8939:5:20",
														"type": ""
													}
												],
												"src": "8895:135:20"
											},
											{
												"body": {
													"nativeSrc": "9079:79:20",
													"nodeType": "YulBlock",
													"src": "9079:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9136:16:20",
																"nodeType": "YulBlock",
																"src": "9136:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9145:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9145:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9148:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9148:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9138:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9138:6:20"
																			},
																			"nativeSrc": "9138:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9138:12:20"
																		},
																		"nativeSrc": "9138:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9138:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9102:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "9102:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9127:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "9127:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "9109:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "9109:17:20"
																				},
																				"nativeSrc": "9109:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9109:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9099:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "9099:2:20"
																		},
																		"nativeSrc": "9099:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9099:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9092:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9092:6:20"
																},
																"nativeSrc": "9092:43:20",
																"nodeType": "YulFunctionCall",
																"src": "9092:43:20"
															},
															"nativeSrc": "9089:63:20",
															"nodeType": "YulIf",
															"src": "9089:63:20"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "9036:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9072:5:20",
														"nodeType": "YulTypedName",
														"src": "9072:5:20",
														"type": ""
													}
												],
												"src": "9036:122:20"
											},
											{
												"body": {
													"nativeSrc": "9216:87:20",
													"nodeType": "YulBlock",
													"src": "9216:87:20",
													"statements": [
														{
															"nativeSrc": "9226:29:20",
															"nodeType": "YulAssignment",
															"src": "9226:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9248:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9248:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9235:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9235:12:20"
																},
																"nativeSrc": "9235:20:20",
																"nodeType": "YulFunctionCall",
																"src": "9235:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9226:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "9226:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9291:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9291:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "9264:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "9264:26:20"
																},
																"nativeSrc": "9264:33:20",
																"nodeType": "YulFunctionCall",
																"src": "9264:33:20"
															},
															"nativeSrc": "9264:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "9264:33:20"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "9164:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9194:6:20",
														"nodeType": "YulTypedName",
														"src": "9194:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9202:3:20",
														"nodeType": "YulTypedName",
														"src": "9202:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9210:5:20",
														"nodeType": "YulTypedName",
														"src": "9210:5:20",
														"type": ""
													}
												],
												"src": "9164:139:20"
											},
											{
												"body": {
													"nativeSrc": "9475:1033:20",
													"nodeType": "YulBlock",
													"src": "9475:1033:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9522:83:20",
																"nodeType": "YulBlock",
																"src": "9522:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9524:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "9524:77:20"
																			},
																			"nativeSrc": "9524:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9524:79:20"
																		},
																		"nativeSrc": "9524:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9524:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9496:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9496:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9505:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9505:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9492:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9492:3:20"
																		},
																		"nativeSrc": "9492:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9492:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9517:3:20",
																		"nodeType": "YulLiteral",
																		"src": "9517:3:20",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9488:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9488:3:20"
																},
																"nativeSrc": "9488:33:20",
																"nodeType": "YulFunctionCall",
																"src": "9488:33:20"
															},
															"nativeSrc": "9485:120:20",
															"nodeType": "YulIf",
															"src": "9485:120:20"
														},
														{
															"nativeSrc": "9615:117:20",
															"nodeType": "YulBlock",
															"src": "9615:117:20",
															"statements": [
																{
																	"nativeSrc": "9630:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9630:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9644:1:20",
																		"nodeType": "YulLiteral",
																		"src": "9644:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9634:6:20",
																			"nodeType": "YulTypedName",
																			"src": "9634:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9659:63:20",
																	"nodeType": "YulAssignment",
																	"src": "9659:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9694:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "9694:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9705:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "9705:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9690:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9690:3:20"
																				},
																				"nativeSrc": "9690:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9690:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9714:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9714:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9669:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "9669:20:20"
																		},
																		"nativeSrc": "9669:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9669:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9659:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "9659:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9742:118:20",
															"nodeType": "YulBlock",
															"src": "9742:118:20",
															"statements": [
																{
																	"nativeSrc": "9757:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9757:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9771:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9771:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9761:6:20",
																			"nodeType": "YulTypedName",
																			"src": "9761:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9787:63:20",
																	"nodeType": "YulAssignment",
																	"src": "9787:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9822:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "9822:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9833:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "9833:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9818:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9818:3:20"
																				},
																				"nativeSrc": "9818:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9818:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9842:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9842:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9797:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "9797:20:20"
																		},
																		"nativeSrc": "9797:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9797:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9787:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "9787:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9870:118:20",
															"nodeType": "YulBlock",
															"src": "9870:118:20",
															"statements": [
																{
																	"nativeSrc": "9885:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9885:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9899:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9899:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9889:6:20",
																			"nodeType": "YulTypedName",
																			"src": "9889:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9915:63:20",
																	"nodeType": "YulAssignment",
																	"src": "9915:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9950:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "9950:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9961:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "9961:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9946:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9946:3:20"
																				},
																				"nativeSrc": "9946:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9946:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9970:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9970:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9925:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "9925:20:20"
																		},
																		"nativeSrc": "9925:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9925:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9915:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "9915:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9998:118:20",
															"nodeType": "YulBlock",
															"src": "9998:118:20",
															"statements": [
																{
																	"nativeSrc": "10013:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10013:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10027:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10027:2:20",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10017:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10017:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10043:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10043:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10078:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10078:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10089:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10089:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10074:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10074:3:20"
																				},
																				"nativeSrc": "10074:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10074:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10098:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10098:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10053:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10053:20:20"
																		},
																		"nativeSrc": "10053:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10053:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10043:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10043:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10126:117:20",
															"nodeType": "YulBlock",
															"src": "10126:117:20",
															"statements": [
																{
																	"nativeSrc": "10141:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10141:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10155:3:20",
																		"nodeType": "YulLiteral",
																		"src": "10155:3:20",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10145:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10145:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10172:61:20",
																	"nodeType": "YulAssignment",
																	"src": "10172:61:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10205:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10205:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10216:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10216:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10201:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10201:3:20"
																				},
																				"nativeSrc": "10201:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10201:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10225:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10225:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10182:18:20",
																			"nodeType": "YulIdentifier",
																			"src": "10182:18:20"
																		},
																		"nativeSrc": "10182:51:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10182:51:20"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10172:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10172:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10253:119:20",
															"nodeType": "YulBlock",
															"src": "10253:119:20",
															"statements": [
																{
																	"nativeSrc": "10268:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10268:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10282:3:20",
																		"nodeType": "YulLiteral",
																		"src": "10282:3:20",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10272:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10272:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10299:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10299:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10334:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10334:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10345:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10345:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10330:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10330:3:20"
																				},
																				"nativeSrc": "10330:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10330:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10354:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10354:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10309:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10309:20:20"
																		},
																		"nativeSrc": "10309:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10309:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10299:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10299:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10382:119:20",
															"nodeType": "YulBlock",
															"src": "10382:119:20",
															"statements": [
																{
																	"nativeSrc": "10397:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10397:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10411:3:20",
																		"nodeType": "YulLiteral",
																		"src": "10411:3:20",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10401:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10401:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10428:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10428:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10463:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10474:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10459:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:20"
																				},
																				"nativeSrc": "10459:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10483:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10438:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:20"
																		},
																		"nativeSrc": "10438:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "10428:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "9309:1199:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9397:9:20",
														"nodeType": "YulTypedName",
														"src": "9397:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9408:7:20",
														"nodeType": "YulTypedName",
														"src": "9408:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9420:6:20",
														"nodeType": "YulTypedName",
														"src": "9420:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9428:6:20",
														"nodeType": "YulTypedName",
														"src": "9428:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9436:6:20",
														"nodeType": "YulTypedName",
														"src": "9436:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9444:6:20",
														"nodeType": "YulTypedName",
														"src": "9444:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9452:6:20",
														"nodeType": "YulTypedName",
														"src": "9452:6:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9460:6:20",
														"nodeType": "YulTypedName",
														"src": "9460:6:20",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9468:6:20",
														"nodeType": "YulTypedName",
														"src": "9468:6:20",
														"type": ""
													}
												],
												"src": "9309:1199:20"
											},
											{
												"body": {
													"nativeSrc": "10597:391:20",
													"nodeType": "YulBlock",
													"src": "10597:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "10643:83:20",
																"nodeType": "YulBlock",
																"src": "10643:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10645:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "10645:77:20"
																			},
																			"nativeSrc": "10645:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10645:79:20"
																		},
																		"nativeSrc": "10645:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10645:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10618:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10618:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10627:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10627:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10614:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10614:3:20"
																		},
																		"nativeSrc": "10614:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10614:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10639:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10639:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10610:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10610:3:20"
																},
																"nativeSrc": "10610:32:20",
																"nodeType": "YulFunctionCall",
																"src": "10610:32:20"
															},
															"nativeSrc": "10607:119:20",
															"nodeType": "YulIf",
															"src": "10607:119:20"
														},
														{
															"nativeSrc": "10736:117:20",
															"nodeType": "YulBlock",
															"src": "10736:117:20",
															"statements": [
																{
																	"nativeSrc": "10751:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10751:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10765:1:20",
																		"nodeType": "YulLiteral",
																		"src": "10765:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10755:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10755:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10780:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10780:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10815:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10815:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10826:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10826:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10811:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10811:3:20"
																				},
																				"nativeSrc": "10811:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10811:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10835:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10835:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10790:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10790:20:20"
																		},
																		"nativeSrc": "10790:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10790:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10780:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10780:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10863:118:20",
															"nodeType": "YulBlock",
															"src": "10863:118:20",
															"statements": [
																{
																	"nativeSrc": "10878:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10878:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10892:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10892:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10882:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10882:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10908:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10908:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10943:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10943:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10954:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10954:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10939:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10939:3:20"
																				},
																				"nativeSrc": "10939:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10939:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10963:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10963:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10918:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10918:20:20"
																		},
																		"nativeSrc": "10918:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10918:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10908:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10908:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10514:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10559:9:20",
														"nodeType": "YulTypedName",
														"src": "10559:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10570:7:20",
														"nodeType": "YulTypedName",
														"src": "10570:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10582:6:20",
														"nodeType": "YulTypedName",
														"src": "10582:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10590:6:20",
														"nodeType": "YulTypedName",
														"src": "10590:6:20",
														"type": ""
													}
												],
												"src": "10514:474:20"
											},
											{
												"body": {
													"nativeSrc": "11022:152:20",
													"nodeType": "YulBlock",
													"src": "11022:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11039:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11039:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11042:77:20",
																		"nodeType": "YulLiteral",
																		"src": "11042:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11032:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11032:6:20"
																},
																"nativeSrc": "11032:88:20",
																"nodeType": "YulFunctionCall",
																"src": "11032:88:20"
															},
															"nativeSrc": "11032:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "11032:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11136:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11136:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11139:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11139:4:20",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11129:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11129:6:20"
																},
																"nativeSrc": "11129:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11129:15:20"
															},
															"nativeSrc": "11129:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11129:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11160:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11160:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11163:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11163:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11153:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11153:6:20"
																},
																"nativeSrc": "11153:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11153:15:20"
															},
															"nativeSrc": "11153:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11153:15:20"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10994:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "10994:180:20"
											},
											{
												"body": {
													"nativeSrc": "11231:269:20",
													"nodeType": "YulBlock",
													"src": "11231:269:20",
													"statements": [
														{
															"nativeSrc": "11241:22:20",
															"nodeType": "YulAssignment",
															"src": "11241:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11255:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "11255:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11261:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11261:1:20",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11251:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11251:3:20"
																},
																"nativeSrc": "11251:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11251:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11241:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11241:6:20"
																}
															]
														},
														{
															"nativeSrc": "11272:38:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11272:38:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11302:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "11302:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11308:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11308:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11298:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11298:3:20"
																},
																"nativeSrc": "11298:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11298:12:20"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11276:18:20",
																	"nodeType": "YulTypedName",
																	"src": "11276:18:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11349:51:20",
																"nodeType": "YulBlock",
																"src": "11349:51:20",
																"statements": [
																	{
																		"nativeSrc": "11363:27:20",
																		"nodeType": "YulAssignment",
																		"src": "11363:27:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11377:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "11377:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11385:4:20",
																					"nodeType": "YulLiteral",
																					"src": "11385:4:20",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11373:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "11373:3:20"
																			},
																			"nativeSrc": "11373:17:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11373:17:20"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11363:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11363:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11329:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "11329:18:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11322:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11322:6:20"
																},
																"nativeSrc": "11322:26:20",
																"nodeType": "YulFunctionCall",
																"src": "11322:26:20"
															},
															"nativeSrc": "11319:81:20",
															"nodeType": "YulIf",
															"src": "11319:81:20"
														},
														{
															"body": {
																"nativeSrc": "11452:42:20",
																"nodeType": "YulBlock",
																"src": "11452:42:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11466:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "11466:16:20"
																			},
																			"nativeSrc": "11466:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11466:18:20"
																		},
																		"nativeSrc": "11466:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "11466:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11416:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "11416:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11439:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11439:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11447:2:20",
																				"nodeType": "YulLiteral",
																				"src": "11447:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11436:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "11436:2:20"
																		},
																		"nativeSrc": "11436:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11436:14:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11413:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "11413:2:20"
																},
																"nativeSrc": "11413:38:20",
																"nodeType": "YulFunctionCall",
																"src": "11413:38:20"
															},
															"nativeSrc": "11410:84:20",
															"nodeType": "YulIf",
															"src": "11410:84:20"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11180:320:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11215:4:20",
														"nodeType": "YulTypedName",
														"src": "11215:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11224:6:20",
														"nodeType": "YulTypedName",
														"src": "11224:6:20",
														"type": ""
													}
												],
												"src": "11180:320:20"
											},
											{
												"body": {
													"nativeSrc": "11534:152:20",
													"nodeType": "YulBlock",
													"src": "11534:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11551:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11551:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11554:77:20",
																		"nodeType": "YulLiteral",
																		"src": "11554:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11544:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11544:6:20"
																},
																"nativeSrc": "11544:88:20",
																"nodeType": "YulFunctionCall",
																"src": "11544:88:20"
															},
															"nativeSrc": "11544:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "11544:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11648:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11648:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11651:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11651:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11641:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11641:6:20"
																},
																"nativeSrc": "11641:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11641:15:20"
															},
															"nativeSrc": "11641:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11641:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11672:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11672:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11675:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11675:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11665:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11665:6:20"
																},
																"nativeSrc": "11665:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11665:15:20"
															},
															"nativeSrc": "11665:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11665:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11506:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "11506:180:20"
											},
											{
												"body": {
													"nativeSrc": "11818:206:20",
													"nodeType": "YulBlock",
													"src": "11818:206:20",
													"statements": [
														{
															"nativeSrc": "11828:26:20",
															"nodeType": "YulAssignment",
															"src": "11828:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11840:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "11840:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11851:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11851:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11836:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11836:3:20"
																},
																"nativeSrc": "11836:18:20",
																"nodeType": "YulFunctionCall",
																"src": "11836:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11828:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11828:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11908:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11908:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11921:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "11921:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11932:1:20",
																				"nodeType": "YulLiteral",
																				"src": "11932:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11917:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11917:3:20"
																		},
																		"nativeSrc": "11917:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11917:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11864:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "11864:43:20"
																},
																"nativeSrc": "11864:71:20",
																"nodeType": "YulFunctionCall",
																"src": "11864:71:20"
															},
															"nativeSrc": "11864:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "11864:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11989:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11989:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12002:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12002:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12013:2:20",
																				"nodeType": "YulLiteral",
																				"src": "12013:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11998:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11998:3:20"
																		},
																		"nativeSrc": "11998:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11998:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11945:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "11945:43:20"
																},
																"nativeSrc": "11945:72:20",
																"nodeType": "YulFunctionCall",
																"src": "11945:72:20"
															},
															"nativeSrc": "11945:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "11945:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11692:332:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11782:9:20",
														"nodeType": "YulTypedName",
														"src": "11782:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11794:6:20",
														"nodeType": "YulTypedName",
														"src": "11794:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11802:6:20",
														"nodeType": "YulTypedName",
														"src": "11802:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11813:4:20",
														"nodeType": "YulTypedName",
														"src": "11813:4:20",
														"type": ""
													}
												],
												"src": "11692:332:20"
											},
											{
												"body": {
													"nativeSrc": "12070:76:20",
													"nodeType": "YulBlock",
													"src": "12070:76:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "12124:16:20",
																"nodeType": "YulBlock",
																"src": "12124:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12133:1:20",
																					"nodeType": "YulLiteral",
																					"src": "12133:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12136:1:20",
																					"nodeType": "YulLiteral",
																					"src": "12136:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12126:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "12126:6:20"
																			},
																			"nativeSrc": "12126:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "12126:12:20"
																		},
																		"nativeSrc": "12126:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "12126:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12093:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "12093:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12115:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "12115:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12100:14:20",
																					"nodeType": "YulIdentifier",
																					"src": "12100:14:20"
																				},
																				"nativeSrc": "12100:21:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12100:21:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12090:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "12090:2:20"
																		},
																		"nativeSrc": "12090:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12090:32:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12083:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12083:6:20"
																},
																"nativeSrc": "12083:40:20",
																"nodeType": "YulFunctionCall",
																"src": "12083:40:20"
															},
															"nativeSrc": "12080:60:20",
															"nodeType": "YulIf",
															"src": "12080:60:20"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12030:116:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12063:5:20",
														"nodeType": "YulTypedName",
														"src": "12063:5:20",
														"type": ""
													}
												],
												"src": "12030:116:20"
											},
											{
												"body": {
													"nativeSrc": "12212:77:20",
													"nodeType": "YulBlock",
													"src": "12212:77:20",
													"statements": [
														{
															"nativeSrc": "12222:22:20",
															"nodeType": "YulAssignment",
															"src": "12222:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12237:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12237:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12231:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "12231:5:20"
																},
																"nativeSrc": "12231:13:20",
																"nodeType": "YulFunctionCall",
																"src": "12231:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12222:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "12222:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12277:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "12277:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12253:23:20",
																	"nodeType": "YulIdentifier",
																	"src": "12253:23:20"
																},
																"nativeSrc": "12253:30:20",
																"nodeType": "YulFunctionCall",
																"src": "12253:30:20"
															},
															"nativeSrc": "12253:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "12253:30:20"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12152:137:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12190:6:20",
														"nodeType": "YulTypedName",
														"src": "12190:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12198:3:20",
														"nodeType": "YulTypedName",
														"src": "12198:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12206:5:20",
														"nodeType": "YulTypedName",
														"src": "12206:5:20",
														"type": ""
													}
												],
												"src": "12152:137:20"
											},
											{
												"body": {
													"nativeSrc": "12369:271:20",
													"nodeType": "YulBlock",
													"src": "12369:271:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "12415:83:20",
																"nodeType": "YulBlock",
																"src": "12415:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12417:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "12417:77:20"
																			},
																			"nativeSrc": "12417:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "12417:79:20"
																		},
																		"nativeSrc": "12417:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "12417:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12390:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "12390:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12399:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12399:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12386:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12386:3:20"
																		},
																		"nativeSrc": "12386:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12386:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12411:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12411:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12382:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12382:3:20"
																},
																"nativeSrc": "12382:32:20",
																"nodeType": "YulFunctionCall",
																"src": "12382:32:20"
															},
															"nativeSrc": "12379:119:20",
															"nodeType": "YulIf",
															"src": "12379:119:20"
														},
														{
															"nativeSrc": "12508:125:20",
															"nodeType": "YulBlock",
															"src": "12508:125:20",
															"statements": [
																{
																	"nativeSrc": "12523:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12523:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12537:1:20",
																		"nodeType": "YulLiteral",
																		"src": "12537:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12527:6:20",
																			"nodeType": "YulTypedName",
																			"src": "12527:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12552:71:20",
																	"nodeType": "YulAssignment",
																	"src": "12552:71:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12595:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "12595:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12606:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "12606:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12591:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "12591:3:20"
																				},
																				"nativeSrc": "12591:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12591:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12615:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "12615:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12562:28:20",
																			"nodeType": "YulIdentifier",
																			"src": "12562:28:20"
																		},
																		"nativeSrc": "12562:61:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12562:61:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12552:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "12552:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12295:345:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12339:9:20",
														"nodeType": "YulTypedName",
														"src": "12339:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12350:7:20",
														"nodeType": "YulTypedName",
														"src": "12350:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12362:6:20",
														"nodeType": "YulTypedName",
														"src": "12362:6:20",
														"type": ""
													}
												],
												"src": "12295:345:20"
											},
											{
												"body": {
													"nativeSrc": "12884:537:20",
													"nodeType": "YulBlock",
													"src": "12884:537:20",
													"statements": [
														{
															"nativeSrc": "12894:27:20",
															"nodeType": "YulAssignment",
															"src": "12894:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12906:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12906:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12917:3:20",
																		"nodeType": "YulLiteral",
																		"src": "12917:3:20",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12902:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12902:3:20"
																},
																"nativeSrc": "12902:19:20",
																"nodeType": "YulFunctionCall",
																"src": "12902:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12894:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12894:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12975:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12975:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12988:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12988:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12999:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12999:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12984:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12984:3:20"
																		},
																		"nativeSrc": "12984:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12984:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12931:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12931:43:20"
																},
																"nativeSrc": "12931:71:20",
																"nodeType": "YulFunctionCall",
																"src": "12931:71:20"
															},
															"nativeSrc": "12931:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "12931:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13056:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13056:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13069:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13069:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13080:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13080:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13065:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13065:3:20"
																		},
																		"nativeSrc": "13065:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13065:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13012:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13012:43:20"
																},
																"nativeSrc": "13012:72:20",
																"nodeType": "YulFunctionCall",
																"src": "13012:72:20"
															},
															"nativeSrc": "13012:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "13012:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13138:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13138:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13151:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13151:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13162:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13162:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13147:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13147:3:20"
																		},
																		"nativeSrc": "13147:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13147:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13094:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13094:43:20"
																},
																"nativeSrc": "13094:72:20",
																"nodeType": "YulFunctionCall",
																"src": "13094:72:20"
															},
															"nativeSrc": "13094:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "13094:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13220:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13220:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13233:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13233:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13244:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13244:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13229:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13229:3:20"
																		},
																		"nativeSrc": "13229:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13229:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13176:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13176:43:20"
																},
																"nativeSrc": "13176:72:20",
																"nodeType": "YulFunctionCall",
																"src": "13176:72:20"
															},
															"nativeSrc": "13176:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "13176:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13302:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13302:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13315:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13315:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13326:3:20",
																				"nodeType": "YulLiteral",
																				"src": "13326:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13311:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13311:3:20"
																		},
																		"nativeSrc": "13311:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13311:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13258:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13258:43:20"
																},
																"nativeSrc": "13258:73:20",
																"nodeType": "YulFunctionCall",
																"src": "13258:73:20"
															},
															"nativeSrc": "13258:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "13258:73:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "13385:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13385:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13398:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13398:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13409:3:20",
																				"nodeType": "YulLiteral",
																				"src": "13409:3:20",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13394:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13394:3:20"
																		},
																		"nativeSrc": "13394:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13394:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13341:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13341:43:20"
																},
																"nativeSrc": "13341:73:20",
																"nodeType": "YulFunctionCall",
																"src": "13341:73:20"
															},
															"nativeSrc": "13341:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "13341:73:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12646:775:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12816:9:20",
														"nodeType": "YulTypedName",
														"src": "12816:9:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12828:6:20",
														"nodeType": "YulTypedName",
														"src": "12828:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12836:6:20",
														"nodeType": "YulTypedName",
														"src": "12836:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12844:6:20",
														"nodeType": "YulTypedName",
														"src": "12844:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12852:6:20",
														"nodeType": "YulTypedName",
														"src": "12852:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12860:6:20",
														"nodeType": "YulTypedName",
														"src": "12860:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12868:6:20",
														"nodeType": "YulTypedName",
														"src": "12868:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12879:4:20",
														"nodeType": "YulTypedName",
														"src": "12879:4:20",
														"type": ""
													}
												],
												"src": "12646:775:20"
											},
											{
												"body": {
													"nativeSrc": "13553:206:20",
													"nodeType": "YulBlock",
													"src": "13553:206:20",
													"statements": [
														{
															"nativeSrc": "13563:26:20",
															"nodeType": "YulAssignment",
															"src": "13563:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13575:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "13575:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13586:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13586:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13571:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13571:3:20"
																},
																"nativeSrc": "13571:18:20",
																"nodeType": "YulFunctionCall",
																"src": "13571:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13563:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "13563:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13643:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13643:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13656:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13656:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13667:1:20",
																				"nodeType": "YulLiteral",
																				"src": "13667:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13652:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13652:3:20"
																		},
																		"nativeSrc": "13652:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13652:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13599:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13599:43:20"
																},
																"nativeSrc": "13599:71:20",
																"nodeType": "YulFunctionCall",
																"src": "13599:71:20"
															},
															"nativeSrc": "13599:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "13599:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13724:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13724:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13737:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13737:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13748:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13748:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13733:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13733:3:20"
																		},
																		"nativeSrc": "13733:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13733:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13680:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13680:43:20"
																},
																"nativeSrc": "13680:72:20",
																"nodeType": "YulFunctionCall",
																"src": "13680:72:20"
															},
															"nativeSrc": "13680:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "13680:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "13427:332:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13517:9:20",
														"nodeType": "YulTypedName",
														"src": "13517:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13529:6:20",
														"nodeType": "YulTypedName",
														"src": "13529:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13537:6:20",
														"nodeType": "YulTypedName",
														"src": "13537:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13548:4:20",
														"nodeType": "YulTypedName",
														"src": "13548:4:20",
														"type": ""
													}
												],
												"src": "13427:332:20"
											},
											{
												"body": {
													"nativeSrc": "13919:288:20",
													"nodeType": "YulBlock",
													"src": "13919:288:20",
													"statements": [
														{
															"nativeSrc": "13929:26:20",
															"nodeType": "YulAssignment",
															"src": "13929:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13941:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "13941:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13952:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13952:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13937:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13937:3:20"
																},
																"nativeSrc": "13937:18:20",
																"nodeType": "YulFunctionCall",
																"src": "13937:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13929:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "13929:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14009:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14009:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14022:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14022:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14033:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14033:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14018:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14018:3:20"
																		},
																		"nativeSrc": "14018:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14018:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13965:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13965:43:20"
																},
																"nativeSrc": "13965:71:20",
																"nodeType": "YulFunctionCall",
																"src": "13965:71:20"
															},
															"nativeSrc": "13965:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "13965:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14090:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14090:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14103:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14103:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14114:2:20",
																				"nodeType": "YulLiteral",
																				"src": "14114:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14099:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14099:3:20"
																		},
																		"nativeSrc": "14099:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14099:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14046:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "14046:43:20"
																},
																"nativeSrc": "14046:72:20",
																"nodeType": "YulFunctionCall",
																"src": "14046:72:20"
															},
															"nativeSrc": "14046:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "14046:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14172:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14172:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14185:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14185:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14196:2:20",
																				"nodeType": "YulLiteral",
																				"src": "14196:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14181:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14181:3:20"
																		},
																		"nativeSrc": "14181:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14181:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14128:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "14128:43:20"
																},
																"nativeSrc": "14128:72:20",
																"nodeType": "YulFunctionCall",
																"src": "14128:72:20"
															},
															"nativeSrc": "14128:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "14128:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13765:442:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13875:9:20",
														"nodeType": "YulTypedName",
														"src": "13875:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13887:6:20",
														"nodeType": "YulTypedName",
														"src": "13887:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13895:6:20",
														"nodeType": "YulTypedName",
														"src": "13895:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13903:6:20",
														"nodeType": "YulTypedName",
														"src": "13903:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13914:4:20",
														"nodeType": "YulTypedName",
														"src": "13914:4:20",
														"type": ""
													}
												],
												"src": "13765:442:20"
											},
											{
												"body": {
													"nativeSrc": "14311:124:20",
													"nodeType": "YulBlock",
													"src": "14311:124:20",
													"statements": [
														{
															"nativeSrc": "14321:26:20",
															"nodeType": "YulAssignment",
															"src": "14321:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14333:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "14333:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14344:2:20",
																		"nodeType": "YulLiteral",
																		"src": "14344:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14329:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14329:3:20"
																},
																"nativeSrc": "14329:18:20",
																"nodeType": "YulFunctionCall",
																"src": "14329:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14321:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "14321:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14401:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14401:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14414:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14414:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14425:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14425:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14410:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14410:3:20"
																		},
																		"nativeSrc": "14410:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14410:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14357:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "14357:43:20"
																},
																"nativeSrc": "14357:71:20",
																"nodeType": "YulFunctionCall",
																"src": "14357:71:20"
															},
															"nativeSrc": "14357:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "14357:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14213:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14283:9:20",
														"nodeType": "YulTypedName",
														"src": "14283:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14295:6:20",
														"nodeType": "YulTypedName",
														"src": "14295:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14306:4:20",
														"nodeType": "YulTypedName",
														"src": "14306:4:20",
														"type": ""
													}
												],
												"src": "14213:222:20"
											},
											{
												"body": {
													"nativeSrc": "14469:152:20",
													"nodeType": "YulBlock",
													"src": "14469:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14486:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14486:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14489:77:20",
																		"nodeType": "YulLiteral",
																		"src": "14489:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14479:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14479:6:20"
																},
																"nativeSrc": "14479:88:20",
																"nodeType": "YulFunctionCall",
																"src": "14479:88:20"
															},
															"nativeSrc": "14479:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "14479:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14583:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14583:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14586:4:20",
																		"nodeType": "YulLiteral",
																		"src": "14586:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14576:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14576:6:20"
																},
																"nativeSrc": "14576:15:20",
																"nodeType": "YulFunctionCall",
																"src": "14576:15:20"
															},
															"nativeSrc": "14576:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "14576:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14607:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14607:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14610:4:20",
																		"nodeType": "YulLiteral",
																		"src": "14610:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14600:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14600:6:20"
																},
																"nativeSrc": "14600:15:20",
																"nodeType": "YulFunctionCall",
																"src": "14600:15:20"
															},
															"nativeSrc": "14600:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "14600:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14441:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "14441:180:20"
											},
											{
												"body": {
													"nativeSrc": "14671:147:20",
													"nodeType": "YulBlock",
													"src": "14671:147:20",
													"statements": [
														{
															"nativeSrc": "14681:25:20",
															"nodeType": "YulAssignment",
															"src": "14681:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14704:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14704:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14686:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "14686:17:20"
																},
																"nativeSrc": "14686:20:20",
																"nodeType": "YulFunctionCall",
																"src": "14686:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14681:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "14681:1:20"
																}
															]
														},
														{
															"nativeSrc": "14715:25:20",
															"nodeType": "YulAssignment",
															"src": "14715:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14738:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14738:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14720:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "14720:17:20"
																},
																"nativeSrc": "14720:20:20",
																"nodeType": "YulFunctionCall",
																"src": "14720:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14715:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "14715:1:20"
																}
															]
														},
														{
															"nativeSrc": "14749:16:20",
															"nodeType": "YulAssignment",
															"src": "14749:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14760:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14760:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14763:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14763:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14756:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14756:3:20"
																},
																"nativeSrc": "14756:9:20",
																"nodeType": "YulFunctionCall",
																"src": "14756:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14749:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14749:3:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14789:22:20",
																"nodeType": "YulBlock",
																"src": "14789:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14791:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "14791:16:20"
																			},
																			"nativeSrc": "14791:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "14791:18:20"
																		},
																		"nativeSrc": "14791:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "14791:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14781:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14781:1:20"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14784:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "14784:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14778:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "14778:2:20"
																},
																"nativeSrc": "14778:10:20",
																"nodeType": "YulFunctionCall",
																"src": "14778:10:20"
															},
															"nativeSrc": "14775:36:20",
															"nodeType": "YulIf",
															"src": "14775:36:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14627:191:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14658:1:20",
														"nodeType": "YulTypedName",
														"src": "14658:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14661:1:20",
														"nodeType": "YulTypedName",
														"src": "14661:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14667:3:20",
														"nodeType": "YulTypedName",
														"src": "14667:3:20",
														"type": ""
													}
												],
												"src": "14627:191:20"
											},
											{
												"body": {
													"nativeSrc": "15034:454:20",
													"nodeType": "YulBlock",
													"src": "15034:454:20",
													"statements": [
														{
															"nativeSrc": "15044:27:20",
															"nodeType": "YulAssignment",
															"src": "15044:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15056:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "15056:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15067:3:20",
																		"nodeType": "YulLiteral",
																		"src": "15067:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15052:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15052:3:20"
																},
																"nativeSrc": "15052:19:20",
																"nodeType": "YulFunctionCall",
																"src": "15052:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15044:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "15044:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15125:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15125:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15138:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15138:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15149:1:20",
																				"nodeType": "YulLiteral",
																				"src": "15149:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15134:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15134:3:20"
																		},
																		"nativeSrc": "15134:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15134:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15081:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15081:43:20"
																},
																"nativeSrc": "15081:71:20",
																"nodeType": "YulFunctionCall",
																"src": "15081:71:20"
															},
															"nativeSrc": "15081:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "15081:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15206:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15206:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15219:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15219:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15230:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15230:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15215:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15215:3:20"
																		},
																		"nativeSrc": "15215:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15215:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15162:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15162:43:20"
																},
																"nativeSrc": "15162:72:20",
																"nodeType": "YulFunctionCall",
																"src": "15162:72:20"
															},
															"nativeSrc": "15162:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "15162:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15288:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15288:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15301:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15301:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15312:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15312:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15297:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15297:3:20"
																		},
																		"nativeSrc": "15297:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15297:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15244:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15244:43:20"
																},
																"nativeSrc": "15244:72:20",
																"nodeType": "YulFunctionCall",
																"src": "15244:72:20"
															},
															"nativeSrc": "15244:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "15244:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15370:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15370:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15383:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15383:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15394:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15394:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15379:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15379:3:20"
																		},
																		"nativeSrc": "15379:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15379:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15326:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15326:43:20"
																},
																"nativeSrc": "15326:72:20",
																"nodeType": "YulFunctionCall",
																"src": "15326:72:20"
															},
															"nativeSrc": "15326:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "15326:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "15452:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15452:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15465:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15465:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15476:3:20",
																				"nodeType": "YulLiteral",
																				"src": "15476:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15461:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15461:3:20"
																		},
																		"nativeSrc": "15461:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15461:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15408:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15408:43:20"
																},
																"nativeSrc": "15408:73:20",
																"nodeType": "YulFunctionCall",
																"src": "15408:73:20"
															},
															"nativeSrc": "15408:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "15408:73:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "14824:664:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14974:9:20",
														"nodeType": "YulTypedName",
														"src": "14974:9:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14986:6:20",
														"nodeType": "YulTypedName",
														"src": "14986:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14994:6:20",
														"nodeType": "YulTypedName",
														"src": "14994:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15002:6:20",
														"nodeType": "YulTypedName",
														"src": "15002:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15010:6:20",
														"nodeType": "YulTypedName",
														"src": "15010:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15018:6:20",
														"nodeType": "YulTypedName",
														"src": "15018:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15029:4:20",
														"nodeType": "YulTypedName",
														"src": "15029:4:20",
														"type": ""
													}
												],
												"src": "14824:664:20"
											},
											{
												"body": {
													"nativeSrc": "15672:367:20",
													"nodeType": "YulBlock",
													"src": "15672:367:20",
													"statements": [
														{
															"nativeSrc": "15682:27:20",
															"nodeType": "YulAssignment",
															"src": "15682:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15694:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "15694:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15705:3:20",
																		"nodeType": "YulLiteral",
																		"src": "15705:3:20",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15690:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15690:3:20"
																},
																"nativeSrc": "15690:19:20",
																"nodeType": "YulFunctionCall",
																"src": "15690:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15682:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "15682:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15763:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15763:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15776:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15776:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15787:1:20",
																				"nodeType": "YulLiteral",
																				"src": "15787:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15772:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15772:3:20"
																		},
																		"nativeSrc": "15772:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15772:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15719:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15719:43:20"
																},
																"nativeSrc": "15719:71:20",
																"nodeType": "YulFunctionCall",
																"src": "15719:71:20"
															},
															"nativeSrc": "15719:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "15719:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15840:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15840:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15853:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15853:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15864:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15864:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15849:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15849:3:20"
																		},
																		"nativeSrc": "15849:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15849:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "15800:39:20",
																	"nodeType": "YulIdentifier",
																	"src": "15800:39:20"
																},
																"nativeSrc": "15800:68:20",
																"nodeType": "YulFunctionCall",
																"src": "15800:68:20"
															},
															"nativeSrc": "15800:68:20",
															"nodeType": "YulExpressionStatement",
															"src": "15800:68:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15922:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15922:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15935:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15935:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15946:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15946:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15931:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15931:3:20"
																		},
																		"nativeSrc": "15931:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15931:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15878:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15878:43:20"
																},
																"nativeSrc": "15878:72:20",
																"nodeType": "YulFunctionCall",
																"src": "15878:72:20"
															},
															"nativeSrc": "15878:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "15878:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16004:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "16004:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16017:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "16017:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16028:2:20",
																				"nodeType": "YulLiteral",
																				"src": "16028:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16013:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16013:3:20"
																		},
																		"nativeSrc": "16013:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16013:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15960:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15960:43:20"
																},
																"nativeSrc": "15960:72:20",
																"nodeType": "YulFunctionCall",
																"src": "15960:72:20"
															},
															"nativeSrc": "15960:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "15960:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "15494:545:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15620:9:20",
														"nodeType": "YulTypedName",
														"src": "15620:9:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15632:6:20",
														"nodeType": "YulTypedName",
														"src": "15632:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15640:6:20",
														"nodeType": "YulTypedName",
														"src": "15640:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15648:6:20",
														"nodeType": "YulTypedName",
														"src": "15648:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15656:6:20",
														"nodeType": "YulTypedName",
														"src": "15656:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15667:4:20",
														"nodeType": "YulTypedName",
														"src": "15667:4:20",
														"type": ""
													}
												],
												"src": "15494:545:20"
											},
											{
												"body": {
													"nativeSrc": "16073:152:20",
													"nodeType": "YulBlock",
													"src": "16073:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16090:1:20",
																		"nodeType": "YulLiteral",
																		"src": "16090:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16093:77:20",
																		"nodeType": "YulLiteral",
																		"src": "16093:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16083:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16083:6:20"
																},
																"nativeSrc": "16083:88:20",
																"nodeType": "YulFunctionCall",
																"src": "16083:88:20"
															},
															"nativeSrc": "16083:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "16083:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16187:1:20",
																		"nodeType": "YulLiteral",
																		"src": "16187:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16190:4:20",
																		"nodeType": "YulLiteral",
																		"src": "16190:4:20",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16180:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16180:6:20"
																},
																"nativeSrc": "16180:15:20",
																"nodeType": "YulFunctionCall",
																"src": "16180:15:20"
															},
															"nativeSrc": "16180:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "16180:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16211:1:20",
																		"nodeType": "YulLiteral",
																		"src": "16211:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16214:4:20",
																		"nodeType": "YulLiteral",
																		"src": "16214:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16204:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16204:6:20"
																},
																"nativeSrc": "16204:15:20",
																"nodeType": "YulFunctionCall",
																"src": "16204:15:20"
															},
															"nativeSrc": "16204:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "16204:15:20"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "16045:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "16045:180:20"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2272": [
									{
										"length": 32,
										"start": 2644
									}
								],
								"2274": [
									{
										"length": 32,
										"start": 2603
									}
								],
								"2276": [
									{
										"length": 32,
										"start": 2517
									}
								],
								"2278": [
									{
										"length": 32,
										"start": 4074
									}
								],
								"2280": [
									{
										"length": 32,
										"start": 4107
									}
								],
								"2283": [
									{
										"length": 32,
										"start": 2775
									}
								],
								"2286": [
									{
										"length": 32,
										"start": 2834
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b4114610266578063a9059cbb14610284578063d505accf146102b4578063dd62ed3e146102d0576100e8565b806370a08231146101e25780637ecebe001461021257806384b0196e14610242576100e8565b806323b872dd116100c657806323b872dd146101585780632e0f262514610188578063313ce567146101a65780633644e515146101c4576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f4610300565b60405161010191906114c1565b60405180910390f35b610124600480360381019061011f9190611572565b610390565b60405161013191906115ca565b60405180910390f35b6101426103b2565b60405161014f91906115f2565b60405180910390f35b610172600480360381019061016d919061160b565b6103bb565b60405161017f91906115ca565b60405180910390f35b6101906103e9565b60405161019d9190611676565b60405180910390f35b6101ae6103ee565b6040516101bb9190611676565b60405180910390f35b6101cc6103f6565b6040516101d991906116a7565b60405180910390f35b6101fc60048036038101906101f791906116c0565b610404565b60405161020991906115f2565b60405180910390f35b61022c600480360381019061022791906116c0565b610449565b60405161023991906115f2565b60405180910390f35b61024a61045a565b60405161025d97969594939291906117eb565b60405180910390f35b61026e6104ff565b60405161027b91906114c1565b60405180910390f35b61029e60048036038101906102999190611572565b61058f565b6040516102ab91906115ca565b60405180910390f35b6102ce60048036038101906102c991906118c1565b610670565b005b6102ea60048036038101906102e5919061195e565b6107b5565b6040516102f791906115f2565b60405180910390f35b60606003805461030f906119c9565b80601f016020809104026020016040519081016040528092919081815260200182805461033b906119c9565b80156103865780601f1061035d57610100808354040283529160200191610386565b820191905f5260205f20905b81548152906001019060200180831161036957829003601f168201915b5050505050905090565b5f8061039a610837565b90506103a781858561083e565b600191505092915050565b5f600254905090565b5f806103c5610837565b90506103d2858285610850565b6103dd8585856108e2565b60019150509392505050565b601281565b5f6012905090565b5f6103ff6109d2565b905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61045382610a88565b9050919050565b5f6060805f805f606061046b610ace565b610473610b09565b46305f801b5f67ffffffffffffffff811115610492576104916119f9565b5b6040519080825280602002602001820160405280156104c05781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60606004805461050e906119c9565b80601f016020809104026020016040519081016040528092919081815260200182805461053a906119c9565b80156105855780601f1061055c57610100808354040283529160200191610585565b820191905f5260205f20905b81548152906001019060200180831161056857829003601f168201915b5050505050905090565b5f61059b3384846108e2565b5f833b90505f8163ffffffff161115610665575f8473ffffffffffffffffffffffffffffffffffffffff166324a756d133866040518363ffffffff1660e01b81526004016105ea929190611a26565b6020604051808303815f875af1158015610606573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062a9190611a77565b905080610663576040517f90d52e8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b600191505092915050565b834211156106b557836040517f627913020000000000000000000000000000000000000000000000000000000081526004016106ac91906115f2565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106e38c610b44565b896040516020016106f996959493929190611aa2565b6040516020818303038152906040528051906020012090505f61071b82610b97565b90505f61072a82878787610bb0565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461079e57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610795929190611b01565b60405180910390fd5b6107a98a8a8a61083e565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61084b8383836001610bde565b505050565b5f61085b84846107b5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108dc57818110156108cd578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108c493929190611b28565b60405180910390fd5b6108db84848484035f610bde565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610952575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109499190611b5d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109c2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109b99190611b5d565b60405180910390fd5b6109cd838383610dad565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610a4d57507f000000000000000000000000000000000000000000000000000000000000000046145b15610a7a577f00000000000000000000000000000000000000000000000000000000000000009050610a85565b610a82610fc6565b90505b90565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610b0460057f000000000000000000000000000000000000000000000000000000000000000061105b90919063ffffffff16565b905090565b6060610b3f60067f000000000000000000000000000000000000000000000000000000000000000061105b90919063ffffffff16565b905090565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610ba9610ba36109d2565b83611108565b9050919050565b5f805f80610bc088888888611148565b925092509250610bd0828261122f565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c4e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c459190611b5d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cbe575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cb59190611b5d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610da7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d9e91906115f2565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dfd578060025f828254610df19190611ba3565b92505081905550610ecb565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e86578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e7d93929190611b28565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f12578060025f8282540392505081905550610f5c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fb991906115f2565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611040959493929190611bd6565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146110775761107083611391565b9050611102565b818054611083906119c9565b80601f01602080910402602001604051908101604052809291908181526020018280546110af906119c9565b80156110fa5780601f106110d1576101008083540402835291602001916110fa565b820191905f5260205f20905b8154815290600101906020018083116110dd57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611184575f600385925092509250611225565b5f6001888888886040515f81526020016040526040516111a79493929190611c27565b6020604051602081039080840390855afa1580156111c7573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611218575f60015f801b93509350935050611225565b805f805f1b935093509350505b9450945094915050565b5f600381111561124257611241611c6a565b5b82600381111561125557611254611c6a565b5b031561138d576001600381111561126f5761126e611c6a565b5b82600381111561128257611281611c6a565b5b036112b9576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156112cd576112cc611c6a565b5b8260038111156112e0576112df611c6a565b5b0361132457805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161131b91906115f2565b60405180910390fd5b60038081111561133757611336611c6a565b5b82600381111561134a57611349611c6a565b5b0361138c57806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161138391906116a7565b60405180910390fd5b5b5050565b60605f61139d83611403565b90505f602067ffffffffffffffff8111156113bb576113ba6119f9565b5b6040519080825280601f01601f1916602001820160405280156113ed5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f811115611448576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61149382611451565b61149d818561145b565b93506114ad81856020860161146b565b6114b681611479565b840191505092915050565b5f6020820190508181035f8301526114d98184611489565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61150e826114e5565b9050919050565b61151e81611504565b8114611528575f80fd5b50565b5f8135905061153981611515565b92915050565b5f819050919050565b6115518161153f565b811461155b575f80fd5b50565b5f8135905061156c81611548565b92915050565b5f8060408385031215611588576115876114e1565b5b5f6115958582860161152b565b92505060206115a68582860161155e565b9150509250929050565b5f8115159050919050565b6115c4816115b0565b82525050565b5f6020820190506115dd5f8301846115bb565b92915050565b6115ec8161153f565b82525050565b5f6020820190506116055f8301846115e3565b92915050565b5f805f60608486031215611622576116216114e1565b5b5f61162f8682870161152b565b93505060206116408682870161152b565b92505060406116518682870161155e565b9150509250925092565b5f60ff82169050919050565b6116708161165b565b82525050565b5f6020820190506116895f830184611667565b92915050565b5f819050919050565b6116a18161168f565b82525050565b5f6020820190506116ba5f830184611698565b92915050565b5f602082840312156116d5576116d46114e1565b5b5f6116e28482850161152b565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61171f816116eb565b82525050565b61172e81611504565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6117668161153f565b82525050565b5f611777838361175d565b60208301905092915050565b5f602082019050919050565b5f61179982611734565b6117a3818561173e565b93506117ae8361174e565b805f5b838110156117de5781516117c5888261176c565b97506117d083611783565b9250506001810190506117b1565b5085935050505092915050565b5f60e0820190506117fe5f83018a611716565b81810360208301526118108189611489565b905081810360408301526118248188611489565b905061183360608301876115e3565b6118406080830186611725565b61184d60a0830185611698565b81810360c083015261185f818461178f565b905098975050505050505050565b6118768161165b565b8114611880575f80fd5b50565b5f813590506118918161186d565b92915050565b6118a08161168f565b81146118aa575f80fd5b50565b5f813590506118bb81611897565b92915050565b5f805f805f805f60e0888a0312156118dc576118db6114e1565b5b5f6118e98a828b0161152b565b97505060206118fa8a828b0161152b565b965050604061190b8a828b0161155e565b955050606061191c8a828b0161155e565b945050608061192d8a828b01611883565b93505060a061193e8a828b016118ad565b92505060c061194f8a828b016118ad565b91505092959891949750929550565b5f8060408385031215611974576119736114e1565b5b5f6119818582860161152b565b92505060206119928582860161152b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119e057607f821691505b6020821081036119f3576119f261199c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f604082019050611a395f830185611725565b611a4660208301846115e3565b9392505050565b611a56816115b0565b8114611a60575f80fd5b50565b5f81519050611a7181611a4d565b92915050565b5f60208284031215611a8c57611a8b6114e1565b5b5f611a9984828501611a63565b91505092915050565b5f60c082019050611ab55f830189611698565b611ac26020830188611725565b611acf6040830187611725565b611adc60608301866115e3565b611ae960808301856115e3565b611af660a08301846115e3565b979650505050505050565b5f604082019050611b145f830185611725565b611b216020830184611725565b9392505050565b5f606082019050611b3b5f830186611725565b611b4860208301856115e3565b611b5560408301846115e3565b949350505050565b5f602082019050611b705f830184611725565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bad8261153f565b9150611bb88361153f565b9250828201905080821115611bd057611bcf611b76565b5b92915050565b5f60a082019050611be95f830188611698565b611bf66020830187611698565b611c036040830186611698565b611c1060608301856115e3565b611c1d6080830184611725565b9695505050505050565b5f608082019050611c3a5f830187611698565b611c476020830186611667565b611c546040830185611698565b611c616060830184611698565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220bc766e1cd7cc7e7b13d472c07fd63666ce17a31b5a5380f9252d26235fc154b164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D0 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x242 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x195E JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33B SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x39A PUSH2 0x837 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A7 DUP2 DUP6 DUP6 PUSH2 0x83E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3C5 PUSH2 0x837 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D2 DUP6 DUP3 DUP6 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x3DD DUP6 DUP6 DUP6 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3FF PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x453 DUP3 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x46B PUSH2 0xACE JUMP JUMPDEST PUSH2 0x473 PUSH2 0xB09 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x492 JUMPI PUSH2 0x491 PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x50E SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53A SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x585 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x55C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x585 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x568 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x59B CALLER DUP5 DUP5 PUSH2 0x8E2 JUMP JUMPDEST PUSH0 DUP4 EXTCODESIZE SWAP1 POP PUSH0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x665 JUMPI PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24A756D1 CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP3 SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x606 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90D52E8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6B5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6E3 DUP13 PUSH2 0xB44 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x71B DUP3 PUSH2 0xB97 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x72A DUP3 DUP8 DUP8 DUP8 PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x795 SWAP3 SWAP2 SWAP1 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A9 DUP11 DUP11 DUP11 PUSH2 0x83E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x85B DUP5 DUP5 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x8DC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8CD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x952 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B9 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CD DUP4 DUP4 DUP4 PUSH2 0xDAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA4D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA7A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xA82 PUSH2 0xFC6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB04 PUSH1 0x5 PUSH32 0x0 PUSH2 0x105B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB3F PUSH1 0x6 PUSH32 0x0 PUSH2 0x105B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBA9 PUSH2 0xBA3 PUSH2 0x9D2 JUMP JUMPDEST DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xBC0 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1148 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBD0 DUP3 DUP3 PUSH2 0x122F JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC45 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCBE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDA7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDFD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDF1 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xECB JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE86 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF12 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF5C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1040 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1077 JUMPI PUSH2 0x1070 DUP4 PUSH2 0x1391 JUMP JUMPDEST SWAP1 POP PUSH2 0x1102 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1083 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10AF SWAP1 PUSH2 0x19C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1184 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1225 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x11A7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1218 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1225 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1242 JUMPI PUSH2 0x1241 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x138D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x126F JUMPI PUSH2 0x126E PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1282 JUMPI PUSH2 0x1281 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12CC PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12E0 JUMPI PUSH2 0x12DF PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1324 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131B SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1337 JUMPI PUSH2 0x1336 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x134A JUMPI PUSH2 0x1349 PUSH2 0x1C6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x138C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x139D DUP4 PUSH2 0x1403 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13BB JUMPI PUSH2 0x13BA PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13ED JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1448 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1493 DUP3 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x149D DUP2 DUP6 PUSH2 0x145B JUMP JUMPDEST SWAP4 POP PUSH2 0x14AD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x146B JUMP JUMPDEST PUSH2 0x14B6 DUP2 PUSH2 0x1479 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D9 DUP2 DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150E DUP3 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151E DUP2 PUSH2 0x1504 JUMP JUMPDEST DUP2 EQ PUSH2 0x1528 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1539 DUP2 PUSH2 0x1515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1551 DUP2 PUSH2 0x153F JUMP JUMPDEST DUP2 EQ PUSH2 0x155B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156C DUP2 PUSH2 0x1548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1595 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A6 DUP6 DUP3 DUP7 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C4 DUP2 PUSH2 0x15B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15DD PUSH0 DUP4 ADD DUP5 PUSH2 0x15BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15EC DUP2 PUSH2 0x153F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1605 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1622 JUMPI PUSH2 0x1621 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x162F DUP7 DUP3 DUP8 ADD PUSH2 0x152B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1640 DUP7 DUP3 DUP8 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1651 DUP7 DUP3 DUP8 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1670 DUP2 PUSH2 0x165B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1689 PUSH0 DUP4 ADD DUP5 PUSH2 0x1667 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A1 DUP2 PUSH2 0x168F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1698 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E2 DUP5 DUP3 DUP6 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171F DUP2 PUSH2 0x16EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1504 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1766 DUP2 PUSH2 0x153F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1777 DUP4 DUP4 PUSH2 0x175D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1799 DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x17A3 DUP2 DUP6 PUSH2 0x173E JUMP JUMPDEST SWAP4 POP PUSH2 0x17AE DUP4 PUSH2 0x174E JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17DE JUMPI DUP2 MLOAD PUSH2 0x17C5 DUP9 DUP3 PUSH2 0x176C JUMP JUMPDEST SWAP8 POP PUSH2 0x17D0 DUP4 PUSH2 0x1783 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17B1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x17FE PUSH0 DUP4 ADD DUP11 PUSH2 0x1716 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1810 DUP2 DUP10 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1824 DUP2 DUP9 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP PUSH2 0x1833 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1840 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x184D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1698 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x185F DUP2 DUP5 PUSH2 0x178F JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1876 DUP2 PUSH2 0x165B JUMP JUMPDEST DUP2 EQ PUSH2 0x1880 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1891 DUP2 PUSH2 0x186D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18A0 DUP2 PUSH2 0x168F JUMP JUMPDEST DUP2 EQ PUSH2 0x18AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18BB DUP2 PUSH2 0x1897 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x18DC JUMPI PUSH2 0x18DB PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18E9 DUP11 DUP3 DUP12 ADD PUSH2 0x152B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x18FA DUP11 DUP3 DUP12 ADD PUSH2 0x152B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x190B DUP11 DUP3 DUP12 ADD PUSH2 0x155E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x191C DUP11 DUP3 DUP12 ADD PUSH2 0x155E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x192D DUP11 DUP3 DUP12 ADD PUSH2 0x1883 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x193E DUP11 DUP3 DUP12 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x194F DUP11 DUP3 DUP12 ADD PUSH2 0x18AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1974 JUMPI PUSH2 0x1973 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1981 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1992 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A39 PUSH0 DUP4 ADD DUP6 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1A46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A56 DUP2 PUSH2 0x15B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A60 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A71 DUP2 PUSH2 0x1A4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A8C JUMPI PUSH2 0x1A8B PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A99 DUP5 DUP3 DUP6 ADD PUSH2 0x1A63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1AB5 PUSH0 DUP4 ADD DUP10 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1AC2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1ACF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1ADC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1AE9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1AF6 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x15E3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B14 PUSH0 DUP4 ADD DUP6 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1B21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1725 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B3B PUSH0 DUP4 ADD DUP7 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1B48 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1B55 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B70 PUSH0 DUP4 ADD DUP5 PUSH2 0x1725 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BAD DUP3 PUSH2 0x153F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB8 DUP4 PUSH2 0x153F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BD0 JUMPI PUSH2 0x1BCF PUSH2 0x1B76 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BE9 PUSH0 DUP4 ADD DUP9 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1BF6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1C03 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1C10 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1C1D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1725 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C3A PUSH0 DUP4 ADD DUP8 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1C47 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1C54 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1C61 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1698 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC PUSH23 0x6E1CD7CC7E7B13D472C07FD63666CE17A31B5A5380F925 0x2D 0x26 0x23 PUSH0 0xC1 SLOAD 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "432:740:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;513:35:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2406:143:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:14;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:446:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;513:35:19:-;546:2;513:35;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:4:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2406:143:4:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:14:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;724:446:19:-;795:12;819:33;829:10;841:2;845:6;819:9;:33::i;:::-;862:11;926:2;914:15;906:23;;959:1;952:4;:8;;;949:191;;;976:7;1000:2;986:32;;;1019:10;1031:6;986:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;976:62;;1056:2;1052:78;;1085:30;;;;;;;;;;;;;;1052:78;962:178;949:191;1159:4;1149:14;;809:361;724:446;;;;:::o;1680:672:4:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:14:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;538:107:9:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:14:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:9:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:14:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:13:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4113:179:14:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:10:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:15:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:13:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:10:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:77::-;4783:7;4812:5;4801:16;;4746:77;;;:::o;4829:118::-;4916:24;4934:5;4916:24;:::i;:::-;4911:3;4904:37;4829:118;;:::o;4953:222::-;5046:4;5084:2;5073:9;5069:18;5061:26;;5097:71;5165:1;5154:9;5150:17;5141:6;5097:71;:::i;:::-;4953:222;;;;:::o;5181:329::-;5240:6;5289:2;5277:9;5268:7;5264:23;5260:32;5257:119;;;5295:79;;:::i;:::-;5257:119;5415:1;5440:53;5485:7;5476:6;5465:9;5461:22;5440:53;:::i;:::-;5430:63;;5386:117;5181:329;;;;:::o;5516:149::-;5552:7;5592:66;5585:5;5581:78;5570:89;;5516:149;;;:::o;5671:115::-;5756:23;5773:5;5756:23;:::i;:::-;5751:3;5744:36;5671:115;;:::o;5792:118::-;5879:24;5897:5;5879:24;:::i;:::-;5874:3;5867:37;5792:118;;:::o;5916:114::-;5983:6;6017:5;6011:12;6001:22;;5916:114;;;:::o;6036:184::-;6135:11;6169:6;6164:3;6157:19;6209:4;6204:3;6200:14;6185:29;;6036:184;;;;:::o;6226:132::-;6293:4;6316:3;6308:11;;6346:4;6341:3;6337:14;6329:22;;6226:132;;;:::o;6364:108::-;6441:24;6459:5;6441:24;:::i;:::-;6436:3;6429:37;6364:108;;:::o;6478:179::-;6547:10;6568:46;6610:3;6602:6;6568:46;:::i;:::-;6646:4;6641:3;6637:14;6623:28;;6478:179;;;;:::o;6663:113::-;6733:4;6765;6760:3;6756:14;6748:22;;6663:113;;;:::o;6812:732::-;6931:3;6960:54;7008:5;6960:54;:::i;:::-;7030:86;7109:6;7104:3;7030:86;:::i;:::-;7023:93;;7140:56;7190:5;7140:56;:::i;:::-;7219:7;7250:1;7235:284;7260:6;7257:1;7254:13;7235:284;;;7336:6;7330:13;7363:63;7422:3;7407:13;7363:63;:::i;:::-;7356:70;;7449:60;7502:6;7449:60;:::i;:::-;7439:70;;7295:224;7282:1;7279;7275:9;7270:14;;7235:284;;;7239:14;7535:3;7528:10;;6936:608;;;6812:732;;;;:::o;7550:1215::-;7899:4;7937:3;7926:9;7922:19;7914:27;;7951:69;8017:1;8006:9;8002:17;7993:6;7951:69;:::i;:::-;8067:9;8061:4;8057:20;8052:2;8041:9;8037:18;8030:48;8095:78;8168:4;8159:6;8095:78;:::i;:::-;8087:86;;8220:9;8214:4;8210:20;8205:2;8194:9;8190:18;8183:48;8248:78;8321:4;8312:6;8248:78;:::i;:::-;8240:86;;8336:72;8404:2;8393:9;8389:18;8380:6;8336:72;:::i;:::-;8418:73;8486:3;8475:9;8471:19;8462:6;8418:73;:::i;:::-;8501;8569:3;8558:9;8554:19;8545:6;8501:73;:::i;:::-;8622:9;8616:4;8612:20;8606:3;8595:9;8591:19;8584:49;8650:108;8753:4;8744:6;8650:108;:::i;:::-;8642:116;;7550:1215;;;;;;;;;;:::o;8771:118::-;8842:22;8858:5;8842:22;:::i;:::-;8835:5;8832:33;8822:61;;8879:1;8876;8869:12;8822:61;8771:118;:::o;8895:135::-;8939:5;8977:6;8964:20;8955:29;;8993:31;9018:5;8993:31;:::i;:::-;8895:135;;;;:::o;9036:122::-;9109:24;9127:5;9109:24;:::i;:::-;9102:5;9099:35;9089:63;;9148:1;9145;9138:12;9089:63;9036:122;:::o;9164:139::-;9210:5;9248:6;9235:20;9226:29;;9264:33;9291:5;9264:33;:::i;:::-;9164:139;;;;:::o;9309:1199::-;9420:6;9428;9436;9444;9452;9460;9468;9517:3;9505:9;9496:7;9492:23;9488:33;9485:120;;;9524:79;;:::i;:::-;9485:120;9644:1;9669:53;9714:7;9705:6;9694:9;9690:22;9669:53;:::i;:::-;9659:63;;9615:117;9771:2;9797:53;9842:7;9833:6;9822:9;9818:22;9797:53;:::i;:::-;9787:63;;9742:118;9899:2;9925:53;9970:7;9961:6;9950:9;9946:22;9925:53;:::i;:::-;9915:63;;9870:118;10027:2;10053:53;10098:7;10089:6;10078:9;10074:22;10053:53;:::i;:::-;10043:63;;9998:118;10155:3;10182:51;10225:7;10216:6;10205:9;10201:22;10182:51;:::i;:::-;10172:61;;10126:117;10282:3;10309:53;10354:7;10345:6;10334:9;10330:22;10309:53;:::i;:::-;10299:63;;10253:119;10411:3;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10382:119;9309:1199;;;;;;;;;;:::o;10514:474::-;10582:6;10590;10639:2;10627:9;10618:7;10614:23;10610:32;10607:119;;;10645:79;;:::i;:::-;10607:119;10765:1;10790:53;10835:7;10826:6;10815:9;10811:22;10790:53;:::i;:::-;10780:63;;10736:117;10892:2;10918:53;10963:7;10954:6;10943:9;10939:22;10918:53;:::i;:::-;10908:63;;10863:118;10514:474;;;;;:::o;10994:180::-;11042:77;11039:1;11032:88;11139:4;11136:1;11129:15;11163:4;11160:1;11153:15;11180:320;11224:6;11261:1;11255:4;11251:12;11241:22;;11308:1;11302:4;11298:12;11329:18;11319:81;;11385:4;11377:6;11373:17;11363:27;;11319:81;11447:2;11439:6;11436:14;11416:18;11413:38;11410:84;;11466:18;;:::i;:::-;11410:84;11231:269;11180:320;;;:::o;11506:180::-;11554:77;11551:1;11544:88;11651:4;11648:1;11641:15;11675:4;11672:1;11665:15;11692:332;11813:4;11851:2;11840:9;11836:18;11828:26;;11864:71;11932:1;11921:9;11917:17;11908:6;11864:71;:::i;:::-;11945:72;12013:2;12002:9;11998:18;11989:6;11945:72;:::i;:::-;11692:332;;;;;:::o;12030:116::-;12100:21;12115:5;12100:21;:::i;:::-;12093:5;12090:32;12080:60;;12136:1;12133;12126:12;12080:60;12030:116;:::o;12152:137::-;12206:5;12237:6;12231:13;12222:22;;12253:30;12277:5;12253:30;:::i;:::-;12152:137;;;;:::o;12295:345::-;12362:6;12411:2;12399:9;12390:7;12386:23;12382:32;12379:119;;;12417:79;;:::i;:::-;12379:119;12537:1;12562:61;12615:7;12606:6;12595:9;12591:22;12562:61;:::i;:::-;12552:71;;12508:125;12295:345;;;;:::o;12646:775::-;12879:4;12917:3;12906:9;12902:19;12894:27;;12931:71;12999:1;12988:9;12984:17;12975:6;12931:71;:::i;:::-;13012:72;13080:2;13069:9;13065:18;13056:6;13012:72;:::i;:::-;13094;13162:2;13151:9;13147:18;13138:6;13094:72;:::i;:::-;13176;13244:2;13233:9;13229:18;13220:6;13176:72;:::i;:::-;13258:73;13326:3;13315:9;13311:19;13302:6;13258:73;:::i;:::-;13341;13409:3;13398:9;13394:19;13385:6;13341:73;:::i;:::-;12646:775;;;;;;;;;:::o;13427:332::-;13548:4;13586:2;13575:9;13571:18;13563:26;;13599:71;13667:1;13656:9;13652:17;13643:6;13599:71;:::i;:::-;13680:72;13748:2;13737:9;13733:18;13724:6;13680:72;:::i;:::-;13427:332;;;;;:::o;13765:442::-;13914:4;13952:2;13941:9;13937:18;13929:26;;13965:71;14033:1;14022:9;14018:17;14009:6;13965:71;:::i;:::-;14046:72;14114:2;14103:9;14099:18;14090:6;14046:72;:::i;:::-;14128;14196:2;14185:9;14181:18;14172:6;14128:72;:::i;:::-;13765:442;;;;;;:::o;14213:222::-;14306:4;14344:2;14333:9;14329:18;14321:26;;14357:71;14425:1;14414:9;14410:17;14401:6;14357:71;:::i;:::-;14213:222;;;;:::o;14441:180::-;14489:77;14486:1;14479:88;14586:4;14583:1;14576:15;14610:4;14607:1;14600:15;14627:191;14667:3;14686:20;14704:1;14686:20;:::i;:::-;14681:25;;14720:20;14738:1;14720:20;:::i;:::-;14715:25;;14763:1;14760;14756:9;14749:16;;14784:3;14781:1;14778:10;14775:36;;;14791:18;;:::i;:::-;14775:36;14627:191;;;;:::o;14824:664::-;15029:4;15067:3;15056:9;15052:19;15044:27;;15081:71;15149:1;15138:9;15134:17;15125:6;15081:71;:::i;:::-;15162:72;15230:2;15219:9;15215:18;15206:6;15162:72;:::i;:::-;15244;15312:2;15301:9;15297:18;15288:6;15244:72;:::i;:::-;15326;15394:2;15383:9;15379:18;15370:6;15326:72;:::i;:::-;15408:73;15476:3;15465:9;15461:19;15452:6;15408:73;:::i;:::-;14824:664;;;;;;;;:::o;15494:545::-;15667:4;15705:3;15694:9;15690:19;15682:27;;15719:71;15787:1;15776:9;15772:17;15763:6;15719:71;:::i;:::-;15800:68;15864:2;15853:9;15849:18;15840:6;15800:68;:::i;:::-;15878:72;15946:2;15935:9;15931:18;15922:6;15878:72;:::i;:::-;15960;16028:2;16017:9;16013:18;16004:6;15960:72;:::i;:::-;15494:545;;;;;;;:::o;16045:180::-;16093:77;16090:1;16083:88;16190:4;16187:1;16180:15;16214:4;16211:1;16204:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1474600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DECIMALS()": "376",
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"decimals()": "405",
								"eip712Domain()": "infinite",
								"name()": "infinite",
								"nonces(address)": "2916",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "160"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 554,
									"end": 686,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 554,
									"end": 686,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 554,
									"end": 686,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 554,
									"end": 686,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 554,
									"end": 686,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 554,
									"end": 686,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 554,
									"end": 686,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 554,
									"end": 686,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 554,
									"end": 686,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 554,
									"end": 686,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 554,
									"end": 686,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "7768617400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1613,
									"end": 1617,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "E68891E79A84E5908DE5AD970000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "50454E4759490000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 679,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 644,
									"end": 654,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 19
								},
								{
									"begin": 546,
									"end": 548,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 19,
									"value": "12"
								},
								{
									"begin": 664,
									"end": 666,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 19,
									"value": "A"
								},
								{
									"begin": 664,
									"end": 678,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 664,
									"end": 678,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 664,
									"end": 678,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 664,
									"end": 678,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 664,
									"end": 678,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 664,
									"end": 678,
									"modifierDepth": 2,
									"name": "tag",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 664,
									"end": 678,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 656,
									"end": 661,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 19,
									"value": "2710"
								},
								{
									"begin": 656,
									"end": 678,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 656,
									"end": 678,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 656,
									"end": 678,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 656,
									"end": 678,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 656,
									"end": 678,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 656,
									"end": 678,
									"modifierDepth": 2,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 656,
									"end": 678,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 638,
									"end": 643,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 638,
									"end": 643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 638,
									"end": 643,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 638,
									"end": 679,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 638,
									"end": 679,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 638,
									"end": 679,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 638,
									"end": 679,
									"modifierDepth": 2,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 638,
									"end": 679,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 14,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 14
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 4204,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1965,
									"end": 1969,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3203,
									"end": 3223,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3311,
									"end": 3321,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 20,
									"value": "61"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 20,
									"value": "62"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 20,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 20,
									"value": "63"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 20,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 20,
									"value": "64"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "104"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 20,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 20,
									"value": "104"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "105"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "106"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "63"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 20,
									"value": "106"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 20,
									"value": "105"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 20,
									"value": "65"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 20
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 20,
									"value": "66"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 20,
									"value": "68"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "111"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 20,
									"value": "111"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "112"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 20,
									"value": "112"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 20
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 20,
									"value": "70"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 20,
									"value": "71"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "116"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "117"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "118"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 20,
									"value": "118"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "70"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 20,
									"value": "117"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 20,
									"value": "116"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "121"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "71"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 20,
									"value": "121"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "122"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "123"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 20,
									"value": "123"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 20
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 20,
									"value": "122"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 20,
									"value": "75"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "126"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 20,
									"value": "126"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "127"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 20,
									"value": "127"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 20,
									"value": "76"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 20,
									"value": "129"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "131"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "132"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "75"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 20,
									"value": "132"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "129"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 20,
									"value": "131"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 20,
									"value": "77"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "134"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "135"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "65"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 20,
									"value": "135"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "136"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "66"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 20,
									"value": "136"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "137"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 20,
									"value": "137"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "138"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "139"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "66"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 20,
									"value": "139"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "76"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 20,
									"value": "138"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 20,
									"value": "134"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 20,
									"value": "78"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 20,
									"value": "79"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "142"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "78"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 20,
									"value": "142"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "144"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "79"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 20,
									"value": "144"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "146"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "61"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 20,
									"value": "146"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "147"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "148"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "62"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 20,
									"value": "148"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 20,
									"value": "147"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "149"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 20
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "64"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 20,
									"value": "149"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "150"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "77"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 20,
									"value": "150"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "152"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "153"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 20,
									"value": "153"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "154"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 20,
									"value": "154"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "151"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 20,
									"value": "152"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "155"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "65"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 20,
									"value": "155"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 20,
									"value": "156"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "158"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 20
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "156"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 20,
									"value": "158"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "159"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 20
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "160"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 20
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "79"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 20,
									"value": "160"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 20,
									"value": "159"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 20
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 20
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 20,
									"value": "151"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 20,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 20,
									"value": "82"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 20,
									"value": "83"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 20,
									"value": "164"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "166"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "167"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "168"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 20,
									"value": "168"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 20,
									"value": "167"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "169"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 20,
									"value": "169"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "170"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "82"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 20,
									"value": "170"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "164"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 20,
									"value": "166"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 20,
									"value": "84"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "172"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 20,
									"value": "172"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "173"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 20,
									"value": "173"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "175"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "176"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "174"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 20,
									"value": "175"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 20,
									"value": "176"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 20,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "177"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "178"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 20,
									"value": "178"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 20,
									"value": "177"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 20
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "179"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "180"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 20,
									"value": "180"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 20,
									"value": "179"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 20,
									"value": "174"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 20,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 20,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "181"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 20
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "182"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "183"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 20,
									"value": "183"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 20,
									"value": "182"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 20,
									"value": "181"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "184"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "83"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 20,
									"value": "184"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "185"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "186"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 20,
									"value": "186"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 20,
									"value": "185"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "tag",
									"source": 20,
									"value": "85"
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7496,
									"end": 7503,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7540,
									"name": "PUSH",
									"source": 20,
									"value": "FF"
								},
								{
									"begin": 7529,
									"end": 7534,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7525,
									"end": 7541,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "tag",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "189"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 7635,
									"end": 7658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "tag",
									"source": 20,
									"value": "189"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "190"
								},
								{
									"begin": 7695,
									"end": 7703,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "85"
								},
								{
									"begin": 7679,
									"end": 7704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "tag",
									"source": 20,
									"value": "190"
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "191"
								},
								{
									"begin": 7760,
									"end": 7826,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7750,
									"end": 7758,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7744,
									"end": 7748,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "84"
								},
								{
									"begin": 7723,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "tag",
									"source": 20,
									"value": "191"
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7553,
									"end": 7834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "tag",
									"source": 20,
									"value": "22"
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7880,
									"end": 7887,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "193"
								},
								{
									"begin": 7921,
									"end": 7922,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 7903,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "tag",
									"source": 20,
									"value": "193"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "194"
								},
								{
									"begin": 7955,
									"end": 7956,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 7937,
									"end": 7957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "tag",
									"source": 20,
									"value": "194"
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7992,
									"end": 7993,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7985,
									"end": 7994,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "195"
								},
								{
									"begin": 8032,
									"end": 8043,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 8014,
									"end": 8044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "tag",
									"source": 20,
									"value": "195"
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8193,
									"end": 8194,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8184,
									"end": 8191,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8180,
									"end": 8195,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 8177,
									"end": 8178,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 8174,
									"end": 8196,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 8154,
									"end": 8155,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 8147,
									"end": 8156,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 8127,
									"end": 8210,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "196"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "197"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 8223,
									"end": 8241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "tag",
									"source": 20,
									"value": "197"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "tag",
									"source": 20,
									"value": "196"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7888,
									"end": 8250,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7840,
									"end": 8250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "tag",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8293,
									"end": 8300,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8322,
									"end": 8327,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8311,
									"end": 8327,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8311,
									"end": 8327,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8256,
									"end": 8333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8339,
									"end": 8457,
									"name": "tag",
									"source": 20,
									"value": "87"
								},
								{
									"begin": 8339,
									"end": 8457,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8426,
									"end": 8450,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "200"
								},
								{
									"begin": 8444,
									"end": 8449,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8426,
									"end": 8450,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 8426,
									"end": 8450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8426,
									"end": 8450,
									"name": "tag",
									"source": 20,
									"value": "200"
								},
								{
									"begin": 8426,
									"end": 8450,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8421,
									"end": 8424,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8414,
									"end": 8451,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 8339,
									"end": 8457,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8339,
									"end": 8457,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8339,
									"end": 8457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8463,
									"end": 8581,
									"name": "tag",
									"source": 20,
									"value": "88"
								},
								{
									"begin": 8463,
									"end": 8581,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8550,
									"end": 8574,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "202"
								},
								{
									"begin": 8568,
									"end": 8573,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8550,
									"end": 8574,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 8550,
									"end": 8574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8550,
									"end": 8574,
									"name": "tag",
									"source": 20,
									"value": "202"
								},
								{
									"begin": 8550,
									"end": 8574,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8545,
									"end": 8548,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8538,
									"end": 8575,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 8463,
									"end": 8581,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8463,
									"end": 8581,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8463,
									"end": 8581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "tag",
									"source": 20,
									"value": "89"
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8624,
									"end": 8631,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8664,
									"end": 8706,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8657,
									"end": 8662,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8653,
									"end": 8707,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 8642,
									"end": 8707,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8642,
									"end": 8707,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8587,
									"end": 8713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "tag",
									"source": 20,
									"value": "90"
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8756,
									"end": 8763,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "205"
								},
								{
									"begin": 8803,
									"end": 8808,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "89"
								},
								{
									"begin": 8785,
									"end": 8809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "tag",
									"source": 20,
									"value": "205"
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8774,
									"end": 8809,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8774,
									"end": 8809,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8719,
									"end": 8815,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8821,
									"end": 8939,
									"name": "tag",
									"source": 20,
									"value": "91"
								},
								{
									"begin": 8821,
									"end": 8939,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8908,
									"end": 8932,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "207"
								},
								{
									"begin": 8926,
									"end": 8931,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8908,
									"end": 8932,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "90"
								},
								{
									"begin": 8908,
									"end": 8932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8908,
									"end": 8932,
									"name": "tag",
									"source": 20,
									"value": "207"
								},
								{
									"begin": 8908,
									"end": 8932,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8903,
									"end": 8906,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8896,
									"end": 8933,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 8821,
									"end": 8939,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8821,
									"end": 8939,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8821,
									"end": 8939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "tag",
									"source": 20,
									"value": "35"
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9150,
									"end": 9154,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9188,
									"end": 9191,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 9177,
									"end": 9186,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9173,
									"end": 9192,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9165,
									"end": 9192,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 9165,
									"end": 9192,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9202,
									"end": 9273,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "209"
								},
								{
									"begin": 9270,
									"end": 9271,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9259,
									"end": 9268,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9255,
									"end": 9272,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9246,
									"end": 9252,
									"name": "DUP9",
									"source": 20
								},
								{
									"begin": 9202,
									"end": 9273,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "87"
								},
								{
									"begin": 9202,
									"end": 9273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9202,
									"end": 9273,
									"name": "tag",
									"source": 20,
									"value": "209"
								},
								{
									"begin": 9202,
									"end": 9273,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9283,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "210"
								},
								{
									"begin": 9351,
									"end": 9353,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 9340,
									"end": 9349,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9336,
									"end": 9354,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9327,
									"end": 9333,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 9283,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "87"
								},
								{
									"begin": 9283,
									"end": 9355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9283,
									"end": 9355,
									"name": "tag",
									"source": 20,
									"value": "210"
								},
								{
									"begin": 9283,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9365,
									"end": 9437,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "211"
								},
								{
									"begin": 9433,
									"end": 9435,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 9422,
									"end": 9431,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9409,
									"end": 9415,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 9365,
									"end": 9437,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "87"
								},
								{
									"begin": 9365,
									"end": 9437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9365,
									"end": 9437,
									"name": "tag",
									"source": 20,
									"value": "211"
								},
								{
									"begin": 9365,
									"end": 9437,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9447,
									"end": 9519,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "212"
								},
								{
									"begin": 9515,
									"end": 9517,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 9504,
									"end": 9513,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9500,
									"end": 9518,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9491,
									"end": 9497,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 9447,
									"end": 9519,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "88"
								},
								{
									"begin": 9447,
									"end": 9519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9447,
									"end": 9519,
									"name": "tag",
									"source": 20,
									"value": "212"
								},
								{
									"begin": 9447,
									"end": 9519,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9529,
									"end": 9602,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "213"
								},
								{
									"begin": 9597,
									"end": 9600,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 9586,
									"end": 9595,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9582,
									"end": 9601,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9573,
									"end": 9579,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 9529,
									"end": 9602,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "91"
								},
								{
									"begin": 9529,
									"end": 9602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9529,
									"end": 9602,
									"name": "tag",
									"source": 20,
									"value": "213"
								},
								{
									"begin": 9529,
									"end": 9602,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "SWAP7",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "SWAP6",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8945,
									"end": 9609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "tag",
									"source": 20,
									"value": "39"
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9708,
									"end": 9712,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9746,
									"end": 9748,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 9735,
									"end": 9744,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9731,
									"end": 9749,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9723,
									"end": 9749,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 9723,
									"end": 9749,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9759,
									"end": 9830,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "215"
								},
								{
									"begin": 9827,
									"end": 9828,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9816,
									"end": 9825,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9812,
									"end": 9829,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9803,
									"end": 9809,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 9759,
									"end": 9830,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "91"
								},
								{
									"begin": 9759,
									"end": 9830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9759,
									"end": 9830,
									"name": "tag",
									"source": 20,
									"value": "215"
								},
								{
									"begin": 9759,
									"end": 9830,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9615,
									"end": 9837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "tag",
									"source": 20,
									"value": "92"
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9927,
									"end": 9938,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9961,
									"end": 9967,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9956,
									"end": 9959,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9949,
									"end": 9968,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 10001,
									"end": 10005,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 9996,
									"end": 9999,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9992,
									"end": 10006,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9977,
									"end": 10006,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 9977,
									"end": 10006,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9843,
									"end": 10012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10018,
									"end": 10157,
									"name": "tag",
									"source": 20,
									"value": "93"
								},
								{
									"begin": 10018,
									"end": 10157,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10107,
									"end": 10113,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 10102,
									"end": 10105,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10097,
									"end": 10100,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 10091,
									"end": 10114,
									"name": "MCOPY",
									"source": 20
								},
								{
									"begin": 10148,
									"end": 10149,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10139,
									"end": 10145,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 10134,
									"end": 10137,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 10130,
									"end": 10146,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10123,
									"end": 10150,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 10018,
									"end": 10157,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10018,
									"end": 10157,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10018,
									"end": 10157,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10018,
									"end": 10157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10163,
									"end": 10265,
									"name": "tag",
									"source": 20,
									"value": "94"
								},
								{
									"begin": 10163,
									"end": 10265,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10204,
									"end": 10210,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10255,
									"end": 10257,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 10251,
									"end": 10258,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 10246,
									"end": 10248,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 10239,
									"end": 10244,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 10235,
									"end": 10249,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10231,
									"end": 10259,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 10221,
									"end": 10259,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10221,
									"end": 10259,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10163,
									"end": 10265,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10163,
									"end": 10265,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10163,
									"end": 10265,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10163,
									"end": 10265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10271,
									"end": 10648,
									"name": "tag",
									"source": 20,
									"value": "95"
								},
								{
									"begin": 10271,
									"end": 10648,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10359,
									"end": 10362,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10387,
									"end": 10426,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "220"
								},
								{
									"begin": 10420,
									"end": 10425,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 10387,
									"end": 10426,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "61"
								},
								{
									"begin": 10387,
									"end": 10426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10387,
									"end": 10426,
									"name": "tag",
									"source": 20,
									"value": "220"
								},
								{
									"begin": 10387,
									"end": 10426,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10442,
									"end": 10513,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "221"
								},
								{
									"begin": 10506,
									"end": 10512,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10501,
									"end": 10504,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 10442,
									"end": 10513,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "92"
								},
								{
									"begin": 10442,
									"end": 10513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10442,
									"end": 10513,
									"name": "tag",
									"source": 20,
									"value": "221"
								},
								{
									"begin": 10442,
									"end": 10513,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10435,
									"end": 10513,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 10435,
									"end": 10513,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10522,
									"end": 10587,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "222"
								},
								{
									"begin": 10580,
									"end": 10586,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10575,
									"end": 10578,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 10568,
									"end": 10572,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 10561,
									"end": 10566,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 10557,
									"end": 10573,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10522,
									"end": 10587,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "93"
								},
								{
									"begin": 10522,
									"end": 10587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10522,
									"end": 10587,
									"name": "tag",
									"source": 20,
									"value": "222"
								},
								{
									"begin": 10522,
									"end": 10587,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10612,
									"end": 10641,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "223"
								},
								{
									"begin": 10634,
									"end": 10640,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10612,
									"end": 10641,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "94"
								},
								{
									"begin": 10612,
									"end": 10641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10612,
									"end": 10641,
									"name": "tag",
									"source": 20,
									"value": "223"
								},
								{
									"begin": 10612,
									"end": 10641,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10607,
									"end": 10610,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 10603,
									"end": 10642,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10596,
									"end": 10642,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10596,
									"end": 10642,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10363,
									"end": 10648,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10271,
									"end": 10648,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 10271,
									"end": 10648,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10271,
									"end": 10648,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10271,
									"end": 10648,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10271,
									"end": 10648,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10654,
									"end": 10967,
									"name": "tag",
									"source": 20,
									"value": "45"
								},
								{
									"begin": 10654,
									"end": 10967,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10767,
									"end": 10771,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10805,
									"end": 10807,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 10794,
									"end": 10803,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 10790,
									"end": 10808,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10782,
									"end": 10808,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10782,
									"end": 10808,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10854,
									"end": 10863,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10848,
									"end": 10852,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10844,
									"end": 10864,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 10840,
									"end": 10841,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10829,
									"end": 10838,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 10825,
									"end": 10842,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10818,
									"end": 10865,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 10882,
									"end": 10960,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "225"
								},
								{
									"begin": 10955,
									"end": 10959,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10946,
									"end": 10952,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 10882,
									"end": 10960,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "95"
								},
								{
									"begin": 10882,
									"end": 10960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10882,
									"end": 10960,
									"name": "tag",
									"source": 20,
									"value": "225"
								},
								{
									"begin": 10882,
									"end": 10960,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10874,
									"end": 10960,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10874,
									"end": 10960,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10654,
									"end": 10967,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 10654,
									"end": 10967,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10654,
									"end": 10967,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10654,
									"end": 10967,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10654,
									"end": 10967,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10973,
									"end": 11071,
									"name": "tag",
									"source": 20,
									"value": "96"
								},
								{
									"begin": 10973,
									"end": 11071,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11024,
									"end": 11030,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 11058,
									"end": 11063,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 11052,
									"end": 11064,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 11042,
									"end": 11064,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11042,
									"end": 11064,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10973,
									"end": 11071,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10973,
									"end": 11071,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10973,
									"end": 11071,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10973,
									"end": 11071,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11077,
									"end": 11193,
									"name": "tag",
									"source": 20,
									"value": "97"
								},
								{
									"begin": 11077,
									"end": 11193,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11128,
									"end": 11132,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 11151,
									"end": 11154,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 11143,
									"end": 11154,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11143,
									"end": 11154,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11181,
									"end": 11185,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 11176,
									"end": 11179,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11172,
									"end": 11186,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 11164,
									"end": 11186,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11164,
									"end": 11186,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11077,
									"end": 11193,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11077,
									"end": 11193,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11077,
									"end": 11193,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11077,
									"end": 11193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11199,
									"end": 11353,
									"name": "tag",
									"source": 20,
									"value": "98"
								},
								{
									"begin": 11199,
									"end": 11353,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11242,
									"end": 11253,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 11278,
									"end": 11307,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "229"
								},
								{
									"begin": 11302,
									"end": 11305,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11296,
									"end": 11306,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 11278,
									"end": 11307,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 11278,
									"end": 11307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11278,
									"end": 11307,
									"name": "tag",
									"source": 20,
									"value": "229"
								},
								{
									"begin": 11278,
									"end": 11307,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11341,
									"end": 11346,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 11317,
									"end": 11346,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11317,
									"end": 11346,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11254,
									"end": 11353,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11199,
									"end": 11353,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11199,
									"end": 11353,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11199,
									"end": 11353,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11199,
									"end": 11353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11359,
									"end": 11953,
									"name": "tag",
									"source": 20,
									"value": "47"
								},
								{
									"begin": 11359,
									"end": 11953,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11443,
									"end": 11448,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 11474,
									"end": 11512,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "231"
								},
								{
									"begin": 11506,
									"end": 11511,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11474,
									"end": 11512,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "96"
								},
								{
									"begin": 11474,
									"end": 11512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11474,
									"end": 11512,
									"name": "tag",
									"source": 20,
									"value": "231"
								},
								{
									"begin": 11474,
									"end": 11512,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11537,
									"end": 11542,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11564,
									"end": 11604,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "232"
								},
								{
									"begin": 11598,
									"end": 11603,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 11564,
									"end": 11604,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "97"
								},
								{
									"begin": 11564,
									"end": 11604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11564,
									"end": 11604,
									"name": "tag",
									"source": 20,
									"value": "232"
								},
								{
									"begin": 11564,
									"end": 11604,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11552,
									"end": 11604,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11552,
									"end": 11604,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11623,
									"end": 11658,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "233"
								},
								{
									"begin": 11649,
									"end": 11657,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 11623,
									"end": 11658,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "98"
								},
								{
									"begin": 11623,
									"end": 11658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11623,
									"end": 11658,
									"name": "tag",
									"source": 20,
									"value": "233"
								},
								{
									"begin": 11623,
									"end": 11658,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11614,
									"end": 11658,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 11614,
									"end": 11658,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11682,
									"end": 11684,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 11674,
									"end": 11680,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11671,
									"end": 11685,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 11668,
									"end": 11946,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 11668,
									"end": 11946,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "234"
								},
								{
									"begin": 11668,
									"end": 11946,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 11753,
									"end": 11922,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "235"
								},
								{
									"begin": 11838,
									"end": 11904,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11808,
									"end": 11814,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 11804,
									"end": 11806,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 11800,
									"end": 11815,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 11797,
									"end": 11798,
									"name": "PUSH",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 11793,
									"end": 11816,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 11753,
									"end": 11922,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 11753,
									"end": 11922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11753,
									"end": 11922,
									"name": "tag",
									"source": 20,
									"value": "235"
								},
								{
									"begin": 11753,
									"end": 11922,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11730,
									"end": 11735,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 11709,
									"end": 11936,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 11700,
									"end": 11936,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 11700,
									"end": 11936,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11668,
									"end": 11946,
									"name": "tag",
									"source": 20,
									"value": "234"
								},
								{
									"begin": 11668,
									"end": 11946,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11449,
									"end": 11953,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11449,
									"end": 11953,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11359,
									"end": 11953,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11359,
									"end": 11953,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11359,
									"end": 11953,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11359,
									"end": 11953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11959,
									"end": 12150,
									"name": "tag",
									"source": 20,
									"value": "52"
								},
								{
									"begin": 11959,
									"end": 12150,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11999,
									"end": 12002,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12018,
									"end": 12038,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "237"
								},
								{
									"begin": 12036,
									"end": 12037,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12018,
									"end": 12038,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 12018,
									"end": 12038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12018,
									"end": 12038,
									"name": "tag",
									"source": 20,
									"value": "237"
								},
								{
									"begin": 12018,
									"end": 12038,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12013,
									"end": 12038,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 12013,
									"end": 12038,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12052,
									"end": 12072,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "238"
								},
								{
									"begin": 12070,
									"end": 12071,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12052,
									"end": 12072,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 12052,
									"end": 12072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12052,
									"end": 12072,
									"name": "tag",
									"source": 20,
									"value": "238"
								},
								{
									"begin": 12052,
									"end": 12072,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12047,
									"end": 12072,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 12047,
									"end": 12072,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12095,
									"end": 12096,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12092,
									"end": 12093,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12088,
									"end": 12097,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12081,
									"end": 12097,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 12081,
									"end": 12097,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12116,
									"end": 12119,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 12113,
									"end": 12114,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12110,
									"end": 12120,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 12107,
									"end": 12143,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 12107,
									"end": 12143,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "239"
								},
								{
									"begin": 12107,
									"end": 12143,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 12123,
									"end": 12141,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "240"
								},
								{
									"begin": 12123,
									"end": 12141,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 12123,
									"end": 12141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12123,
									"end": 12141,
									"name": "tag",
									"source": 20,
									"value": "240"
								},
								{
									"begin": 12123,
									"end": 12141,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12107,
									"end": 12143,
									"name": "tag",
									"source": 20,
									"value": "239"
								},
								{
									"begin": 12107,
									"end": 12143,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11959,
									"end": 12150,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 11959,
									"end": 12150,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11959,
									"end": 12150,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11959,
									"end": 12150,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11959,
									"end": 12150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12156,
									"end": 12598,
									"name": "tag",
									"source": 20,
									"value": "56"
								},
								{
									"begin": 12156,
									"end": 12598,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12305,
									"end": 12309,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12343,
									"end": 12345,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 12332,
									"end": 12341,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12328,
									"end": 12346,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12320,
									"end": 12346,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 12320,
									"end": 12346,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12356,
									"end": 12427,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "242"
								},
								{
									"begin": 12424,
									"end": 12425,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12413,
									"end": 12422,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12409,
									"end": 12426,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12400,
									"end": 12406,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 12356,
									"end": 12427,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "91"
								},
								{
									"begin": 12356,
									"end": 12427,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12356,
									"end": 12427,
									"name": "tag",
									"source": 20,
									"value": "242"
								},
								{
									"begin": 12356,
									"end": 12427,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12437,
									"end": 12509,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "243"
								},
								{
									"begin": 12505,
									"end": 12507,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 12494,
									"end": 12503,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12490,
									"end": 12508,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12481,
									"end": 12487,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 12437,
									"end": 12509,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "88"
								},
								{
									"begin": 12437,
									"end": 12509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12437,
									"end": 12509,
									"name": "tag",
									"source": 20,
									"value": "243"
								},
								{
									"begin": 12437,
									"end": 12509,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12519,
									"end": 12591,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "244"
								},
								{
									"begin": 12587,
									"end": 12589,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 12576,
									"end": 12585,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12572,
									"end": 12590,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12563,
									"end": 12569,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 12519,
									"end": 12591,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "88"
								},
								{
									"begin": 12519,
									"end": 12591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12519,
									"end": 12591,
									"name": "tag",
									"source": 20,
									"value": "244"
								},
								{
									"begin": 12519,
									"end": 12591,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12156,
									"end": 12598,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 12156,
									"end": 12598,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 12156,
									"end": 12598,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12156,
									"end": 12598,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12156,
									"end": 12598,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12156,
									"end": 12598,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12156,
									"end": 12598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12604,
									"end": 12826,
									"name": "tag",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 12604,
									"end": 12826,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12697,
									"end": 12701,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12735,
									"end": 12737,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 12724,
									"end": 12733,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12720,
									"end": 12738,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12712,
									"end": 12738,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 12712,
									"end": 12738,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12748,
									"end": 12819,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "246"
								},
								{
									"begin": 12816,
									"end": 12817,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12805,
									"end": 12814,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12801,
									"end": 12818,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12792,
									"end": 12798,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 12748,
									"end": 12819,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "88"
								},
								{
									"begin": 12748,
									"end": 12819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12748,
									"end": 12819,
									"name": "tag",
									"source": 20,
									"value": "246"
								},
								{
									"begin": 12748,
									"end": 12819,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12604,
									"end": 12826,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 12604,
									"end": 12826,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 12604,
									"end": 12826,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12604,
									"end": 12826,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12604,
									"end": 12826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "C0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "E0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "140"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2286"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2283"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2280"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2278"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2276"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2274"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2272"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 1172,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc766e1cd7cc7e7b13d472c07fd63666ce17a31b5a5380f9252d26235fc154b164736f6c63430008190033",
									".code": [
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "95D89B41"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "95D89B41"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "A9059CBB"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "D505ACCF"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "DD62ED3E"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "tag",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "7ECEBE00"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "84B0196E"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "tag",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "23B872DD"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "23B872DD"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "2E0F2625"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "313CE567"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "3644E515"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "tag",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "6FDDE03"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "95EA7B3"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "18160DDD"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "tag",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 1172,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 513,
											"end": 548,
											"name": "tag",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 513,
											"end": 548,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 513,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 513,
											"end": 548,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 548,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 513,
											"end": 548,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 513,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "tag",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 513,
											"end": 548,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 548,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "tag",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "66"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 724,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "tag",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "68"
										},
										{
											"begin": 724,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "tag",
											"source": 19,
											"value": "66"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "29"
										},
										{
											"begin": 724,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "tag",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 513,
											"end": 548,
											"name": "tag",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 548,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 513,
											"end": 548,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 513,
											"end": 548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2741,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2523,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 5668,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "PUSH",
											"source": 14,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "tag",
											"source": 19,
											"value": "68"
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 795,
											"end": 807,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 841,
											"end": 843,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 845,
											"end": 851,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 819,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 819,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 819,
											"end": 852,
											"name": "tag",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 819,
											"end": 852,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 862,
											"end": 873,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 928,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 914,
											"end": 929,
											"name": "EXTCODESIZE",
											"source": 19
										},
										{
											"begin": 906,
											"end": 929,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 906,
											"end": 929,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 959,
											"end": 960,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 956,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 952,
											"end": 960,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 952,
											"end": 960,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 952,
											"end": 960,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 949,
											"end": 1140,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 949,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 949,
											"end": 1140,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 976,
											"end": 983,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1018,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1018,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1018,
											"name": "PUSH",
											"source": 19,
											"value": "24A756D1"
										},
										{
											"begin": 1019,
											"end": 1029,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1031,
											"end": 1037,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "124"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "125"
										},
										{
											"begin": 986,
											"end": 1038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "tag",
											"source": 19,
											"value": "124"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "127"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "tag",
											"source": 19,
											"value": "127"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 986,
											"end": 1038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "tag",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 986,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 976,
											"end": 1038,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 976,
											"end": 1038,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1058,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 1052,
											"end": 1130,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "PUSH",
											"source": 19,
											"value": "90D52E8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1085,
											"end": 1115,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1130,
											"name": "tag",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 1052,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 962,
											"end": 1140,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 949,
											"end": 1140,
											"name": "tag",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 949,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1159,
											"end": 1163,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1149,
											"end": 1163,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1149,
											"end": 1163,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 809,
											"end": 1170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 724,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 1898,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 1909,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1964,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1932,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1117,
											"name": "PUSH",
											"source": 4,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2066,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2068,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2094,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2017,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2122,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2192,
											"end": 2196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2178,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2292,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2258,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2323,
											"end": 2328,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2337,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2314,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2276"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3970,
											"end": 3984,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2274"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2272"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 4067,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 4067,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 538,
											"end": 645,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 538,
											"end": 645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 598,
											"end": 605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 617,
											"end": 638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 617,
											"end": 638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 538,
											"end": 645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2283"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6021,
											"end": 6147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2286"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 819,
											"end": 826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1134,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 5053,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 5020,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 6967,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7021,
											"end": 7029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 7002,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2174,
											"name": "PUSH",
											"source": 14,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2278"
										},
										{
											"begin": 4239,
											"end": 4253,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2280"
										},
										{
											"begin": 4255,
											"end": 4268,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 4204,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4113,
											"end": 4292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3446,
											"end": 3460,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3585,
											"end": 3595,
											"name": "PUSH",
											"source": 15,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3580,
											"end": 3583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3632,
											"end": 3647,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3620,
											"end": 3623,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3684,
											"end": 3694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3524,
											"end": 3748,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5289,
											"end": 5296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 13,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6457,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7586,
											"end": 7594,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 7550,
											"end": 7596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7702,
											"end": 7710,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 13,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 7679,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2300,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 20,
											"value": "261"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 20
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 20,
											"value": "264"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 20,
											"value": "265"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "261"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "308"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 20,
											"value": "308"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "264"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "312"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "265"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 20,
											"value": "312"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "318"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 20,
											"value": "318"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 20,
											"value": "271"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "321"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 20,
											"value": "321"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "271"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "327"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 20,
											"value": "327"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "331"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "332"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 20,
											"value": "332"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 20,
											"value": "331"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "333"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 20,
											"value": "333"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "334"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 20,
											"value": "334"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 20,
											"value": "277"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "337"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 20,
											"value": "337"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "277"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "343"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 20,
											"value": "343"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "tag",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4783,
											"end": 4790,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4817,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4746,
											"end": 4823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "tag",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 4934,
											"end": 4939,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 4916,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "tag",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4911,
											"end": 4914,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4904,
											"end": 4941,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4829,
											"end": 4947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "tag",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5046,
											"end": 5050,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5086,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 5165,
											"end": 5166,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5150,
											"end": 5167,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5141,
											"end": 5147,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 5097,
											"end": 5168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "tag",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4953,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "tag",
											"source": 20,
											"value": "52"
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5291,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5268,
											"end": 5275,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5264,
											"end": 5287,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5260,
											"end": 5292,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "362"
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 5295,
											"end": 5374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "tag",
											"source": 20,
											"value": "362"
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "tag",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5415,
											"end": 5416,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 5485,
											"end": 5492,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5476,
											"end": 5482,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5465,
											"end": 5474,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5461,
											"end": 5483,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 5440,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "tag",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5430,
											"end": 5493,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5430,
											"end": 5493,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5386,
											"end": 5503,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5181,
											"end": 5510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "tag",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5552,
											"end": 5559,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5658,
											"name": "PUSH",
											"source": 20,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5585,
											"end": 5590,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5581,
											"end": 5659,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5570,
											"end": 5659,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5570,
											"end": 5659,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5516,
											"end": 5665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "tag",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 5773,
											"end": 5778,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 5756,
											"end": 5779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "tag",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5751,
											"end": 5754,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5744,
											"end": 5780,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5671,
											"end": 5786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "tag",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 5897,
											"end": 5902,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 5879,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "tag",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5874,
											"end": 5877,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5867,
											"end": 5904,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5792,
											"end": 5910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "tag",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5983,
											"end": 5989,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6022,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6001,
											"end": 6023,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6001,
											"end": 6023,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5916,
											"end": 6030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "tag",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6135,
											"end": 6146,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6175,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6207,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6200,
											"end": 6214,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6185,
											"end": 6214,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6185,
											"end": 6214,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6036,
											"end": 6220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "tag",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6319,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6344,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6337,
											"end": 6351,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6329,
											"end": 6351,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6329,
											"end": 6351,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6226,
											"end": 6358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "tag",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 6459,
											"end": 6464,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 6441,
											"end": 6465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "tag",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6436,
											"end": 6439,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6429,
											"end": 6466,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6364,
											"end": 6472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "tag",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6547,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 6610,
											"end": 6613,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6602,
											"end": 6608,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 6568,
											"end": 6614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "tag",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6644,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6637,
											"end": 6651,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6623,
											"end": 6651,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6623,
											"end": 6651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6478,
											"end": 6657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "tag",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6733,
											"end": 6737,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6769,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6756,
											"end": 6770,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6663,
											"end": 6776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "tag",
											"source": 20,
											"value": "292"
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "378"
										},
										{
											"begin": 7008,
											"end": 7013,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 6960,
											"end": 7014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "tag",
											"source": 20,
											"value": "378"
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 7030,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "tag",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7023,
											"end": 7116,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7023,
											"end": 7116,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 7190,
											"end": 7195,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 7140,
											"end": 7196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "tag",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7219,
											"end": 7226,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7250,
											"end": 7251,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "tag",
											"source": 20,
											"value": "381"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7260,
											"end": 7266,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7257,
											"end": 7258,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7254,
											"end": 7267,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7330,
											"end": 7343,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 7422,
											"end": 7425,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 7407,
											"end": 7420,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 7363,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "tag",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7356,
											"end": 7426,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 7356,
											"end": 7426,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 7502,
											"end": 7508,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 7449,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "tag",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7439,
											"end": 7509,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7439,
											"end": 7509,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7295,
											"end": 7519,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7270,
											"end": 7284,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7270,
											"end": 7284,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "381"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "tag",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7239,
											"end": 7253,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7535,
											"end": 7538,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7528,
											"end": 7538,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7528,
											"end": 7538,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6936,
											"end": 7544,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6936,
											"end": 7544,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6936,
											"end": 7544,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6812,
											"end": 7544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "tag",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7899,
											"end": 7903,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7940,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 7926,
											"end": 7935,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7922,
											"end": 7941,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7914,
											"end": 7941,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7914,
											"end": 7941,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 8017,
											"end": 8018,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8015,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 7951,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "tag",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8067,
											"end": 8076,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8061,
											"end": 8065,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8057,
											"end": 8077,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8159,
											"end": 8165,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "265"
										},
										{
											"begin": 8095,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "tag",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8087,
											"end": 8173,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8087,
											"end": 8173,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8220,
											"end": 8229,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8214,
											"end": 8218,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8210,
											"end": 8230,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8205,
											"end": 8207,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8194,
											"end": 8203,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8190,
											"end": 8208,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8183,
											"end": 8231,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8312,
											"end": 8318,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "265"
										},
										{
											"begin": 8248,
											"end": 8326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "tag",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8240,
											"end": 8326,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8240,
											"end": 8326,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 8404,
											"end": 8406,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8393,
											"end": 8402,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 8336,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "tag",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 8486,
											"end": 8489,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 8475,
											"end": 8484,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8471,
											"end": 8490,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8462,
											"end": 8468,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 8418,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "tag",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 8569,
											"end": 8572,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 8558,
											"end": 8567,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8554,
											"end": 8573,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8545,
											"end": 8551,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 8501,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "tag",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8612,
											"end": 8632,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8606,
											"end": 8609,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 8595,
											"end": 8604,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8591,
											"end": 8610,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8584,
											"end": 8633,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 8753,
											"end": 8757,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "292"
										},
										{
											"begin": 8650,
											"end": 8758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "tag",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8642,
											"end": 8758,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8642,
											"end": 8758,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "SWAP9",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7550,
											"end": 8765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8771,
											"end": 8889,
											"name": "tag",
											"source": 20,
											"value": "293"
										},
										{
											"begin": 8771,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8842,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 8858,
											"end": 8863,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8842,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 8842,
											"end": 8864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8842,
											"end": 8864,
											"name": "tag",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 8842,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8832,
											"end": 8865,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 8822,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 8822,
											"end": 8883,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8879,
											"end": 8880,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8822,
											"end": 8883,
											"name": "tag",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 8822,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8771,
											"end": 8889,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8771,
											"end": 8889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8895,
											"end": 9030,
											"name": "tag",
											"source": 20,
											"value": "294"
										},
										{
											"begin": 8895,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8939,
											"end": 8944,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8983,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8964,
											"end": 8984,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 8955,
											"end": 8984,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8955,
											"end": 8984,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8993,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "398"
										},
										{
											"begin": 9018,
											"end": 9023,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8993,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "293"
										},
										{
											"begin": 8993,
											"end": 9024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8993,
											"end": 9024,
											"name": "tag",
											"source": 20,
											"value": "398"
										},
										{
											"begin": 8993,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8895,
											"end": 9030,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8895,
											"end": 9030,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8895,
											"end": 9030,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8895,
											"end": 9030,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8895,
											"end": 9030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9036,
											"end": 9158,
											"name": "tag",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 9036,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9109,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "400"
										},
										{
											"begin": 9127,
											"end": 9132,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9109,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 9109,
											"end": 9133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9109,
											"end": 9133,
											"name": "tag",
											"source": 20,
											"value": "400"
										},
										{
											"begin": 9109,
											"end": 9133,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9102,
											"end": 9107,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9099,
											"end": 9134,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 9089,
											"end": 9152,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 9089,
											"end": 9152,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9148,
											"end": 9149,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9146,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9138,
											"end": 9150,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9089,
											"end": 9152,
											"name": "tag",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 9089,
											"end": 9152,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9036,
											"end": 9158,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9036,
											"end": 9158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9164,
											"end": 9303,
											"name": "tag",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 9164,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9210,
											"end": 9215,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9248,
											"end": 9254,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9235,
											"end": 9255,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9226,
											"end": 9255,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9226,
											"end": 9255,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9264,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 9291,
											"end": 9296,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9264,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 9264,
											"end": 9297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9264,
											"end": 9297,
											"name": "tag",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 9264,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9164,
											"end": 9303,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9164,
											"end": 9303,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9164,
											"end": 9303,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9164,
											"end": 9303,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9164,
											"end": 9303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "tag",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9420,
											"end": 9426,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9434,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9436,
											"end": 9442,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9444,
											"end": 9450,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9452,
											"end": 9458,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9460,
											"end": 9466,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9520,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 9505,
											"end": 9514,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 9496,
											"end": 9503,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 9492,
											"end": 9515,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 9488,
											"end": 9521,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 9485,
											"end": 9605,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9485,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "405"
										},
										{
											"begin": 9485,
											"end": 9605,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9524,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 9524,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 9524,
											"end": 9603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9524,
											"end": 9603,
											"name": "tag",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 9524,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9485,
											"end": 9605,
											"name": "tag",
											"source": 20,
											"value": "405"
										},
										{
											"begin": 9485,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9644,
											"end": 9645,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9669,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 9714,
											"end": 9721,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 9705,
											"end": 9711,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9694,
											"end": 9703,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 9690,
											"end": 9712,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9669,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 9669,
											"end": 9722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9669,
											"end": 9722,
											"name": "tag",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 9669,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9659,
											"end": 9722,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 9659,
											"end": 9722,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9615,
											"end": 9732,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9771,
											"end": 9773,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 9842,
											"end": 9849,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 9833,
											"end": 9839,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9822,
											"end": 9831,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 9818,
											"end": 9840,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9797,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 9797,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9797,
											"end": 9850,
											"name": "tag",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 9797,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9787,
											"end": 9850,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 9787,
											"end": 9850,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9742,
											"end": 9860,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9899,
											"end": 9901,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9925,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 9970,
											"end": 9977,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9950,
											"end": 9959,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 9946,
											"end": 9968,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9925,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 9925,
											"end": 9978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9925,
											"end": 9978,
											"name": "tag",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 9925,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9915,
											"end": 9978,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 9915,
											"end": 9978,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9870,
											"end": 9988,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10027,
											"end": 10029,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 10053,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "410"
										},
										{
											"begin": 10098,
											"end": 10105,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10089,
											"end": 10095,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10078,
											"end": 10087,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10074,
											"end": 10096,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10053,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 10053,
											"end": 10106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10053,
											"end": 10106,
											"name": "tag",
											"source": 20,
											"value": "410"
										},
										{
											"begin": 10053,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10043,
											"end": 10106,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 10043,
											"end": 10106,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9998,
											"end": 10116,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10158,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 10182,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "411"
										},
										{
											"begin": 10225,
											"end": 10232,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10216,
											"end": 10222,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10205,
											"end": 10214,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10201,
											"end": 10223,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10182,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "294"
										},
										{
											"begin": 10182,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10182,
											"end": 10233,
											"name": "tag",
											"source": 20,
											"value": "411"
										},
										{
											"begin": 10182,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10172,
											"end": 10233,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 10172,
											"end": 10233,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10126,
											"end": 10243,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10282,
											"end": 10285,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 10309,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 10354,
											"end": 10361,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10345,
											"end": 10351,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10334,
											"end": 10343,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10330,
											"end": 10352,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10309,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 10309,
											"end": 10362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10309,
											"end": 10362,
											"name": "tag",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 10309,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10299,
											"end": 10362,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10299,
											"end": 10362,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10253,
											"end": 10372,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10411,
											"end": 10414,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "413"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 10438,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 20,
											"value": "413"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10382,
											"end": 10501,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "SWAP9",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9309,
											"end": 10508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10514,
											"end": 10988,
											"name": "tag",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 10514,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10582,
											"end": 10588,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10590,
											"end": 10596,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10639,
											"end": 10641,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10636,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10614,
											"end": 10637,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10610,
											"end": 10642,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "415"
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10645,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "416"
										},
										{
											"begin": 10645,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 10645,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10645,
											"end": 10724,
											"name": "tag",
											"source": 20,
											"value": "416"
										},
										{
											"begin": 10645,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "tag",
											"source": 20,
											"value": "415"
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10765,
											"end": 10766,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10790,
											"end": 10843,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 10835,
											"end": 10842,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10826,
											"end": 10832,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10815,
											"end": 10824,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 10811,
											"end": 10833,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10790,
											"end": 10843,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 10790,
											"end": 10843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10790,
											"end": 10843,
											"name": "tag",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 10790,
											"end": 10843,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10780,
											"end": 10843,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10780,
											"end": 10843,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10736,
											"end": 10853,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10892,
											"end": 10894,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10918,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "418"
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10954,
											"end": 10960,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10943,
											"end": 10952,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 10939,
											"end": 10961,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10918,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 10918,
											"end": 10971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10918,
											"end": 10971,
											"name": "tag",
											"source": 20,
											"value": "418"
										},
										{
											"begin": 10918,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10908,
											"end": 10971,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10908,
											"end": 10971,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10863,
											"end": 10981,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10514,
											"end": 10988,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10514,
											"end": 10988,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10514,
											"end": 10988,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10514,
											"end": 10988,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10514,
											"end": 10988,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10514,
											"end": 10988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10994,
											"end": 11174,
											"name": "tag",
											"source": 20,
											"value": "297"
										},
										{
											"begin": 10994,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11042,
											"end": 11119,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11039,
											"end": 11040,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 11120,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11139,
											"end": 11143,
											"name": "PUSH",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 11136,
											"end": 11137,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11129,
											"end": 11144,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11163,
											"end": 11167,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 11160,
											"end": 11161,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11168,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 11180,
											"end": 11500,
											"name": "tag",
											"source": 20,
											"value": "81"
										},
										{
											"begin": 11180,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11224,
											"end": 11230,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11261,
											"end": 11262,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 11255,
											"end": 11259,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11251,
											"end": 11263,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 11241,
											"end": 11263,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11241,
											"end": 11263,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11308,
											"end": 11309,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 11302,
											"end": 11306,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11298,
											"end": 11310,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 11319,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 11319,
											"end": 11400,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11385,
											"end": 11389,
											"name": "PUSH",
											"source": 20,
											"value": "7F"
										},
										{
											"begin": 11377,
											"end": 11383,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11373,
											"end": 11390,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11363,
											"end": 11390,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11363,
											"end": 11390,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11319,
											"end": 11400,
											"name": "tag",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 11319,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11447,
											"end": 11449,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11439,
											"end": 11445,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11436,
											"end": 11450,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 11416,
											"end": 11434,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11413,
											"end": 11451,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 11410,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 11410,
											"end": 11494,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11466,
											"end": 11484,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 11466,
											"end": 11484,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "297"
										},
										{
											"begin": 11466,
											"end": 11484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11466,
											"end": 11484,
											"name": "tag",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 11466,
											"end": 11484,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11410,
											"end": 11494,
											"name": "tag",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 11410,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11231,
											"end": 11500,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11180,
											"end": 11500,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11180,
											"end": 11500,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11180,
											"end": 11500,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11180,
											"end": 11500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11506,
											"end": 11686,
											"name": "tag",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 11506,
											"end": 11686,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11554,
											"end": 11631,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11551,
											"end": 11552,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11544,
											"end": 11632,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11651,
											"end": 11655,
											"name": "PUSH",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 11648,
											"end": 11649,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11641,
											"end": 11656,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11675,
											"end": 11679,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 11672,
											"end": 11673,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11665,
											"end": 11680,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 11692,
											"end": 12024,
											"name": "tag",
											"source": 20,
											"value": "125"
										},
										{
											"begin": 11692,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11813,
											"end": 11817,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11851,
											"end": 11853,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11840,
											"end": 11849,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11836,
											"end": 11854,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11828,
											"end": 11854,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11828,
											"end": 11854,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11864,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 11932,
											"end": 11933,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11921,
											"end": 11930,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11917,
											"end": 11934,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11908,
											"end": 11914,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11864,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 11864,
											"end": 11935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11864,
											"end": 11935,
											"name": "tag",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 11864,
											"end": 11935,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11945,
											"end": 12017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 12013,
											"end": 12015,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12002,
											"end": 12011,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11998,
											"end": 12016,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11989,
											"end": 11995,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11945,
											"end": 12017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 11945,
											"end": 12017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11945,
											"end": 12017,
											"name": "tag",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 11945,
											"end": 12017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11692,
											"end": 12024,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 11692,
											"end": 12024,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11692,
											"end": 12024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11692,
											"end": 12024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11692,
											"end": 12024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11692,
											"end": 12024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12030,
											"end": 12146,
											"name": "tag",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 12030,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 12115,
											"end": 12120,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 12100,
											"end": 12121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "tag",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 12100,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12093,
											"end": 12098,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12090,
											"end": 12122,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 12080,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 12080,
											"end": 12140,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12136,
											"end": 12137,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12134,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 12126,
											"end": 12138,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 12080,
											"end": 12140,
											"name": "tag",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 12080,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12030,
											"end": 12146,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12030,
											"end": 12146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12152,
											"end": 12289,
											"name": "tag",
											"source": 20,
											"value": "299"
										},
										{
											"begin": 12152,
											"end": 12289,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12206,
											"end": 12211,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12237,
											"end": 12243,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12231,
											"end": 12244,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 12222,
											"end": 12244,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12222,
											"end": 12244,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12253,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 12277,
											"end": 12282,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12253,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 12253,
											"end": 12283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12253,
											"end": 12283,
											"name": "tag",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 12253,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12152,
											"end": 12289,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12152,
											"end": 12289,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12152,
											"end": 12289,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12152,
											"end": 12289,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12152,
											"end": 12289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12295,
											"end": 12640,
											"name": "tag",
											"source": 20,
											"value": "129"
										},
										{
											"begin": 12295,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12368,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12411,
											"end": 12413,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12399,
											"end": 12408,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12390,
											"end": 12397,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 12386,
											"end": 12409,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 12382,
											"end": 12414,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 12379,
											"end": 12498,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 12379,
											"end": 12498,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 12379,
											"end": 12498,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12417,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 12417,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 12417,
											"end": 12496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12417,
											"end": 12496,
											"name": "tag",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 12417,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12379,
											"end": 12498,
											"name": "tag",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 12379,
											"end": 12498,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12537,
											"end": 12538,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12562,
											"end": 12623,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 12615,
											"end": 12622,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 12606,
											"end": 12612,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12595,
											"end": 12604,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 12591,
											"end": 12613,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12562,
											"end": 12623,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "299"
										},
										{
											"begin": 12562,
											"end": 12623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12562,
											"end": 12623,
											"name": "tag",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 12562,
											"end": 12623,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12552,
											"end": 12623,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12552,
											"end": 12623,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12508,
											"end": 12633,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12295,
											"end": 12640,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12295,
											"end": 12640,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12295,
											"end": 12640,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12295,
											"end": 12640,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12295,
											"end": 12640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "tag",
											"source": 20,
											"value": "137"
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12917,
											"end": 12920,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 12906,
											"end": 12915,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12902,
											"end": 12921,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12894,
											"end": 12921,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12894,
											"end": 12921,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12931,
											"end": 13002,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "438"
										},
										{
											"begin": 12999,
											"end": 13000,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12988,
											"end": 12997,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12984,
											"end": 13001,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12975,
											"end": 12981,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 12931,
											"end": 13002,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 12931,
											"end": 13002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12931,
											"end": 13002,
											"name": "tag",
											"source": 20,
											"value": "438"
										},
										{
											"begin": 12931,
											"end": 13002,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13012,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 13080,
											"end": 13082,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13069,
											"end": 13078,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13065,
											"end": 13083,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13056,
											"end": 13062,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 13012,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 13012,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13012,
											"end": 13084,
											"name": "tag",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 13012,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13094,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13151,
											"end": 13160,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13147,
											"end": 13165,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13138,
											"end": 13144,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 13094,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 13094,
											"end": 13166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13094,
											"end": 13166,
											"name": "tag",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 13094,
											"end": 13166,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13176,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "441"
										},
										{
											"begin": 13244,
											"end": 13246,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 13233,
											"end": 13242,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13220,
											"end": 13226,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 13176,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 13176,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13176,
											"end": 13248,
											"name": "tag",
											"source": 20,
											"value": "441"
										},
										{
											"begin": 13176,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13258,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 13326,
											"end": 13329,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 13315,
											"end": 13324,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13311,
											"end": 13330,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13302,
											"end": 13308,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13258,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 13258,
											"end": 13331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13258,
											"end": 13331,
											"name": "tag",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 13258,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13341,
											"end": 13414,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "443"
										},
										{
											"begin": 13409,
											"end": 13412,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13394,
											"end": 13413,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13385,
											"end": 13391,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13341,
											"end": 13414,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 13341,
											"end": 13414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13341,
											"end": 13414,
											"name": "tag",
											"source": 20,
											"value": "443"
										},
										{
											"begin": 13341,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12646,
											"end": 13421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13427,
											"end": 13759,
											"name": "tag",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 13427,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13548,
											"end": 13552,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13586,
											"end": 13588,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13575,
											"end": 13584,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13571,
											"end": 13589,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13563,
											"end": 13589,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13563,
											"end": 13589,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13599,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "445"
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13656,
											"end": 13665,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13652,
											"end": 13669,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13643,
											"end": 13649,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13599,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 13599,
											"end": 13670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13599,
											"end": 13670,
											"name": "tag",
											"source": 20,
											"value": "445"
										},
										{
											"begin": 13599,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13680,
											"end": 13752,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "446"
										},
										{
											"begin": 13748,
											"end": 13750,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13737,
											"end": 13746,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13733,
											"end": 13751,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13724,
											"end": 13730,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13680,
											"end": 13752,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 13680,
											"end": 13752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13680,
											"end": 13752,
											"name": "tag",
											"source": 20,
											"value": "446"
										},
										{
											"begin": 13680,
											"end": 13752,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13427,
											"end": 13759,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 13427,
											"end": 13759,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13427,
											"end": 13759,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13427,
											"end": 13759,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13427,
											"end": 13759,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13427,
											"end": 13759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13765,
											"end": 14207,
											"name": "tag",
											"source": 20,
											"value": "156"
										},
										{
											"begin": 13765,
											"end": 14207,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13914,
											"end": 13918,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13952,
											"end": 13954,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 13941,
											"end": 13950,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13937,
											"end": 13955,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13929,
											"end": 13955,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13929,
											"end": 13955,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13965,
											"end": 14036,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 14033,
											"end": 14034,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14022,
											"end": 14031,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14018,
											"end": 14035,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14009,
											"end": 14015,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 13965,
											"end": 14036,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 13965,
											"end": 14036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13965,
											"end": 14036,
											"name": "tag",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 13965,
											"end": 14036,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14046,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "449"
										},
										{
											"begin": 14114,
											"end": 14116,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14103,
											"end": 14112,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14099,
											"end": 14117,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 14046,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 14046,
											"end": 14118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14046,
											"end": 14118,
											"name": "tag",
											"source": 20,
											"value": "449"
										},
										{
											"begin": 14046,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14128,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 14196,
											"end": 14198,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 14185,
											"end": 14194,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14181,
											"end": 14199,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14172,
											"end": 14178,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 14128,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 14128,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14128,
											"end": 14200,
											"name": "tag",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 14128,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13765,
											"end": 14207,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 13765,
											"end": 14207,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 13765,
											"end": 14207,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13765,
											"end": 14207,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13765,
											"end": 14207,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13765,
											"end": 14207,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13765,
											"end": 14207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14213,
											"end": 14435,
											"name": "tag",
											"source": 20,
											"value": "161"
										},
										{
											"begin": 14213,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14306,
											"end": 14310,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14344,
											"end": 14346,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14333,
											"end": 14342,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14329,
											"end": 14347,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14321,
											"end": 14347,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14321,
											"end": 14347,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14357,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 14425,
											"end": 14426,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14414,
											"end": 14423,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14410,
											"end": 14427,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14401,
											"end": 14407,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 14357,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 14357,
											"end": 14428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14357,
											"end": 14428,
											"name": "tag",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 14357,
											"end": 14428,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14213,
											"end": 14435,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14213,
											"end": 14435,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14213,
											"end": 14435,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14213,
											"end": 14435,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14213,
											"end": 14435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14441,
											"end": 14621,
											"name": "tag",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 14441,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14489,
											"end": 14566,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14486,
											"end": 14487,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14479,
											"end": 14567,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14586,
											"end": 14590,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 14583,
											"end": 14584,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14610,
											"end": 14614,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 14607,
											"end": 14608,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14600,
											"end": 14615,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 14627,
											"end": 14818,
											"name": "tag",
											"source": 20,
											"value": "198"
										},
										{
											"begin": 14627,
											"end": 14818,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14667,
											"end": 14670,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "455"
										},
										{
											"begin": 14704,
											"end": 14705,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 14686,
											"end": 14706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "tag",
											"source": 20,
											"value": "455"
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14681,
											"end": 14706,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14681,
											"end": 14706,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14720,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "456"
										},
										{
											"begin": 14738,
											"end": 14739,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14720,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 14720,
											"end": 14740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14720,
											"end": 14740,
											"name": "tag",
											"source": 20,
											"value": "456"
										},
										{
											"begin": 14720,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14715,
											"end": 14740,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14715,
											"end": 14740,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14763,
											"end": 14764,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14760,
											"end": 14761,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14756,
											"end": 14765,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14749,
											"end": 14765,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14749,
											"end": 14765,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14784,
											"end": 14787,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 14781,
											"end": 14782,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14778,
											"end": 14788,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 14775,
											"end": 14811,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 14775,
											"end": 14811,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 14775,
											"end": 14811,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "458"
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 14791,
											"end": 14809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "tag",
											"source": 20,
											"value": "458"
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14775,
											"end": 14811,
											"name": "tag",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 14775,
											"end": 14811,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14627,
											"end": 14818,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14627,
											"end": 14818,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14627,
											"end": 14818,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14627,
											"end": 14818,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14627,
											"end": 14818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "tag",
											"source": 20,
											"value": "207"
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15029,
											"end": 15033,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15067,
											"end": 15070,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 15056,
											"end": 15065,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15044,
											"end": 15071,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15044,
											"end": 15071,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15081,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 15149,
											"end": 15150,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15138,
											"end": 15147,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15134,
											"end": 15151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15125,
											"end": 15131,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 15081,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 15081,
											"end": 15152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15081,
											"end": 15152,
											"name": "tag",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 15081,
											"end": 15152,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15162,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "461"
										},
										{
											"begin": 15230,
											"end": 15232,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15219,
											"end": 15228,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15215,
											"end": 15233,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15206,
											"end": 15212,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 15162,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 15162,
											"end": 15234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15162,
											"end": 15234,
											"name": "tag",
											"source": 20,
											"value": "461"
										},
										{
											"begin": 15162,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15244,
											"end": 15316,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 15312,
											"end": 15314,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15301,
											"end": 15310,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15297,
											"end": 15315,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15288,
											"end": 15294,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 15244,
											"end": 15316,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 15244,
											"end": 15316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15244,
											"end": 15316,
											"name": "tag",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 15244,
											"end": 15316,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15326,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 15394,
											"end": 15396,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 15383,
											"end": 15392,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15379,
											"end": 15397,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15370,
											"end": 15376,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 15326,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 15326,
											"end": 15398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15326,
											"end": 15398,
											"name": "tag",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 15326,
											"end": 15398,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15408,
											"end": 15481,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "464"
										},
										{
											"begin": 15476,
											"end": 15479,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 15465,
											"end": 15474,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15461,
											"end": 15480,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15452,
											"end": 15458,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15408,
											"end": 15481,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 15408,
											"end": 15481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15408,
											"end": 15481,
											"name": "tag",
											"source": 20,
											"value": "464"
										},
										{
											"begin": 15408,
											"end": 15481,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14824,
											"end": 15488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15494,
											"end": 16039,
											"name": "tag",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 15494,
											"end": 16039,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15667,
											"end": 15671,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15705,
											"end": 15708,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 15694,
											"end": 15703,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15690,
											"end": 15709,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15682,
											"end": 15709,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15682,
											"end": 15709,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15719,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "466"
										},
										{
											"begin": 15787,
											"end": 15788,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15776,
											"end": 15785,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15772,
											"end": 15789,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15763,
											"end": 15769,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 15719,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 15719,
											"end": 15790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15719,
											"end": 15790,
											"name": "tag",
											"source": 20,
											"value": "466"
										},
										{
											"begin": 15719,
											"end": 15790,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15800,
											"end": 15868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 15864,
											"end": 15866,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15853,
											"end": 15862,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15849,
											"end": 15867,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15840,
											"end": 15846,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 15800,
											"end": 15868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 15800,
											"end": 15868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15800,
											"end": 15868,
											"name": "tag",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 15800,
											"end": 15868,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15878,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "468"
										},
										{
											"begin": 15946,
											"end": 15948,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15935,
											"end": 15944,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15931,
											"end": 15949,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15922,
											"end": 15928,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 15878,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 15878,
											"end": 15950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15878,
											"end": 15950,
											"name": "tag",
											"source": 20,
											"value": "468"
										},
										{
											"begin": 15878,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15960,
											"end": 16032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "469"
										},
										{
											"begin": 16028,
											"end": 16030,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 16017,
											"end": 16026,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16013,
											"end": 16031,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16004,
											"end": 16010,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15960,
											"end": 16032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 15960,
											"end": 16032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15960,
											"end": 16032,
											"name": "tag",
											"source": 20,
											"value": "469"
										},
										{
											"begin": 15960,
											"end": 16032,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15494,
											"end": 16039,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 15494,
											"end": 16039,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 15494,
											"end": 16039,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15494,
											"end": 16039,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15494,
											"end": 16039,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15494,
											"end": 16039,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15494,
											"end": 16039,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15494,
											"end": 16039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16045,
											"end": 16225,
											"name": "tag",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 16045,
											"end": 16225,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16093,
											"end": 16170,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16090,
											"end": 16091,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16083,
											"end": 16171,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16190,
											"end": 16194,
											"name": "PUSH",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 16187,
											"end": 16188,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 16180,
											"end": 16195,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16214,
											"end": 16218,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 16211,
											"end": 16212,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16204,
											"end": 16219,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC20Received.sol",
								"src/Pengyi.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DECIMALS()": "2e0f2625",
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MyERC20__TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"transfer(address,uint256)\":{\"notice\":\"method 2\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Pengyi.sol\":\"MyERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ERC20Received.sol\":{\"keccak256\":\"0xbd16574b1ba13d46cabd1b785d03e5d2382681b6cb404662f5830f48017e0b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d874dec8d927b3e8ba417319ca09399f44a522d7fa390b6897a14072cde31ba\",\"dweb:/ipfs/QmW7jyMtPrpJ2QV4mXNG5roUJBef4eywfKRsyZAQJUiSS7\"]},\"src/Pengyi.sol\":{\"keccak256\":\"0x099066555ee7604621396d9307e21dfb9e364d7a61f19923e64d60d5937e1058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2053cb8a758702ad0ce573024035a42db4bd7834e03a56d3f3b698b154d01eb1\",\"dweb:/ipfs/QmUBX61JD7W3hWvo4sNfjTd4nBwLPv1sCRY4FsFya39hKj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "src/Pengyi.sol:MyERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "src/Pengyi.sol:MyERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "src/Pengyi.sol:MyERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "src/Pengyi.sol:MyERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "src/Pengyi.sol:MyERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2288,
								"contract": "src/Pengyi.sol:MyERC20",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2290,
								"contract": "src/Pengyi.sol:MyERC20",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1267,
								"contract": "src/Pengyi.sol:MyERC20",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"transfer(address,uint256)": {
								"notice": "method 2"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "IERC5267",
							"nameLocation": "143:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 4,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"src": "247:28:0"
								},
								{
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 7,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "537:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "569:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "604:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "633:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "672:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "698:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 19,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 20,
													"nodeType": "ArrayTypeName",
													"src": "698:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:0"
									},
									"scope": 24,
									"src": "426:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "133:605:0",
							"usedErrors": [],
							"usedEvents": [
								4
							]
						}
					],
					"src": "107:632:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							161
						],
						"IERC20Errors": [
							66
						],
						"IERC721Errors": [
							114
						]
					},
					"id": 162,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 36,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 41,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 46,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 55,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 60,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 65,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 162,
							"src": "278:1764:1",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 72,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 77,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 86,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 91,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 96,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 103,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 108,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 113,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 162,
							"src": "2186:2092:1",
							"usedErrors": [
								72,
								77,
								86,
								91,
								96,
								103,
								108,
								113
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 126,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 131,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 136,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 143,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 148,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 153,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 160,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 162,
							"src": "4424:2107:1",
							"usedErrors": [
								126,
								131,
								136,
								143,
								148,
								153,
								160
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1253
						],
						"ERC20": [
							676
						],
						"IERC20": [
							754
						],
						"IERC20Errors": [
							66
						],
						"IERC20Metadata": [
							934
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 163,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 755,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 164,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 935,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 166,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 934,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 1254,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 168,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1253,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 162,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 66,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 173,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1253,
										"src": "1428:7:2"
									},
									"id": 174,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 175,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "1437:6:2"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 177,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 934,
										"src": "1445:14:2"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 179,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 66,
										"src": "1461:12:2"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								66,
								934,
								754,
								1253
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 189,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 188,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 193,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 195,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 208,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 676,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										921
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 219,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 218,
												"id": 220,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 676,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										927
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 228,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 227,
												"id": 229,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 676,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										933
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 236,
												"id": 238,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 234,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 676,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 246,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 245,
												"id": 247,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 676,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										711
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 257,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 259,
													"indexExpression": {
														"id": 258,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 260,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 676,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 272,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 274,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 271,
												"id": 284,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 676,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 296,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 298,
														"indexExpression": {
															"id": 297,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 300,
													"indexExpression": {
														"id": 299,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 301,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 676,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										741
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 313,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 315,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 319,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 318,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 312,
												"id": 325,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 676,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										753
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 341,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 338,
												"id": 357,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 676,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 369,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 370,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 382,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 376,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 375,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 381,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 384,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 385,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 391,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 390,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 396,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 676,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 416,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																428
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 428,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 453,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 427,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 432,
															"initialValue": {
																"baseExpression": {
																	"id": 429,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"id": 430,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 433,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 443,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 442,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 437,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 438,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 428,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 439,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 413,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 436,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 36,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 441,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 452,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 444,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 446,
																			"indexExpression": {
																				"id": 445,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 448,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 413,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 451,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 422,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 455,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 473,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 467,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 469,
																			"indexExpression": {
																				"id": 468,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 411,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 472,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 465,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 461,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 464,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 676,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 492,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 498,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 497,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 676,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 537,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 531,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 530,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 536,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 676,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 627,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 676,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 586,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 585,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 591,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 594,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 595,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 608,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 601,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 600,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 606,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 612,
															"indexExpression": {
																"id": 610,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 617,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 576,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 620,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 676,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"arguments": [
														{
															"id": 640,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 645,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 661,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 660,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 657,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 654,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 659,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 671,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 663,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 664,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 665,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 666,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 662,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				567,
																				627
																			],
																			"referencedDeclaration": 627,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 670,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 676,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "1401:9741:2",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 679,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 688,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 697,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 754,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 754,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 754,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 754,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 754,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 754,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 755,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
					"exportedSymbols": {
						"ECDSA": [
							2251
						],
						"EIP712": [
							2478
						],
						"ERC20": [
							676
						],
						"ERC20Permit": [
							908
						],
						"IERC20Permit": [
							970
						],
						"Nonces": [
							1321
						]
					},
					"id": 909,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 971,
							"src": "148:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 757,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 970,
										"src": "156:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 677,
							"src": "197:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 759,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "205:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "../../../utils/cryptography/ECDSA.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 2252,
							"src": "233:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2251,
										"src": "241:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "../../../utils/cryptography/EIP712.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 2479,
							"src": "294:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 763,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2478,
										"src": "302:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Nonces.sol",
							"file": "../../../utils/Nonces.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 1322,
							"src": "357:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 765,
										"name": "Nonces",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1321,
										"src": "365:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 768,
										"name": "ERC20",
										"nameLocations": [
											"929:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "929:5:4"
									},
									"id": 769,
									"nodeType": "InheritanceSpecifier",
									"src": "929:5:4"
								},
								{
									"baseName": {
										"id": 770,
										"name": "IERC20Permit",
										"nameLocations": [
											"936:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 970,
										"src": "936:12:4"
									},
									"id": 771,
									"nodeType": "InheritanceSpecifier",
									"src": "936:12:4"
								},
								{
									"baseName": {
										"id": 772,
										"name": "EIP712",
										"nameLocations": [
											"950:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2478,
										"src": "950:6:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "950:6:4"
								},
								{
									"baseName": {
										"id": 774,
										"name": "Nonces",
										"nameLocations": [
											"958:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1321,
										"src": "958:6:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "958:6:4"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 767,
								"nodeType": "StructuredDocumentation",
								"src": "408:487:4",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 908,
							"linearizedBaseContracts": [
								908,
								1321,
								2478,
								24,
								970,
								676,
								66,
								934,
								754,
								1253
							],
							"name": "ERC20Permit",
							"nameLocation": "914:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 780,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "996:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 908,
									"src": "971:146:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 776,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "971:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 778,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1032:84:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 777,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1022:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 779,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1022:95:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "1124:52:4",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 785,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "1187:23:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1219:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "1211:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:18:4"
									},
									"src": "1181:48:4"
								},
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "1235:45:4",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 792,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "1291:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1320:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1312:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1336:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1328:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:31:4"
									},
									"src": "1285:58:4"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "1624:2:4",
										"statements": []
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "1349:220:4",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 803,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 798,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 795,
													"src": "1613:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1619:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 800,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 797,
												"name": "EIP712",
												"nameLocations": [
													"1606:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2478,
												"src": "1606:6:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1606:17:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1600:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "1586:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 794,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:0:4"
									},
									"scope": 908,
									"src": "1574:52:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "1869:483:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 821,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1883:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1889:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1883:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 823,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1901:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1883:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "1879:97:4",
												"trueBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "1911:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 826,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "1956:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 825,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "1932:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1932:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 828,
															"nodeType": "RevertStatement",
															"src": "1925:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "1994:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "1986:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 831,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1986:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 836,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2028:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 837,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "2045:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 838,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "2052:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 839,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "2061:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 841,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "2078:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 840,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "2068:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2068:16:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 843,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "2086:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 834,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2017:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2021:6:4",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2017:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:78:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 833,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2007:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2007:89:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1986:110:4"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2115:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "2107:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 847,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2107:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"arguments": [
														{
															"id": 850,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2139:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 849,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "2122:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2107:43:4"
											},
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "2169:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "2161:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 853,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2161:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"arguments": [
														{
															"id": 857,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2192:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 858,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "2198:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 859,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "2201:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 860,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "2204:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 855,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "2178:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$2251_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2184:7:4",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2201,
														"src": "2178:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:45:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2220:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 864,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "2230:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2220:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "2216:88:4",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "2237:67:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 867,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "2279:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 868,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "2287:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 866,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "2258:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2258:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "2251:42:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "2323:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "2330:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "2339:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "2314:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "2314:31:4"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "1632:43:4",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1689:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1713:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1705:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1736:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1728:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1784:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1776:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1808:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1802:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 813,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1802:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1827:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1819:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1846:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1838:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:158:4"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:0:4"
									},
									"scope": 908,
									"src": "1680:672:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										963,
										1280
									],
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "2506:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "2536:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 891,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2523:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$908_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2529:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1280,
														"src": "2523:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2523:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 890,
												"id": 895,
												"nodeType": "Return",
												"src": "2516:26:4"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "2358:43:4",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2415:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 887,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 885,
												"name": "IERC20Permit",
												"nameLocations": [
													"2466:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 970,
												"src": "2466:12:4"
											},
											{
												"id": 886,
												"name": "Nonces",
												"nameLocations": [
													"2480:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1321,
												"src": "2480:6:4"
											}
										],
										"src": "2457:30:4"
									},
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2430:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2422:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:15:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2497:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:4"
									},
									"scope": 908,
									"src": "2406:143:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										969
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "2724:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 903,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2374,
														"src": "2741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 902,
												"id": 905,
												"nodeType": "Return",
												"src": "2734:27:4"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "2555:43:4",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2665:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2681:2:4"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2715:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 900,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:9:4"
									},
									"scope": 908,
									"src": "2656:112:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 909,
							"src": "896:1874:4",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65,
								785,
								792,
								1263,
								1335,
								1337,
								1914,
								1919,
								1924
							],
							"usedEvents": [
								4,
								688,
								697
							]
						}
					],
					"src": "122:2649:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						],
						"IERC20Metadata": [
							934
						]
					},
					"id": 935,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 910,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 755,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 911,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 914,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "305:6:5"
									},
									"id": 915,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 913,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 934,
							"linearizedBaseContracts": [
								934,
								754
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 934,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 934,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 933,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 930,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 934,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 935,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							970
						]
					},
					"id": 971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 936,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 937,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:6",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 970,
							"linearizedBaseContracts": [
								970
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:6",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3022:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3045:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3093:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3119:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 947,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3136:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 949,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 951,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:6"
									},
									"scope": 970,
									"src": "2997:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:6",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "3501:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "3539:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:6"
									},
									"scope": 970,
									"src": "3485:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:6",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3791:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 966,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:6"
									},
									"scope": 970,
									"src": "3740:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 971,
							"src": "2113:1689:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1223
						]
					},
					"id": 1224,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 972,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 973,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1223,
							"linearizedBaseContracts": [
								1223
							],
							"name": "Address",
							"nameLocation": "203:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:7",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 978,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "349:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:7"
									},
									"src": "316:50:7"
								},
								{
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 983,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "475:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:7"
									},
									"src": "452:39:7"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:7",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 986,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:7"
									},
									"src": "591:24:7"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "1602:260:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 996,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1223",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1223",
																		"typeString": "library Address"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 999,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "1640:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1009,
												"nodeType": "IfStatement",
												"src": "1612:109:7",
												"trueBody": {
													"id": 1008,
													"nodeType": "Block",
													"src": "1648:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1004,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1223",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1223",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1002,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1001,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1669:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1007,
															"nodeType": "RevertStatement",
															"src": "1662:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1011,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1026,
														"src": "1732:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1010,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1018,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1012,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "1750:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1014,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "1772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:7"
											},
											{
												"condition": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:7",
													"subExpression": {
														"id": 1019,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "1798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"nodeType": "IfStatement",
												"src": "1793:63:7",
												"trueBody": {
													"id": 1024,
													"nodeType": "Block",
													"src": "1807:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1021,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "1828:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1023,
															"nodeType": "RevertStatement",
															"src": "1821:24:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1550:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1577:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:7"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:7"
									},
									"scope": 1223,
									"src": "1531:331:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "2794:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "2833:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "2841:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1037,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "2811:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1042,
												"nodeType": "Return",
												"src": "2804:45:7"
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "2727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "2743:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:7"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "2780:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:7"
									},
									"scope": 1223,
									"src": "2705:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "3293:279:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1058,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1223",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1223",
																		"typeString": "library Address"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1061,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "3331:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1071,
												"nodeType": "IfStatement",
												"src": "3303:108:7",
												"trueBody": {
													"id": 1070,
													"nodeType": "Block",
													"src": "3338:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1066,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1223",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1223",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1064,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1063,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "3359:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1069,
															"nodeType": "RevertStatement",
															"src": "3352:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1073,
													1075
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "3421:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1072,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1075,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "3435:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1074,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1082,
												"initialValue": {
													"arguments": [
														{
															"id": 1080,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "3488:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1076,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "3462:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1078,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "3481:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "3537:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "3545:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1086,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "3554:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1083,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "3510:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1088,
												"nodeType": "Return",
												"src": "3503:62:7"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3211:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3227:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:7"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3279:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:7"
									},
									"scope": 1223,
									"src": "3180:392:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "3811:154:7",
										"statements": [
											{
												"assignments": [
													1101,
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "3822:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1100,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "3836:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1102,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"arguments": [
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3881:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "3863:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1110,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "3930:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3938:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1112,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "3947:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1109,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "3903:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1114,
												"nodeType": "Return",
												"src": "3896:62:7"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "3739:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "3755:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:7"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "3797:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:7"
									},
									"scope": 1223,
									"src": "3711:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "4203:156:7",
										"statements": [
											{
												"assignments": [
													1127,
													1129
												],
												"declarations": [
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "4214:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1126,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "4228:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1128,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1134,
												"initialValue": {
													"arguments": [
														{
															"id": 1132,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "4275:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1130,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4255:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4324:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4332:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1138,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "4341:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1135,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "4297:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1140,
												"nodeType": "Return",
												"src": "4290:62:7"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4136:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4152:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:7"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4189:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:7"
									},
									"scope": 1223,
									"src": "4106:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "4783:424:7",
										"statements": [
											{
												"condition": {
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:7",
													"subExpression": {
														"id": 1154,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "4798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1179,
													"nodeType": "Block",
													"src": "4857:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1161,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "5045:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1165,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "5071:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1176,
															"nodeType": "IfStatement",
															"src": "5041:119:7",
															"trueBody": {
																"id": 1175,
																"nodeType": "Block",
																"src": "5096:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1172,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1145,
																					"src": "5138:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1171,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "5121:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1174,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1177,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "5180:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1153,
															"id": 1178,
															"nodeType": "Return",
															"src": "5173:17:7"
														}
													]
												},
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "4793:408:7",
												"trueBody": {
													"id": 1160,
													"nodeType": "Block",
													"src": "4807:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1157,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "4829:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1156,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "4821:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1159,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4670:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4694:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4716:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:7"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4769:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:7"
									},
									"scope": 1223,
									"src": "4625:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "5509:122:7",
										"statements": [
											{
												"condition": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:7",
													"subExpression": {
														"id": 1192,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "5524:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1201,
													"nodeType": "Block",
													"src": "5583:42:7",
													"statements": [
														{
															"expression": {
																"id": 1199,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "5604:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1191,
															"id": 1200,
															"nodeType": "Return",
															"src": "5597:17:7"
														}
													]
												},
												"id": 1202,
												"nodeType": "IfStatement",
												"src": "5519:106:7",
												"trueBody": {
													"id": 1198,
													"nodeType": "Block",
													"src": "5533:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1195,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "5555:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1194,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "5547:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1197,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5447:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5495:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1189,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:7"
									},
									"scope": 1223,
									"src": "5407:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "5798:461:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1210,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "5874:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "6204:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1216,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "6225:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1218,
															"nodeType": "RevertStatement",
															"src": "6218:24:7"
														}
													]
												},
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "5870:383:7",
												"trueBody": {
													"id": 1215,
													"nodeType": "Block",
													"src": "5897:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:7",
																"nodeType": "YulBlock",
																"src": "6055:133:7",
																"statements": [
																	{
																		"nativeSrc": "6073:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:7"
																			},
																			"nativeSrc": "6096:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:7",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:7",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:7"
																					},
																					"nativeSrc": "6137:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:7"
																			},
																			"nativeSrc": "6130:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:7"
																		},
																		"nativeSrc": "6130:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1207,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1207,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:7",
																	"valueSize": 1
																}
															],
															"id": 1214,
															"nodeType": "InlineAssembly",
															"src": "6046:142:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "5760:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:7"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:7"
									},
									"scope": 1223,
									"src": "5743:516:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1224,
							"src": "195:6066:7",
							"usedErrors": [
								978,
								983,
								986
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1253
						]
					},
					"id": 1254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1226,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1253,
							"linearizedBaseContracts": [
								1253
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1231,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1230,
												"id": 1233,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1253,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1240,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1242,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1253,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1248,
												"id": 1250,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1253,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1254,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Nonces.sol",
					"exportedSymbols": {
						"Nonces": [
							1321
						]
					},
					"id": 1322,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1256,
								"nodeType": "StructuredDocumentation",
								"src": "125:83:9",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 1321,
							"linearizedBaseContracts": [
								1321
							],
							"name": "Nonces",
							"nameLocation": "227:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "240:90:9",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 1263,
									"name": "InvalidAccountNonce",
									"nameLocation": "341:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "369:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "361:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "386:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "378:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:39:9"
									},
									"src": "335:65:9"
								},
								{
									"constant": false,
									"id": 1267,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "450:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1321,
									"src": "406:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1266,
										"keyName": "account",
										"keyNameLocation": "422:7:9",
										"keyType": {
											"id": 1264,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "406:35:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1265,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "607:38:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1275,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "624:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1277,
													"indexExpression": {
														"id": 1276,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "632:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "624:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1278,
												"nodeType": "Return",
												"src": "617:21:9"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "464:69:9",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "547:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "562:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "554:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:15:9"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "598:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:9:9"
									},
									"scope": 1321,
									"src": "538:107:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "828:326:9",
										"statements": [
											{
												"id": 1293,
												"nodeType": "UncheckedBlock",
												"src": "1031:117:9",
												"statements": [
													{
														"expression": {
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1121:16:9",
															"subExpression": {
																"baseExpression": {
																	"id": 1288,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "1121:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1290,
																"indexExpression": {
																	"id": 1289,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1129:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1121:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1287,
														"id": 1292,
														"nodeType": "Return",
														"src": "1114:23:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "651:103:9",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "768:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "786:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "778:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:15:9"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "819:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:9"
									},
									"scope": 1321,
									"src": "759:395:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "1338:149:9",
										"statements": [
											{
												"assignments": [
													1304
												],
												"declarations": [
													{
														"constant": false,
														"id": 1304,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1356:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1319,
														"src": "1348:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1308,
												"initialValue": {
													"arguments": [
														{
															"id": 1306,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "1376:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1305,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "1366:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:34:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1309,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "1396:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1310,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "1405:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1318,
												"nodeType": "IfStatement",
												"src": "1392:89:9",
												"trueBody": {
													"id": 1317,
													"nodeType": "Block",
													"src": "1414:67:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1313,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "1455:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1314,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "1462:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1312,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "1435:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1316,
															"nodeType": "RevertStatement",
															"src": "1428:42:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "1160:100:9",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1274:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1299:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "1291:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1314:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "1306:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:30:9"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:0:9"
									},
									"scope": 1321,
									"src": "1265:222:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1322,
							"src": "209:1280:9",
							"usedErrors": [
								1263
							],
							"usedEvents": []
						}
					],
					"src": "99:1391:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							1327
						],
						"ShortStrings": [
							1538
						],
						"StorageSlot": [
							1648
						]
					},
					"id": 1539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1323,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1539,
							"sourceUnit": 1649,
							"src": "132:46:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1324,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1648,
										"src": "140:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 1327,
							"name": "ShortString",
							"nameLocation": "353:11:10",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:10",
							"underlyingType": {
								"id": 1326,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:10",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1328,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:10",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1538,
							"linearizedBaseContracts": [
								1538
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1331,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "1345:111:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1329,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 1330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 1335,
									"name": "StringTooLong",
									"nameLocation": "1469:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1483:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:10"
									},
									"src": "1463:32:10"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 1337,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:10"
									},
									"src": "1500:27:10"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "1786:208:10",
										"statements": [
											{
												"assignments": [
													1347
												],
												"declarations": [
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1380,
														"src": "1796:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1346,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"arguments": [
														{
															"id": 1350,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "1822:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1348,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1353,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "1840:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1362,
												"nodeType": "IfStatement",
												"src": "1836:72:10",
												"trueBody": {
													"id": 1361,
													"nodeType": "Block",
													"src": "1858:50:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1358,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "1893:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1357,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "1879:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1360,
															"nodeType": "RevertStatement",
															"src": "1872:25:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1371,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1347,
																						"src": "1965:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1370,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1369,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1367,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 1374,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "1974:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1365,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1363,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "1924:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1327_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:10",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1327_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1379,
												"nodeType": "Return",
												"src": "1917:70:10"
											}
										]
									},
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:10",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1731:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:10"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1773:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1342,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1327,
														"src": "1773:11:10"
													},
													"referencedDeclaration": 1327,
													"src": "1773:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:10"
									},
									"scope": 1538,
									"src": "1708:286:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "2152:331:10",
										"statements": [
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "2162:11:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1395,
												"initialValue": {
													"arguments": [
														{
															"id": 1393,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "2187:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																"typeString": "ShortString"
															}
														],
														"id": 1392,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "2176:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1327_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:10"
											},
											{
												"assignments": [
													1397
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "2280:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1396,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1398,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:10"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:10",
													"nodeType": "YulBlock",
													"src": "2376:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:10"
																},
																"nativeSrc": "2390:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:10"
															},
															"nativeSrc": "2390:16:10",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:10"
																		},
																		"nativeSrc": "2426:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:10"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:10"
																},
																"nativeSrc": "2419:28:10",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:10"
															},
															"nativeSrc": "2419:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:10"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1391,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1385,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1397,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1397,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:10",
														"valueSize": 1
													}
												],
												"id": 1403,
												"nodeType": "InlineAssembly",
												"src": "2367:90:10"
											},
											{
												"expression": {
													"id": 1404,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1397,
													"src": "2473:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1389,
												"id": 1405,
												"nodeType": "Return",
												"src": "2466:10:10"
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:10",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "2096:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1383,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1327,
														"src": "2096:11:10"
													},
													"referencedDeclaration": 1327,
													"src": "2096:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:10"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "2137:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:10"
									},
									"scope": 1538,
									"src": "2078:405:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "2625:175:10",
										"statements": [
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1438,
														"src": "2635:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1427,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1422,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "2679:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 1420,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "2660:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1327_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:10",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1327_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1418,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1428,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "2706:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1435,
												"nodeType": "IfStatement",
												"src": "2702:69:10",
												"trueBody": {
													"id": 1434,
													"nodeType": "Block",
													"src": "2719:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1431,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "2740:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1433,
															"nodeType": "RevertStatement",
															"src": "2733:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1436,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1417,
													"src": "2787:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1415,
												"id": 1437,
												"nodeType": "Return",
												"src": "2780:13:10"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:10",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2575:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1409,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1327,
														"src": "2575:11:10"
													},
													"referencedDeclaration": 1327,
													"src": "2575:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:10"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2616:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:10"
									},
									"scope": 1538,
									"src": "2555:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "3023:231:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1452,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "3043:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1450,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1476,
													"nodeType": "Block",
													"src": "3121:127:10",
													"statements": [
														{
															"expression": {
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1465,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1444,
																				"src": "3161:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 1462,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1648,
																				"src": "3135:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1648_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:10",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1625,
																			"src": "3135:25:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1556_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1556_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:10",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1555,
																	"src": "3135:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1468,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "3176:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 1470,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1473,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1331,
																		"src": "3219:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1471,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "3202:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1327_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:10",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1327_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1449,
															"id": 1475,
															"nodeType": "Return",
															"src": "3195:42:10"
														}
													]
												},
												"id": 1477,
												"nodeType": "IfStatement",
												"src": "3033:215:10",
												"trueBody": {
													"id": 1461,
													"nodeType": "Block",
													"src": "3063:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1458,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1442,
																		"src": "3098:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1457,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "3084:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1327_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1449,
															"id": 1460,
															"nodeType": "Return",
															"src": "3077:27:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:10",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2949:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1441,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2970:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1443,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:10"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "3010:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1447,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1446,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1327,
														"src": "3010:11:10"
													},
													"referencedDeclaration": 1327,
													"src": "3010:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:10"
									},
									"scope": 1538,
									"src": "2914:340:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "3494:158:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1492,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "3527:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1490,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "3508:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1327_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:10",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1327_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1494,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "3537:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1503,
													"nodeType": "Block",
													"src": "3609:37:10",
													"statements": [
														{
															"expression": {
																"id": 1501,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "3630:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1489,
															"id": 1502,
															"nodeType": "Return",
															"src": "3623:12:10"
														}
													]
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "3504:142:10",
												"trueBody": {
													"id": 1500,
													"nodeType": "Block",
													"src": "3556:47:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1497,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1483,
																		"src": "3586:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1496,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "3577:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1327_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1489,
															"id": 1499,
															"nodeType": "Return",
															"src": "3570:22:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:10",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "3415:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1482,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1481,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1327,
														"src": "3415:11:10"
													},
													"referencedDeclaration": 1327,
													"src": "3415:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "3434:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:10"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "3479:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:10"
									},
									"scope": 1538,
									"src": "3385:267:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "4132:174:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1519,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "4165:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1517,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "4146:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1327_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:10",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1327_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1521,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "4175:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1534,
													"nodeType": "Block",
													"src": "4249:51:10",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1530,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "4276:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1528,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1516,
															"id": 1533,
															"nodeType": "Return",
															"src": "4263:26:10"
														}
													]
												},
												"id": 1535,
												"nodeType": "IfStatement",
												"src": "4142:158:10",
												"trueBody": {
													"id": 1527,
													"nodeType": "Block",
													"src": "4194:49:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1524,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "4226:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1523,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "4215:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1327_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1516,
															"id": 1526,
															"nodeType": "Return",
															"src": "4208:24:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:10",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4059:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1509,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1508,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1327,
														"src": "4059:11:10"
													},
													"referencedDeclaration": 1327,
													"src": "4059:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4078:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:10"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4123:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:10"
									},
									"scope": 1538,
									"src": "4027:279:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1539,
							"src": "1255:3053:10",
							"usedErrors": [
								1335,
								1337
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1648
						]
					},
					"id": 1649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1540,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1541,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1648,
							"linearizedBaseContracts": [
								1648
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1544,
									"members": [
										{
											"constant": false,
											"id": 1543,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1544,
											"src": "1300:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1542,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:11",
									"nodeType": "StructDefinition",
									"scope": 1648,
									"src": "1271:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1547,
									"members": [
										{
											"constant": false,
											"id": 1546,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "1355:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1545,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:11",
									"nodeType": "StructDefinition",
									"scope": 1648,
									"src": "1326:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1550,
									"members": [
										{
											"constant": false,
											"id": 1549,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1550,
											"src": "1407:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1548,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:11",
									"nodeType": "StructDefinition",
									"scope": 1648,
									"src": "1378:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1553,
									"members": [
										{
											"constant": false,
											"id": 1552,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "1462:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1551,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:11",
									"nodeType": "StructDefinition",
									"scope": 1648,
									"src": "1433:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1556,
									"members": [
										{
											"constant": false,
											"id": 1555,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1556,
											"src": "1516:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1554,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:11",
									"nodeType": "StructDefinition",
									"scope": 1648,
									"src": "1488:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1559,
									"members": [
										{
											"constant": false,
											"id": 1558,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1559,
											"src": "1568:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1557,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:11",
									"nodeType": "StructDefinition",
									"scope": 1648,
									"src": "1541:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "1768:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:11",
													"nodeType": "YulBlock",
													"src": "1830:38:11",
													"statements": [
														{
															"nativeSrc": "1844:14:11",
															"nodeType": "YulAssignment",
															"src": "1844:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:11",
																"nodeType": "YulIdentifier",
																"src": "1854:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1566,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1562,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:11",
														"valueSize": 1
													}
												],
												"id": 1568,
												"nodeType": "InlineAssembly",
												"src": "1821:47:11"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1708:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:11"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1745:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1544_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1564,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1544,
														"src": "1745:11:11"
													},
													"referencedDeclaration": 1544,
													"src": "1745:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1544_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:11"
									},
									"scope": 1648,
									"src": "1684:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "2056:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:11",
													"nodeType": "YulBlock",
													"src": "2118:38:11",
													"statements": [
														{
															"nativeSrc": "2132:14:11",
															"nodeType": "YulAssignment",
															"src": "2132:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:11",
																"nodeType": "YulIdentifier",
																"src": "2142:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1577,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1573,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:11",
														"valueSize": 1
													}
												],
												"id": 1579,
												"nodeType": "InlineAssembly",
												"src": "2109:47:11"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:11",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "1996:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1572,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:11"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2033:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1547_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1575,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1547,
														"src": "2033:11:11"
													},
													"referencedDeclaration": 1547,
													"src": "2033:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1547_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:11"
									},
									"scope": 1648,
									"src": "1972:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "2344:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:11",
													"nodeType": "YulBlock",
													"src": "2406:38:11",
													"statements": [
														{
															"nativeSrc": "2420:14:11",
															"nodeType": "YulAssignment",
															"src": "2420:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:11",
																"nodeType": "YulIdentifier",
																"src": "2430:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1588,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1584,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:11",
														"valueSize": 1
													}
												],
												"id": 1590,
												"nodeType": "InlineAssembly",
												"src": "2397:47:11"
											}
										]
									},
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:11",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2284:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1583,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:11"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2321:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1550_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1587,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1586,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1550,
														"src": "2321:11:11"
													},
													"referencedDeclaration": 1550,
													"src": "2321:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1550_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:11"
									},
									"scope": 1648,
									"src": "2260:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "2632:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:11",
													"nodeType": "YulBlock",
													"src": "2694:38:11",
													"statements": [
														{
															"nativeSrc": "2708:14:11",
															"nodeType": "YulAssignment",
															"src": "2708:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:11",
																"nodeType": "YulIdentifier",
																"src": "2718:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1599,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1595,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:11",
														"valueSize": 1
													}
												],
												"id": 1601,
												"nodeType": "InlineAssembly",
												"src": "2685:47:11"
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:11",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "2572:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1594,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:11"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "2609:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1553_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1598,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1597,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1553,
														"src": "2609:11:11"
													},
													"referencedDeclaration": 1553,
													"src": "2609:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1553_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:11"
									},
									"scope": 1648,
									"src": "2548:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "2917:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:11",
													"nodeType": "YulBlock",
													"src": "2979:38:11",
													"statements": [
														{
															"nativeSrc": "2993:14:11",
															"nodeType": "YulAssignment",
															"src": "2993:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:11",
																"nodeType": "YulIdentifier",
																"src": "3003:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1610,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1606,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:11",
														"valueSize": 1
													}
												],
												"id": 1612,
												"nodeType": "InlineAssembly",
												"src": "2970:47:11"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:11",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "2858:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1605,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:11"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "2895:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1556_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1608,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1556,
														"src": "2895:10:11"
													},
													"referencedDeclaration": 1556,
													"src": "2895:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1556_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:11"
									},
									"scope": 1648,
									"src": "2835:188:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "3225:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:11",
													"nodeType": "YulBlock",
													"src": "3287:44:11",
													"statements": [
														{
															"nativeSrc": "3301:20:11",
															"nodeType": "YulAssignment",
															"src": "3301:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:11",
																"nodeType": "YulIdentifier",
																"src": "3311:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1623,
												"nodeType": "InlineAssembly",
												"src": "3278:53:11"
											}
										]
									},
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:11",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3158:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:11"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3203:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1556_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1619,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1556,
														"src": "3203:10:11"
													},
													"referencedDeclaration": 1556,
													"src": "3203:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1556_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:11"
									},
									"scope": 1648,
									"src": "3135:202:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "3513:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:11",
													"nodeType": "YulBlock",
													"src": "3575:38:11",
													"statements": [
														{
															"nativeSrc": "3589:14:11",
															"nodeType": "YulAssignment",
															"src": "3589:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:11",
																"nodeType": "YulIdentifier",
																"src": "3599:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1632,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1628,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:11",
														"valueSize": 1
													}
												],
												"id": 1634,
												"nodeType": "InlineAssembly",
												"src": "3566:47:11"
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:11",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "3455:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:11"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "3492:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1559_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1630,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1559,
														"src": "3492:9:11"
													},
													"referencedDeclaration": 1559,
													"src": "3492:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1559_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:11"
									},
									"scope": 1648,
									"src": "3433:186:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "3816:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:11",
													"nodeType": "YulBlock",
													"src": "3878:44:11",
													"statements": [
														{
															"nativeSrc": "3892:20:11",
															"nodeType": "YulAssignment",
															"src": "3892:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:11",
																"nodeType": "YulIdentifier",
																"src": "3902:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1639,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1645,
												"nodeType": "InlineAssembly",
												"src": "3869:53:11"
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:11",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "3751:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:11"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "3795:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1559_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1642,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1641,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1559,
														"src": "3795:9:11"
													},
													"referencedDeclaration": 1559,
													"src": "3795:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1559_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:11"
									},
									"scope": 1648,
									"src": "3729:199:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1649,
							"src": "1245:2685:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3606
						],
						"SignedMath": [
							3711
						],
						"Strings": [
							1903
						]
					},
					"id": 1904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1650,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1652,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1904,
							"sourceUnit": 3607,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1651,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3606,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1654,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1904,
							"sourceUnit": 3712,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1653,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3711,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1655,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1903,
							"linearizedBaseContracts": [
								1903
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1658,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1656,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1657,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1661,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1659,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1660,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1668,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1714,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1677
														],
														"declarations": [
															{
																"constant": false,
																"id": 1677,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1714,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1676,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1684,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1680,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1671,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1678,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3606,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3606_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3426,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1686
														],
														"declarations": [
															{
																"constant": false,
																"id": 1686,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1714,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1685,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1691,
														"initialValue": {
															"arguments": [
																{
																	"id": 1689,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1677,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1687,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1693
														],
														"declarations": [
															{
																"constant": false,
																"id": 1693,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1714,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1692,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1694,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "930:67:12",
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nativeSrc": "948:35:12",
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:12",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nativeSrc": "967:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1686,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1677,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1693,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1695,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1710,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1697,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1693,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1699,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:12",
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nativeSrc": "1164:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nativeSrc": "1159:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nativeSrc": "1146:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nativeSrc": "1146:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1658,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1693,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1671,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1700,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1704,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1705,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1709,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1708,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1711,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1712,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1675,
														"id": 1713,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1903,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1727,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1736,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1719,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1734,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3711,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3711_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3710,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1733,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1724,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1723,
												"id": 1740,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1718,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1721,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 1903,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 1760,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1751,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1754,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1745,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1752,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3606,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3606_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3548,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1750,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1762,
																	1845,
																	1865
																],
																"referencedDeclaration": 1845,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1749,
														"id": 1759,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 1903,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1844,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													1773
												],
												"declarations": [
													{
														"constant": false,
														"id": 1773,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1844,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1775,
												"initialValue": {
													"id": 1774,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1765,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													1777
												],
												"declarations": [
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1844,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1776,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1786,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1781,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1767,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1778,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1787,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1789,
														"indexExpression": {
															"hexValue": "30",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1793,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1795,
														"indexExpression": {
															"hexValue": "31",
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 1827,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1813,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1815,
																	"indexExpression": {
																		"id": 1814,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1800,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1816,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1820,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1817,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1773,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1822,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1823,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1826,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1807,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1800,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1828,
												"initializationExpression": {
													"assignments": [
														1800
													],
													"declarations": [
														{
															"constant": false,
															"id": 1800,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1828,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1799,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1806,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1802,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 1810,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1812,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1829,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1838,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 1837,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1833,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1834,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1832,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1668,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1836,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1841,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1839,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1771,
												"id": 1843,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1769,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 1903,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1858,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1848,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1856,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1854,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1861,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1853,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1762,
															1845,
															1865
														],
														"referencedDeclaration": 1845,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1852,
												"id": 1863,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 1903,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1877,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1875,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1882,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1880,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1889,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1868,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1887,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1886,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1895,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1893,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1892,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1874,
												"id": 1900,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1869,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 1903,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1904,
							"src": "251:2847:12",
							"usedErrors": [
								1668
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							2251
						]
					},
					"id": 2252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1906,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:13",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2251,
							"linearizedBaseContracts": [
								2251
							],
							"name": "ECDSA",
							"nameLocation": "352:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1911,
									"members": [
										{
											"id": 1907,
											"name": "NoError",
											"nameLocation": "392:7:13",
											"nodeType": "EnumValue",
											"src": "392:7:13"
										},
										{
											"id": 1908,
											"name": "InvalidSignature",
											"nameLocation": "409:16:13",
											"nodeType": "EnumValue",
											"src": "409:16:13"
										},
										{
											"id": 1909,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:13",
											"nodeType": "EnumValue",
											"src": "435:22:13"
										},
										{
											"id": 1910,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:13",
											"nodeType": "EnumValue",
											"src": "467:17:13"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:13",
									"nodeType": "EnumDefinition",
									"src": "364:126:13"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:13",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1914,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:13"
									},
									"src": "564:30:13"
								},
								{
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:13",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1919,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "699:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:13"
									},
									"src": "665:50:13"
								},
								{
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:13",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1924,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "840:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1921,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:13"
									},
									"src": "811:40:13"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "2242:653:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1939,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "2256:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1974,
													"nodeType": "Block",
													"src": "2781:108:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1961,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1965,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1911,
																			"src": "2815:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1911_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:13",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1909,
																		"src": "2815:35:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1911",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1969,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1929,
																					"src": "2860:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:13",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1967,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1972,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1938,
															"id": 1973,
															"nodeType": "Return",
															"src": "2795:83:13"
														}
													]
												},
												"id": 1975,
												"nodeType": "IfStatement",
												"src": "2252:637:13",
												"trueBody": {
													"id": 1960,
													"nodeType": "Block",
													"src": "2280:495:13",
													"statements": [
														{
															"assignments": [
																1944
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1944,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1960,
																	"src": "2294:9:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1943,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1945,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:13"
														},
														{
															"assignments": [
																1947
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1947,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1960,
																	"src": "2317:9:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1946,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1948,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:13"
														},
														{
															"assignments": [
																1950
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1950,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1960,
																	"src": "2340:7:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1949,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1951,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:13"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:13",
																"nodeType": "YulBlock",
																"src": "2548:171:13",
																"statements": [
																	{
																		"nativeSrc": "2566:32:13",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:13",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:13",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:13",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:13"
																					},
																					"nativeSrc": "2577:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:13"
																			},
																			"nativeSrc": "2571:27:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:13"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:13",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:13",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:13",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:13",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:13"
																					},
																					"nativeSrc": "2626:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:13"
																			},
																			"nativeSrc": "2620:27:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:13"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:13",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:13",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:13",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:13"
																							},
																							"nativeSrc": "2683:20:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:13"
																					},
																					"nativeSrc": "2677:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:13"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:13"
																			},
																			"nativeSrc": "2669:36:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:13"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:13"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1944,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1947,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1929,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1929,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1929,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1950,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:13",
																	"valueSize": 1
																}
															],
															"id": 1952,
															"nodeType": "InlineAssembly",
															"src": "2539:180:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1954,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1927,
																		"src": "2750:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1955,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "2756:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1956,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1944,
																		"src": "2759:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1957,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1947,
																		"src": "2762:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1953,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1977,
																		2057,
																		2165
																	],
																	"referencedDeclaration": 2165,
																	"src": "2739:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1938,
															"id": 1959,
															"nodeType": "Return",
															"src": "2732:32:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:13",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2149:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1926,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2163:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:13"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2219:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1911",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1934,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1933,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1911,
														"src": "2219:12:13"
													},
													"referencedDeclaration": 1911,
													"src": "2219:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1911",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2233:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1936,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:13"
									},
									"scope": 2251,
									"src": "2129:766:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "3789:168:13",
										"statements": [
											{
												"assignments": [
													1988,
													1991,
													1993
												],
												"declarations": [
													{
														"constant": false,
														"id": 1988,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 2006,
														"src": "3800:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1987,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1991,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2006,
														"src": "3819:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1911",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1990,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1989,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1911,
																"src": "3819:12:13"
															},
															"referencedDeclaration": 1911,
															"src": "3819:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1993,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2006,
														"src": "3839:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1992,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1998,
												"initialValue": {
													"arguments": [
														{
															"id": 1995,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1980,
															"src": "3870:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1996,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "3876:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1994,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1977,
															2057,
															2165
														],
														"referencedDeclaration": 1977,
														"src": "3859:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2000,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "3908:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2001,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "3915:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1999,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2250,
														"src": "3896:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1911_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:13"
											},
											{
												"expression": {
													"id": 2004,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1988,
													"src": "3941:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1986,
												"id": 2005,
												"nodeType": "Return",
												"src": "3934:16:13"
											}
										]
									},
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:13",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3719:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1979,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3733:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1981,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:13"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3780:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:13"
									},
									"scope": 2251,
									"src": "3702:255:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "4285:342:13",
										"statements": [
											{
												"id": 2055,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:13",
												"statements": [
													{
														"assignments": [
															2025
														],
														"declarations": [
															{
																"constant": false,
																"id": 2025,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2055,
																"src": "4319:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 2024,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2032,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2026,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "4331:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 2027,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:13"
													},
													{
														"assignments": [
															2034
														],
														"declarations": [
															{
																"constant": false,
																"id": 2034,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2055,
																"src": "4522:7:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 2033,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2047,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2039,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2014,
																							"src": "4547:2:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2038,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2037,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:13",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2040,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 2041,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2043,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2035,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2049,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "4596:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2050,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "4602:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 2051,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "4605:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2052,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "4608:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2048,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1977,
																	2057,
																	2165
																],
																"referencedDeclaration": 2165,
																"src": "4585:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 2023,
														"id": 2054,
														"nodeType": "Return",
														"src": "4578:32:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:13",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "4193:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2009,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "4207:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2011,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "4218:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2013,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:13"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "4253:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "4262:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1911",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2018,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1911,
														"src": "4262:12:13"
													},
													"referencedDeclaration": 1911,
													"src": "4262:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1911",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "4276:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2021,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:13"
									},
									"scope": 2251,
									"src": "4173:454:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2089,
										"nodeType": "Block",
										"src": "4840:164:13",
										"statements": [
											{
												"assignments": [
													2070,
													2073,
													2075
												],
												"declarations": [
													{
														"constant": false,
														"id": 2070,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 2089,
														"src": "4851:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2069,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2073,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2089,
														"src": "4870:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1911",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2072,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2071,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1911,
																"src": "4870:12:13"
															},
															"referencedDeclaration": 1911,
															"src": "4870:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2075,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2089,
														"src": "4890:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2074,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2081,
												"initialValue": {
													"arguments": [
														{
															"id": 2077,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "4921:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2078,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "4927:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2079,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "4930:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2076,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1977,
															2057,
															2165
														],
														"referencedDeclaration": 2057,
														"src": "4910:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2083,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "4955:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2084,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2075,
															"src": "4962:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2082,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2250,
														"src": "4943:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1911_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:13"
											},
											{
												"expression": {
													"id": 2087,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2070,
													"src": "4988:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2068,
												"id": 2088,
												"nodeType": "Return",
												"src": "4981:16:13"
											}
										]
									},
									"documentation": {
										"id": 2058,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:13",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 2090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "4771:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2059,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "4785:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2061,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "4796:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2063,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:13"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "4831:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:13"
									},
									"scope": 2251,
									"src": "4754:250:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "5298:1372:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2111,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "6194:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2109,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2125,
												"nodeType": "IfStatement",
												"src": "6182:164:13",
												"trueBody": {
													"id": 2124,
													"nodeType": "Block",
													"src": "6267:79:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2115,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2119,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1911,
																			"src": "6301:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1911_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:13",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1910,
																		"src": "6301:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1911",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 2121,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "6333:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2122,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2108,
															"id": 2123,
															"nodeType": "Return",
															"src": "6281:54:13"
														}
													]
												}
											},
											{
												"assignments": [
													2127
												],
												"declarations": [
													{
														"constant": false,
														"id": 2127,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2164,
														"src": "6440:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2126,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2134,
												"initialValue": {
													"arguments": [
														{
															"id": 2129,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "6467:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2130,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "6473:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2131,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "6476:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2132,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "6479:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2128,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2135,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2127,
														"src": "6495:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2136,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2154,
												"nodeType": "IfStatement",
												"src": "6491:113:13",
												"trueBody": {
													"id": 2153,
													"nodeType": "Block",
													"src": "6517:87:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2141,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2145,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1911,
																			"src": "6551:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1911_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:13",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1908,
																		"src": "6551:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1911",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2147,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2151,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2108,
															"id": 2152,
															"nodeType": "Return",
															"src": "6531:62:13"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2155,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "6622:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2156,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "6630:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1911_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:13",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1907,
															"src": "6630:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2158,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2162,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 2108,
												"id": 2163,
												"nodeType": "Return",
												"src": "6614:49:13"
											}
										]
									},
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:13",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "5169:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2092,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "5191:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2094,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "5208:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2096,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "5227:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2098,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:13"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "5266:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "5275:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1911",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2103,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1911,
														"src": "5275:12:13"
													},
													"referencedDeclaration": 1911,
													"src": "5275:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1911",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "5289:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:13"
									},
									"scope": 2251,
									"src": "5140:1530:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2200,
										"nodeType": "Block",
										"src": "6897:166:13",
										"statements": [
											{
												"assignments": [
													2180,
													2183,
													2185
												],
												"declarations": [
													{
														"constant": false,
														"id": 2180,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 2200,
														"src": "6908:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2183,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2200,
														"src": "6927:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1911",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2182,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2181,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1911,
																"src": "6927:12:13"
															},
															"referencedDeclaration": 1911,
															"src": "6927:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2185,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2200,
														"src": "6947:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2184,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2192,
												"initialValue": {
													"arguments": [
														{
															"id": 2187,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "6978:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2188,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "6984:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2189,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "6987:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2190,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "6990:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2186,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1977,
															2057,
															2165
														],
														"referencedDeclaration": 2165,
														"src": "6967:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1911_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2194,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "7014:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2195,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "7021:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2193,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2250,
														"src": "7002:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1911_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2197,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:13"
											},
											{
												"expression": {
													"id": 2198,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2180,
													"src": "7047:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2178,
												"id": 2199,
												"nodeType": "Return",
												"src": "7040:16:13"
											}
										]
									},
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:13",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "6820:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2167,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "6834:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2169,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "6843:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2171,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "6854:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:13"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "6888:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:13"
									},
									"scope": 2251,
									"src": "6803:260:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "7268:460:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1911",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2210,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "7282:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1911",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2211,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "7291:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1911_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 2212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:13",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1907,
														"src": "7291:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1911",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1911",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2216,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "7378:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2217,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "7387:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1911_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:13",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1908,
															"src": "7387:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1911",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2224,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "7483:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1911",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2225,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "7492:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1911_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:13",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1909,
																"src": "7492:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1911",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1911",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2236,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2205,
																	"src": "7617:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1911",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2237,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "7626:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1911_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:13",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1910,
																	"src": "7626:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1911",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2245,
															"nodeType": "IfStatement",
															"src": "7613:109:13",
															"trueBody": {
																"id": 2244,
																"nodeType": "Block",
																"src": "7658:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2241,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2207,
																					"src": "7702:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2240,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1924,
																				"src": "7679:22:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 2242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2243,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:13"
																	}
																]
															}
														},
														"id": 2246,
														"nodeType": "IfStatement",
														"src": "7479:243:13",
														"trueBody": {
															"id": 2235,
															"nodeType": "Block",
															"src": "7529:78:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2231,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2207,
																						"src": "7586:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2229,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2228,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1919,
																			"src": "7550:27:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2234,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:13"
																}
															]
														}
													},
													"id": 2247,
													"nodeType": "IfStatement",
													"src": "7374:348:13",
													"trueBody": {
														"id": 2223,
														"nodeType": "Block",
														"src": "7418:55:13",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2220,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1914,
																		"src": "7439:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2222,
																"nodeType": "RevertStatement",
																"src": "7432:30:13"
															}
														]
													}
												},
												"id": 2248,
												"nodeType": "IfStatement",
												"src": "7278:444:13",
												"trueBody": {
													"id": 2215,
													"nodeType": "Block",
													"src": "7313:55:13",
													"statements": [
														{
															"functionReturnParameters": 2209,
															"id": 2214,
															"nodeType": "Return",
															"src": "7327:7:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:13",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "7217:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1911",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2204,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2203,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1911,
														"src": "7217:12:13"
													},
													"referencedDeclaration": 1911,
													"src": "7217:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1911",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "7237:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2206,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:13"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:13"
									},
									"scope": 2251,
									"src": "7196:532:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2252,
							"src": "344:7386:13",
							"usedErrors": [
								1914,
								1919,
								1924
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2478
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							2552
						],
						"ShortString": [
							1327
						],
						"ShortStrings": [
							1538
						]
					},
					"id": 2479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 2255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2479,
							"sourceUnit": 2553,
							"src": "139:56:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2254,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2552,
										"src": "147:16:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 2258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2479,
							"sourceUnit": 1539,
							"src": "196:62:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2256,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1538,
										"src": "204:12:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2257,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1327,
										"src": "218:11:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 2260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2479,
							"sourceUnit": 25,
							"src": "259:55:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2259,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 24,
										"src": "267:8:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2262,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "1988:8:14"
									},
									"id": 2263,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:14"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2261,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:14",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2478,
							"linearizedBaseContracts": [
								2478,
								24
							],
							"name": "EIP712",
							"nameLocation": "1978:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2265,
									"libraryName": {
										"id": 2264,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1538,
										"src": "2009:12:14"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:14"
								},
								{
									"constant": true,
									"id": 2270,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2034:140:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2266,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 2268,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 2267,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2272,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2373:48:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2271,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2274,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2427:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2273,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2276,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2473:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2275,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2278,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2517:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2277,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2280,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2560:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2279,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2283,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2607:35:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2282,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2281,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1327,
											"src": "2607:11:14"
										},
										"referencedDeclaration": 1327,
										"src": "2607:11:14",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2286,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2648:38:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2285,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2284,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1327,
											"src": "2648:11:14"
										},
										"referencedDeclaration": 1327,
										"src": "2648:11:14",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2288,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2692:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2287,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2290,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 2478,
									"src": "2726:31:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2289,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2347,
										"nodeType": "Block",
										"src": "3383:376:14",
										"statements": [
											{
												"expression": {
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2298,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2283,
														"src": "3393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2301,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "3432:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2299,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "3401:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:14",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1479,
															"src": "3401:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1327_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
														"typeString": "ShortString"
													}
												},
												"id": 2304,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:14"
											},
											{
												"expression": {
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2305,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2286,
														"src": "3456:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2308,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "3501:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2306,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "3467:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:14",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1479,
															"src": "3467:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1327_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
														"typeString": "ShortString"
													}
												},
												"id": 2311,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:14"
											},
											{
												"expression": {
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2312,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2278,
														"src": "3528:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2316,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2293,
																		"src": "3558:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2314,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2313,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:14"
											},
											{
												"expression": {
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2321,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "3574:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2325,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2295,
																		"src": "3607:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2323,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2322,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2329,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:14"
											},
											{
												"expression": {
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2330,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "3627:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2331,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:14",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2334,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:14"
											},
											{
												"expression": {
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2335,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "3667:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2336,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2395,
															"src": "3692:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2339,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:14"
											},
											{
												"expression": {
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2340,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "3725:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2343,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2478",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2478",
																	"typeString": "contract EIP712"
																}
															],
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2341,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2346,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:14"
											}
										]
									},
									"documentation": {
										"id": 2291,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:14",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 2348,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "3340:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "3360:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:14"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:14"
									},
									"scope": 2478,
									"src": "3328:431:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2373,
										"nodeType": "Block",
										"src": "3907:200:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2356,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2478",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2478",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2354,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2358,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "3938:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2360,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:14",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2362,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2274,
															"src": "3970:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2371,
													"nodeType": "Block",
													"src": "4046:55:14",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2368,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "4067:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2353,
															"id": 2370,
															"nodeType": "Return",
															"src": "4060:30:14"
														}
													]
												},
												"id": 2372,
												"nodeType": "IfStatement",
												"src": "3917:184:14",
												"trueBody": {
													"id": 2367,
													"nodeType": "Block",
													"src": "3986:54:14",
													"statements": [
														{
															"expression": {
																"id": 2365,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "4007:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2353,
															"id": 2366,
															"nodeType": "Return",
															"src": "4000:29:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2349,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:14",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:14"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "3898:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:14"
									},
									"scope": 2478,
									"src": "3845:262:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "4177:115:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2382,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "4215:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2383,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "4226:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2384,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "4239:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2385,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:14",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2389,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2478",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2478",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2387,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2380,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:14",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2379,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2378,
												"id": 2393,
												"nodeType": "Return",
												"src": "4187:98:14"
											}
										]
									},
									"id": 2395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:14"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "4168:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2376,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:14"
									},
									"scope": 2478,
									"src": "4113:179:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2410,
										"nodeType": "Block",
										"src": "5003:90:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2405,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "5053:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2407,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "5075:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2403,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2552,
															"src": "5020:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2552_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:14",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2551,
														"src": "5020:32:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2402,
												"id": 2409,
												"nodeType": "Return",
												"src": "5013:73:14"
											}
										]
									},
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:14",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "4943:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2397,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:14"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "4994:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2400,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:14"
									},
									"scope": 2478,
									"src": "4917:176:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 2452,
										"nodeType": "Block",
										"src": "5472:229:14",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2431,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2465,
																"src": "5533:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2433,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "5560:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2435,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:14",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2439,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2478",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2478",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2437,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2441,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2445,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2446,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2450,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2429,
												"id": 2451,
												"nodeType": "Return",
												"src": "5482:212:14"
											}
										]
									},
									"documentation": {
										"id": 2412,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:14",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:14"
									},
									"returnParameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "5242:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2414,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "5269:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "5301:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "5336:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "5365:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "5404:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "5430:27:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2426,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2427,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:14"
									},
									"scope": 2478,
									"src": "5144:557:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "6082:65:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2461,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2288,
															"src": "6126:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2459,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "6099:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																"typeString": "ShortString"
															}
														},
														"id": 2460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:14",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1506,
														"src": "6099:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1327_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1327_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2458,
												"id": 2463,
												"nodeType": "Return",
												"src": "6092:48:14"
											}
										]
									},
									"documentation": {
										"id": 2454,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:14",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:14"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "6067:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:14"
									},
									"scope": 2478,
									"src": "6021:126:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2476,
										"nodeType": "Block",
										"src": "6537:71:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2473,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "6584:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2471,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2286,
															"src": "6554:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1327",
																"typeString": "ShortString"
															}
														},
														"id": 2472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:14",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1506,
														"src": "6554:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1327_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1327_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2470,
												"id": 2475,
												"nodeType": "Return",
												"src": "6547:54:14"
											}
										]
									},
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:14",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:14"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "6522:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2468,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:14"
									},
									"scope": 2478,
									"src": "6473:135:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2479,
							"src": "1960:4650:14",
							"usedErrors": [
								1335,
								1337
							],
							"usedEvents": [
								4
							]
						}
					],
					"src": "113:6498:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2552
						],
						"Strings": [
							1903
						]
					},
					"id": 2553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2553,
							"sourceUnit": 1904,
							"src": "149:39:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2481,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1903,
										"src": "157:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2483,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:15",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2552,
							"linearizedBaseContracts": [
								2552
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2492,
										"nodeType": "Block",
										"src": "1314:368:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:15",
													"nodeType": "YulBlock",
													"src": "1376:300:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:15",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:15",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:15",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:15"
																},
																"nativeSrc": "1390:48:15",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:15"
															},
															"nativeSrc": "1390:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:15",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:15"
																},
																"nativeSrc": "1492:25:15",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:15"
															},
															"nativeSrc": "1492:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:15"
														},
														{
															"nativeSrc": "1571:31:15",
															"nodeType": "YulAssignment",
															"src": "1571:31:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:15",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:15",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:15"
																},
																"nativeSrc": "1581:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:15"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2489,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:15",
														"valueSize": 1
													},
													{
														"declaration": 2486,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:15",
														"valueSize": 1
													}
												],
												"id": 2491,
												"nodeType": "InlineAssembly",
												"src": "1367:309:15"
											}
										]
									},
									"documentation": {
										"id": 2484,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:15",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "1254:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2485,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:15"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "1298:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2488,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:15"
									},
									"scope": 2552,
									"src": "1222:460:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2518,
										"nodeType": "Block",
										"src": "2234:143:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2510,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2496,
																						"src": "2343:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2511,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:15",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2508,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1903,
																					"src": "2326:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1903_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:15",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1716,
																				"src": "2326:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2506,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2514,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2496,
																	"src": "2361:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2502,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:15",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2501,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2500,
												"id": 2517,
												"nodeType": "Return",
												"src": "2244:126:15"
											}
										]
									},
									"documentation": {
										"id": 2494,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:15",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "2180:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:15"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "2225:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:15"
									},
									"scope": 2552,
									"src": "2148:229:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2538,
										"nodeType": "Block",
										"src": "2831:80:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2533,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "2887:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2534,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2524,
																	"src": "2898:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2530,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:15",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2529,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2528,
												"id": 2537,
												"nodeType": "Return",
												"src": "2841:63:15"
											}
										]
									},
									"documentation": {
										"id": 2520,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:15",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "2761:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "2780:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:15"
									},
									"returnParameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "2822:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:15"
									},
									"scope": 2552,
									"src": "2720:191:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2550,
										"nodeType": "Block",
										"src": "3462:292:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:15",
													"nodeType": "YulBlock",
													"src": "3524:224:15",
													"statements": [
														{
															"nativeSrc": "3538:22:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:15",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:15"
																},
																"nativeSrc": "3549:11:15",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:15"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:15",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:15"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:15",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:15",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:15"
																},
																"nativeSrc": "3573:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:15"
															},
															"nativeSrc": "3573:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:15",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:15"
																		},
																		"nativeSrc": "3616:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:15"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:15",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:15"
																},
																"nativeSrc": "3609:39:15",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:15"
															},
															"nativeSrc": "3609:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:15",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:15"
																		},
																		"nativeSrc": "3668:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:15"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:15"
																},
																"nativeSrc": "3661:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:15"
															},
															"nativeSrc": "3661:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:15"
														},
														{
															"nativeSrc": "3708:30:15",
															"nodeType": "YulAssignment",
															"src": "3708:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:15",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:15"
																},
																"nativeSrc": "3718:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:15"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2547,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:15",
														"valueSize": 1
													},
													{
														"declaration": 2542,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:15",
														"valueSize": 1
													},
													{
														"declaration": 2544,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:15",
														"valueSize": 1
													}
												],
												"id": 2549,
												"nodeType": "InlineAssembly",
												"src": "3515:233:15"
											}
										]
									},
									"documentation": {
										"id": 2540,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:15",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2551,
												"src": "3378:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2541,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2551,
												"src": "3403:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2543,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:15"
									},
									"returnParameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2551,
												"src": "3446:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2546,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:15"
									},
									"scope": 2552,
									"src": "3353:401:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2553,
							"src": "521:3235:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3606
						]
					},
					"id": 3607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2554,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2555,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3606,
							"linearizedBaseContracts": [
								3606
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2556,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2558,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2563,
									"members": [
										{
											"id": 2559,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2560,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2561,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2562,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2594,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2593,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2576
														],
														"declarations": [
															{
																"constant": false,
																"id": 2576,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2593,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2575,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2580,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2577,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2578,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2581,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2576,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2582,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2588,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2586,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2574,
															"id": 2587,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2590,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2576,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2591,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2574,
														"id": 2592,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2564,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3606,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2622,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2621,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2607,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2600,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2608,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2614,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2612,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2606,
															"id": 2613,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2616,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2598,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2617,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2600,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2619,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2606,
														"id": 2620,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2596,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2602,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3606,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2663,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2635,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2626,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2642,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2640,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2634,
															"id": 2641,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2644
														],
														"declarations": [
															{
																"constant": false,
																"id": 2644,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2663,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2643,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2648,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2645,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2626,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2646,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2649,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2644,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2650,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2652,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2658,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2634,
															"id": 2657,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2660,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2644,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2661,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2634,
														"id": 2662,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2630,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3606,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2692,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2691,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2677,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2670,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2684,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2682,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2676,
															"id": 2683,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2686,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2668,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2687,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2670,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2689,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2676,
														"id": 2690,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2693,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2693,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2693,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2693,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3606,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2720,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2719,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2705,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2698,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2712,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2710,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2704,
															"id": 2711,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2714,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2696,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2715,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2698,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2717,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2704,
														"id": 2718,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2694,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3606,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2738,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2731,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2724,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2732,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2726,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2735,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2726,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2734,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2724,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2730,
												"id": 2737,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2722,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3606,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2756,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2749,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2750,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2753,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2744,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2752,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2742,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2748,
												"id": 2755,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2740,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3606,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2767,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2760,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2768,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2762,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2770,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2771,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2760,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2772,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2774,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2766,
												"id": 2778,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2758,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3606,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2813,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2790,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2785,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2798,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2797,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2793,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2794,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2785,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2789,
															"id": 2796,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2799,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2783,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2803,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2783,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2807,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2785,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2789,
												"id": 2812,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2781,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3606,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2939,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2938,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2827
														],
														"declarations": [
															{
																"constant": false,
																"id": 2827,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2938,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2826,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2831,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2828,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2817,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2829,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2819,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2833
														],
														"declarations": [
															{
																"constant": false,
																"id": 2833,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2938,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2832,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2834,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2827,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2827,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2833,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2817,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2819,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2835,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2836,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2833,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2844,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2843,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2839,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2827,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2840,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2821,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2825,
																	"id": 2842,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2845,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2821,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2846,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2833,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2852,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2851,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2848,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2850,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2854
														],
														"declarations": [
															{
																"constant": false,
																"id": 2854,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2938,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2853,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2855,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2821,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2827,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2827,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2827,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2833,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2833,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2854,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2854,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2854,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2817,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2819,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2856,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2858
														],
														"declarations": [
															{
																"constant": false,
																"id": 2858,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2938,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2857,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2865,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2859,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2821,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2861,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2821,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2863,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2821,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2821,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2827,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2827,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2858,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2858,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2858,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2858,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2858,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2866,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2867,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2827,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2868,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2869,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2858,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2872,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2874
														],
														"declarations": [
															{
																"constant": false,
																"id": 2874,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2938,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2873,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2881,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2876,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2821,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2878,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2882,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2874,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2884,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2821,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2885,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2874,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2889,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2890,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2874,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2892,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2821,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2893,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2874,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2897,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2898,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2874,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2900,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2821,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2901,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2874,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2905,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2906,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2874,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2908,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2821,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2909,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2874,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2913,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2914,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2874,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2916,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2821,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2917,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2874,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2921,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2922,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2874,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2924,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2821,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2925,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2874,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2929,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2930,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2824,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2931,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2827,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2932,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2935,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2936,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2824,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2825,
														"id": 2937,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3606,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2982,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2956
												],
												"declarations": [
													{
														"constant": false,
														"id": 2956,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2982,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2955,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2962,
												"initialValue": {
													"arguments": [
														{
															"id": 2958,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2959,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2945,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2960,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2947,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2957,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2940,
															2983
														],
														"referencedDeclaration": 2940,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2964,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2950,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2563",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2563",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2963,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3605,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2563_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2967,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2968,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2945,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2969,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2947,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2966,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2979,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2978,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2974,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2956,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2977,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2980,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2956,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2954,
												"id": 2981,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2941,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2563",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2948,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2563,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2563,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2563",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3606,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3094,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2991,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2986,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2997,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 2996,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2990,
															"id": 2995,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2999
												],
												"declarations": [
													{
														"constant": false,
														"id": 2999,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3094,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2998,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3008,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3002,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2986,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3001,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3262,
																			3297
																		],
																		"referencedDeclaration": 3262,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3006,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 3093,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3009,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2999,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3010,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3011,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2986,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3012,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3015,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3019,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 3029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3020,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2999,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3021,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3022,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2986,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3023,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3026,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3030,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 3040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3031,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2999,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3032,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3033,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2986,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3034,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3037,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3041,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 3051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3042,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2999,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3043,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3044,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2986,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3045,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3048,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3052,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 3062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3053,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2999,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3054,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3055,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2986,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3056,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3059,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3063,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 3073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3064,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2999,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3065,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3066,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2986,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3067,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3070,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3074,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 3084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3075,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2999,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3076,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3077,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2986,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3078,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3081,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3085,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3087,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3088,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2986,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3089,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2999,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3086,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2990,
														"id": 3092,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2984,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3095,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3095,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3606,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3129,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 3128,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															3107
														],
														"declarations": [
															{
																"constant": false,
																"id": 3107,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3128,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3106,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3111,
														"initialValue": {
															"arguments": [
																{
																	"id": 3109,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3098,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3108,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3095,
																	3130
																],
																"referencedDeclaration": 3095,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3112,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3107,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3114,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3101,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2563",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2563",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3113,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3605,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2563_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3118,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3116,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3107,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3117,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3107,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3119,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3098,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3125,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3105,
														"id": 3127,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3096,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2563",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3100,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3099,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2563,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2563,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2563",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 3105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3606,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3261,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													3139
												],
												"declarations": [
													{
														"constant": false,
														"id": 3139,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3261,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3138,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3141,
												"initialValue": {
													"hexValue": "30",
													"id": 3140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 3258,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3142,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3133,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3156,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 3155,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 3149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3147,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3133,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3150,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 3153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3151,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3154,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3157,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3133,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3171,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 3170,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3162,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3133,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3165,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 3168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3166,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3169,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3172,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3133,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3186,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 3185,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3177,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3133,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3180,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3181,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3184,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3187,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3133,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3201,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 3200,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3192,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3133,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3195,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 3198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3196,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3199,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3202,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3133,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3216,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 3215,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3207,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3133,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3210,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 3213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3211,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3214,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3217,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3133,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3231,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 3230,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3222,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3133,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3225,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 3228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3226,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3229,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3232,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3133,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3246,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 3245,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3237,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3133,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3240,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 3243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3241,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3244,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3247,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3133,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3257,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 3256,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3252,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3255,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3259,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3139,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3137,
												"id": 3260,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 3131,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3606,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3296,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 3295,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															3274
														],
														"declarations": [
															{
																"constant": false,
																"id": 3274,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3295,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3278,
														"initialValue": {
															"arguments": [
																{
																	"id": 3276,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3265,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3275,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3262,
																	3297
																],
																"referencedDeclaration": 3262,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3279,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3274,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3281,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3268,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2563",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2563",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3280,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3605,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2563_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3285,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3283,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3284,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3274,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3286,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3265,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3272,
														"id": 3294,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3263,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2563",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3266,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2563,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2563,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2563",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 3272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3606,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3425,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													3306
												],
												"declarations": [
													{
														"constant": false,
														"id": 3306,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3425,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3308,
												"initialValue": {
													"hexValue": "30",
													"id": 3307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 3422,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3309,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3300,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3325,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 3324,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3314,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3300,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3319,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 3322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3320,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3323,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3326,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3300,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3342,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 3341,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3300,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3336,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 3339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3337,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3340,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3343,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3300,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3359,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 3358,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3348,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3300,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3353,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 3356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3354,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3357,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3360,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3300,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3376,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 3375,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3365,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3300,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3370,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 3373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3371,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3374,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3377,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3300,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3393,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 3392,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3382,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3300,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3387,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 3390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3388,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3391,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3394,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3300,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3410,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 3409,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3399,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3300,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3404,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 3407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3405,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3408,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3411,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3300,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3421,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 3420,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3416,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3419,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3423,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3306,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3304,
												"id": 3424,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 3298,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3300,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 3304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3606,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3460,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 3459,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															3438
														],
														"declarations": [
															{
																"constant": false,
																"id": 3438,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3459,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3437,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3442,
														"initialValue": {
															"arguments": [
																{
																	"id": 3440,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3429,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3439,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3426,
																	3461
																],
																"referencedDeclaration": 3426,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3443,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3438,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3445,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3432,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2563",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2563",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3444,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3605,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2563_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3449,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3447,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3448,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3438,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3450,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3429,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3456,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3436,
														"id": 3458,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3427,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3461,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3461,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2563",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3431,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3430,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2563,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2563,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2563",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 3436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3461,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3606,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3547,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3470
												],
												"declarations": [
													{
														"constant": false,
														"id": 3470,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3547,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3472,
												"initialValue": {
													"hexValue": "30",
													"id": 3471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3544,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3473,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3464,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3487,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3486,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3478,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3464,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3481,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3482,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3470,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3485,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3488,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3464,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3502,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3501,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3464,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3496,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3497,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3470,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3500,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3464,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3517,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3516,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3508,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3464,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3511,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3512,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3470,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3515,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3464,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3532,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3531,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3523,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3464,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3526,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3470,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3530,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3464,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3543,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3542,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3538,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3470,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3541,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3545,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3470,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3468,
												"id": 3546,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 3462,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3548,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3548,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3606,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3585,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3584,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3560
														],
														"declarations": [
															{
																"constant": false,
																"id": 3560,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3584,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3564,
														"initialValue": {
															"arguments": [
																{
																	"id": 3562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3551,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3561,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3548,
																	3586
																],
																"referencedDeclaration": 3548,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3565,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3560,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3567,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3554,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2563",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2563",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3566,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3605,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2563_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3574,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3569,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3572,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3570,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3560,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3571,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3573,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3575,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3551,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3581,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3558,
														"id": 3583,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3549,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3586,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3554,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3586,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2563",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3553,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3552,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2563,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2563,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2563",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3586,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3606,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3604,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3597,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3590,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2563",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2563",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3595,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3594,
												"id": 3603,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3587,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3590,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3605,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2563",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3588,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2563,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2563,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2563",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3605,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3606,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3607,
							"src": "203:14914:16",
							"usedErrors": [
								2558
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3711
						]
					},
					"id": 3712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3608,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3609,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3711,
							"linearizedBaseContracts": [
								3711
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3626,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3619,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3612,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3620,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3614,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3623,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3614,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3622,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3612,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3618,
												"id": 3625,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3610,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3612,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3627,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3611,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3614,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3627,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3613,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3627,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3616,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3711,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3644,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3637,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3630,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3638,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3632,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3641,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3632,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3640,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3630,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3636,
												"id": 3643,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3628,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3630,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3629,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3632,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3631,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3634,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3711,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3688,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3656
												],
												"declarations": [
													{
														"constant": false,
														"id": 3656,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3688,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3655,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3669,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3657,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3648,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3658,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3650,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3660,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3661,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3648,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3662,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3650,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3664,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3667,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3670,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3656,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3675,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3656,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3673,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3671,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3680,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3648,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3681,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3650,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3683,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3685,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3654,
												"id": 3687,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3646,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3647,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3650,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3649,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3652,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3711,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3709,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3708,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3699,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3692,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3703,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3692,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3702,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3692,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3697,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3696,
														"id": 3707,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3690,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3692,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3710,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3691,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3710,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3711,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3712,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"src/ERC20Received.sol": {
				"ast": {
					"absolutePath": "src/ERC20Received.sol",
					"exportedSymbols": {
						"ERC20Received": [
							3723
						]
					},
					"id": 3724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC20Received",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3723,
							"linearizedBaseContracts": [
								3723
							],
							"name": "ERC20Received",
							"nameLocation": "69:13:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "24a756d1",
									"id": 3722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "98:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3722,
												"src": "113:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3722,
												"src": "122:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:18:18"
									},
									"returnParameters": {
										"id": 3721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3720,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "154:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3722,
												"src": "149:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "149:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "148:14:18"
									},
									"scope": 3723,
									"src": "89:74:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3724,
							"src": "59:106:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:132:18"
				},
				"id": 18
			},
			"src/Pengyi.sol": {
				"ast": {
					"absolutePath": "src/Pengyi.sol",
					"exportedSymbols": {
						"Address": [
							1223
						],
						"ERC20": [
							676
						],
						"ERC20Permit": [
							908
						],
						"ERC20Received": [
							3723
						],
						"MyERC20": [
							3812
						]
					},
					"id": 3813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3813,
							"sourceUnit": 677,
							"src": "59:70:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3726,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "68:5:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"id": 3729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3813,
							"sourceUnit": 909,
							"src": "130:93:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3728,
										"name": "ERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 908,
										"src": "139:11:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/ERC20Received.sol",
							"file": "./ERC20Received.sol",
							"id": 3731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3813,
							"sourceUnit": 3724,
							"src": "224:50:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3730,
										"name": "ERC20Received",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3723,
										"src": "232:13:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 3733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3813,
							"sourceUnit": 1224,
							"src": "275:66:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3732,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1223,
										"src": "283:7:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3734,
										"name": "ERC20Permit",
										"nameLocations": [
											"452:11:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 908,
										"src": "452:11:19"
									},
									"id": 3735,
									"nodeType": "InheritanceSpecifier",
									"src": "452:11:19"
								}
							],
							"canonicalName": "MyERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3812,
							"linearizedBaseContracts": [
								3812,
								908,
								1321,
								2478,
								24,
								970,
								676,
								66,
								934,
								754,
								1253
							],
							"name": "MyERC20",
							"nameLocation": "441:7:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "90d52e87",
									"id": 3737,
									"name": "MyERC20__TokenTransferFailed",
									"nameLocation": "476:28:19",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "504:2:19"
									},
									"src": "470:37:19"
								},
								{
									"constant": true,
									"functionSelector": "2e0f2625",
									"id": 3740,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "535:8:19",
									"nodeType": "VariableDeclaration",
									"scope": 3812,
									"src": "513:35:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3738,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "513:5:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 3739,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "546:2:19",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3760,
										"nodeType": "Block",
										"src": "628:58:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3751,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "644:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "648:6:19",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "644:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 3753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "656:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "664:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 3755,
																	"name": "DECIMALS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3740,
																	"src": "670:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "664:14:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "656:22:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3750,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "638:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "638:41:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3759,
												"nodeType": "ExpressionStatement",
												"src": "638:41:19"
											}
										]
									},
									"id": 3761,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "e68891e79a84e5908de5ad97",
													"id": 3743,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "unicodeString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "575:21:19",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_16ab01e94d0754fdee01bcf0104556eeda816c0b0dfd70fc13e187cadd572c40",
														"typeString": "literal_string hex\"e68891e79a84e5908de5ad97\""
													},
													"value": "我的名字"
												},
												{
													"hexValue": "50454e475949",
													"id": 3744,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "598:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d381a44dddcf487dca558aff6e88b4ee7a5fdb133b8547fba41c206da7546476",
														"typeString": "literal_string \"PENGYI\""
													},
													"value": "PENGYI"
												}
											],
											"id": 3745,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3742,
												"name": "ERC20",
												"nameLocations": [
													"569:5:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "569:5:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "569:38:19"
										},
										{
											"arguments": [
												{
													"hexValue": "77686174",
													"id": 3747,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "620:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0c5385b0d3124870eb014e9af752d99fc89980d4e882a9550936b8bff06990a3",
														"typeString": "literal_string \"what\""
													},
													"value": "what"
												}
											],
											"id": 3748,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3746,
												"name": "ERC20Permit",
												"nameLocations": [
													"608:11:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 908,
												"src": "608:11:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "608:19:19"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:2:19"
									},
									"returnParameters": {
										"id": 3749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "628:0:19"
									},
									"scope": 3812,
									"src": "554:132:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										286
									],
									"body": {
										"id": 3810,
										"nodeType": "Block",
										"src": "809:361:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3773,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "829:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "833:6:19",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "829:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3775,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3764,
															"src": "841:2:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3776,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3766,
															"src": "845:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3772,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "819:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "819:33:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3778,
												"nodeType": "ExpressionStatement",
												"src": "819:33:19"
											},
											{
												"assignments": [
													3780
												],
												"declarations": [
													{
														"constant": false,
														"id": 3780,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "869:4:19",
														"nodeType": "VariableDeclaration",
														"scope": 3810,
														"src": "862:11:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 3779,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "862:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3781,
												"nodeType": "VariableDeclarationStatement",
												"src": "862:11:19"
											},
											{
												"AST": {
													"nativeSrc": "892:47:19",
													"nodeType": "YulBlock",
													"src": "892:47:19",
													"statements": [
														{
															"nativeSrc": "906:23:19",
															"nodeType": "YulAssignment",
															"src": "906:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "to",
																		"nativeSrc": "926:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "926:2:19"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "914:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "914:11:19"
																},
																"nativeSrc": "914:15:19",
																"nodeType": "YulFunctionCall",
																"src": "914:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "906:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:19"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3780,
														"isOffset": false,
														"isSlot": false,
														"src": "906:4:19",
														"valueSize": 1
													},
													{
														"declaration": 3764,
														"isOffset": false,
														"isSlot": false,
														"src": "926:2:19",
														"valueSize": 1
													}
												],
												"id": 3782,
												"nodeType": "InlineAssembly",
												"src": "883:56:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 3785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3783,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3780,
														"src": "952:4:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "959:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "952:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3805,
												"nodeType": "IfStatement",
												"src": "949:191:19",
												"trueBody": {
													"id": 3804,
													"nodeType": "Block",
													"src": "962:178:19",
													"statements": [
														{
															"assignments": [
																3787
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3787,
																	"mutability": "mutable",
																	"name": "rv",
																	"nameLocation": "981:2:19",
																	"nodeType": "VariableDeclaration",
																	"scope": 3804,
																	"src": "976:7:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 3786,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "976:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3796,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3792,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1019:3:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1023:6:19",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1019:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3794,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3766,
																		"src": "1031:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3789,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3764,
																				"src": "1000:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3788,
																			"name": "ERC20Received",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3723,
																			"src": "986:13:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20Received_$3723_$",
																				"typeString": "type(contract ERC20Received)"
																			}
																		},
																		"id": 3790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "986:17:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20Received_$3723",
																			"typeString": "contract ERC20Received"
																		}
																	},
																	"id": 3791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1004:14:19",
																	"memberName": "tokensReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3722,
																	"src": "986:32:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 3795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "986:52:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "976:62:19"
														},
														{
															"condition": {
																"id": 3798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1055:3:19",
																"subExpression": {
																	"id": 3797,
																	"name": "rv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3787,
																	"src": "1056:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3803,
															"nodeType": "IfStatement",
															"src": "1052:78:19",
															"trueBody": {
																"id": 3802,
																"nodeType": "Block",
																"src": "1060:70:19",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3799,
																				"name": "MyERC20__TokenTransferFailed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3737,
																				"src": "1085:28:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1085:30:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3801,
																		"nodeType": "RevertStatement",
																		"src": "1078:37:19"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 3808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3806,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3770,
														"src": "1149:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1159:4:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1149:14:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3809,
												"nodeType": "ExpressionStatement",
												"src": "1149:14:19"
											}
										]
									},
									"documentation": {
										"id": 3762,
										"nodeType": "StructuredDocumentation",
										"src": "692:27:19",
										"text": " method 2"
									},
									"functionSelector": "a9059cbb",
									"id": 3811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "733:8:19",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3768,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "777:8:19"
									},
									"parameters": {
										"id": 3767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "750:2:19",
												"nodeType": "VariableDeclaration",
												"scope": 3811,
												"src": "742:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3766,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "762:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3811,
												"src": "754:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:28:19"
									},
									"returnParameters": {
										"id": 3771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3770,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "800:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3811,
												"src": "795:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:14:19"
									},
									"scope": 3812,
									"src": "724:446:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3813,
							"src": "432:740:19",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65,
								785,
								792,
								1263,
								1335,
								1337,
								1914,
								1919,
								1924,
								3737
							],
							"usedEvents": [
								4,
								688,
								697
							]
						}
					],
					"src": "33:1139:19"
				},
				"id": 19
			}
		}
	}
}
{
	"id": "24812a8f102562d98d72e518226a2a43",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Vault.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.25;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {ERC20Received} from \"./ERC20Received.sol\";\nimport { IERC20Permit } from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\n\ncontract Vault is ERC20Received{\n    error Vault__AmountShouldNotLessThanZero();\n    error Vault__BalanceNotEnough();\n    error Vault__DepositError();\n    error Vault__WithdrawError();\n\n    mapping(address token => mapping(address => uint256)) public balances;\n\n    modifier amountCheck(uint256 amount) {\n        if ( amount <= 0) {\n            revert Vault__AmountShouldNotLessThanZero();\n        }\n        _;\n    }\n\n\n\n    constructor() {\n\n    }\n    /**\n     * method 1 \n     * approve + deposit(transferFrom)\n     * 两笔交易\n     */\n\n    function deposit(address token, uint256 amount) \n        public amountCheck(amount) returns (bool success) {\n        // IERC20(token).transferFrom(msg.sender,address(this),amount);\n        SafeERC20.safeTransferFrom(IERC20(token),msg.sender,address(this),amount);\n        balances[token][msg.sender] += amount;\n        return true;\n    }\n\n    /**\n     * method 2\n     * tokenReceived  (也可以用erc777实现，不过777现在已经废弃了)\n     * user - erc - vault\n     * 一笔交易\n     * \n     * 实现方法在token合约中\n     */\n\n    function tokensReceived(address from, uint256 amount) external returns (bool success) {\n        // 应该由owner来控制 允许的token范围，不能完全放开\n        balances[msg.sender][from] += amount;\n        return true;\n    }\n\n    /**\n     * method 3\n     * permit\n     */\n    function depositPermit(\n        address token,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (bool success){\n        IERC20Permit(token).permit(\n            msg.sender,\n            address(this),\n            amount,\n            deadline,\n            v,\n            r,\n            s\n        );\n        bool rv = deposit(token,amount);\n        // bool rv = IERC20(token).transferFrom(owner, spender,value);\n        if (!rv) {\n            revert Vault__DepositError();\n        }\n        return true;\n    }\n\n\n    function withdraw(address token, uint256 amount) external amountCheck(amount) returns (bool success) {\n        if(balances[token][msg.sender] < amount) {\n            revert Vault__BalanceNotEnough();\n        }\n        bool rv = IERC20(token).transfer(msg.sender,amount);\n        if(!rv) {\n            revert Vault__WithdrawError();\n        }\n        return true;\n    }\n\n    function balanceOf(address token) external view returns (uint256 amount) {\n        return balances[token][msg.sender];\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"src/ERC20Received.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.25;\n\ninterface ERC20Received {\n    function tokensReceived(address, uint256) external returns (bool success);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/ERC20Received.sol",
								"src/Vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/ERC20Received.sol",
								"src/Vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/ERC20Received.sol": {
				"ERC20Received": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,uint256)": "24a756d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20Received.sol\":\"ERC20Received\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC20Received.sol\":{\"keccak256\":\"0xbd16574b1ba13d46cabd1b785d03e5d2382681b6cb404662f5830f48017e0b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d874dec8d927b3e8ba417319ca09399f44a522d7fa390b6897a14072cde31ba\",\"dweb:/ipfs/QmW7jyMtPrpJ2QV4mXNG5roUJBef4eywfKRsyZAQJUiSS7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Vault.sol": {
				"Vault": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Vault__AmountShouldNotLessThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Vault__BalanceNotEnough",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Vault__DepositError",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Vault__WithdrawError",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "depositPermit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Vault.sol\":365:2838  contract Vault is ERC20Received{... */\n  mstore(0x40, 0x80)\n    /* \"src/Vault.sol\":789:811  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/Vault.sol\":365:2838  contract Vault is ERC20Received{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/Vault.sol\":365:2838  contract Vault is ERC20Received{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x24a756d1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6b9d159d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc23f001f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/Vault.sol\":1458:1695  function tokensReceived(address from, uint256 amount) external returns (bool success) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Vault.sol\":909:1246  function deposit(address token, uint256 amount) ... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Vault.sol\":1747:2330  function depositPermit(... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Vault.sol\":2711:2835  function balanceOf(address token) external view returns (uint256 amount) {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Vault.sol\":555:624  mapping(address token => mapping(address => uint256)) public balances */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Vault.sol\":2337:2705  function withdraw(address token, uint256 amount) external amountCheck(amount) returns (bool success) {... */\n    tag_8:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Vault.sol\":1458:1695  function tokensReceived(address from, uint256 amount) external returns (bool success) {... */\n    tag_12:\n        /* \"src/Vault.sol\":1530:1542  bool success */\n      0x00\n        /* \"src/Vault.sol\":1661:1667  amount */\n      dup2\n        /* \"src/Vault.sol\":1631:1639  balances */\n      0x00\n        /* \"src/Vault.sol\":1631:1651  balances[msg.sender] */\n      dup1\n        /* \"src/Vault.sol\":1640:1650  msg.sender */\n      caller\n        /* \"src/Vault.sol\":1631:1651  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Vault.sol\":1631:1657  balances[msg.sender][from] */\n      0x00\n        /* \"src/Vault.sol\":1652:1656  from */\n      dup6\n        /* \"src/Vault.sol\":1631:1657  balances[msg.sender][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Vault.sol\":1631:1667  balances[msg.sender][from] += amount */\n      dup3\n      dup3\n      sload\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Vault.sol\":1684:1688  true */\n      0x01\n        /* \"src/Vault.sol\":1677:1688  return true */\n      swap1\n      pop\n        /* \"src/Vault.sol\":1458:1695  function tokensReceived(address from, uint256 amount) external returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Vault.sol\":909:1246  function deposit(address token, uint256 amount) ... */\n    tag_17:\n        /* \"src/Vault.sol\":1002:1014  bool success */\n      0x00\n        /* \"src/Vault.sol\":985:991  amount */\n      dup2\n        /* \"src/Vault.sol\":693:694  0 */\n      0x00\n        /* \"src/Vault.sol\":683:689  amount */\n      dup2\n        /* \"src/Vault.sol\":683:694  amount <= 0 */\n      gt\n        /* \"src/Vault.sol\":678:764  if ( amount <= 0) {... */\n      tag_43\n      jumpi\n        /* \"src/Vault.sol\":717:753  Vault__AmountShouldNotLessThanZero() */\n      mload(0x40)\n      0x7d12343e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Vault.sol\":678:764  if ( amount <= 0) {... */\n    tag_43:\n        /* \"src/Vault.sol\":1098:1171  SafeERC20.safeTransferFrom(IERC20(token),msg.sender,address(this),amount) */\n      tag_45\n        /* \"src/Vault.sol\":1132:1137  token */\n      dup5\n        /* \"src/Vault.sol\":1139:1149  msg.sender */\n      caller\n        /* \"src/Vault.sol\":1158:1162  this */\n      address\n        /* \"src/Vault.sol\":1164:1170  amount */\n      dup7\n        /* \"src/Vault.sol\":1098:1124  SafeERC20.safeTransferFrom */\n      tag_46\n        /* \"src/Vault.sol\":1098:1171  SafeERC20.safeTransferFrom(IERC20(token),msg.sender,address(this),amount) */\n      jump\t// in\n    tag_45:\n        /* \"src/Vault.sol\":1212:1218  amount */\n      dup3\n        /* \"src/Vault.sol\":1181:1189  balances */\n      0x00\n        /* \"src/Vault.sol\":1181:1196  balances[token] */\n      dup1\n        /* \"src/Vault.sol\":1190:1195  token */\n      dup7\n        /* \"src/Vault.sol\":1181:1196  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Vault.sol\":1181:1208  balances[token][msg.sender] */\n      0x00\n        /* \"src/Vault.sol\":1197:1207  msg.sender */\n      caller\n        /* \"src/Vault.sol\":1181:1208  balances[token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Vault.sol\":1181:1218  balances[token][msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_47\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_47:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Vault.sol\":1235:1239  true */\n      0x01\n        /* \"src/Vault.sol\":1228:1239  return true */\n      swap2\n      pop\n        /* \"src/Vault.sol\":909:1246  function deposit(address token, uint256 amount) ... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Vault.sol\":1747:2330  function depositPermit(... */\n    tag_22:\n        /* \"src/Vault.sol\":1922:1934  bool success */\n      0x00\n        /* \"src/Vault.sol\":1958:1963  token */\n      dup7\n        /* \"src/Vault.sol\":1945:1971  IERC20Permit(token).permit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd505accf\n        /* \"src/Vault.sol\":1985:1995  msg.sender */\n      caller\n        /* \"src/Vault.sol\":2017:2021  this */\n      address\n        /* \"src/Vault.sol\":2036:2042  amount */\n      dup10\n        /* \"src/Vault.sol\":2056:2064  deadline */\n      dup10\n        /* \"src/Vault.sol\":2078:2079  v */\n      dup10\n        /* \"src/Vault.sol\":2093:2094  r */\n      dup10\n        /* \"src/Vault.sol\":2108:2109  s */\n      dup10\n        /* \"src/Vault.sol\":1945:2119  IERC20Permit(token).permit(... */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Vault.sol\":2129:2136  bool rv */\n      0x00\n        /* \"src/Vault.sol\":2139:2160  deposit(token,amount) */\n      tag_54\n        /* \"src/Vault.sol\":2147:2152  token */\n      dup9\n        /* \"src/Vault.sol\":2153:2159  amount */\n      dup9\n        /* \"src/Vault.sol\":2139:2146  deposit */\n      tag_17\n        /* \"src/Vault.sol\":2139:2160  deposit(token,amount) */\n      jump\t// in\n    tag_54:\n        /* \"src/Vault.sol\":2129:2160  bool rv = deposit(token,amount) */\n      swap1\n      pop\n        /* \"src/Vault.sol\":2246:2248  rv */\n      dup1\n        /* \"src/Vault.sol\":2241:2303  if (!rv) {... */\n      tag_55\n      jumpi\n        /* \"src/Vault.sol\":2271:2292  Vault__DepositError() */\n      mload(0x40)\n      0x37a89cef00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Vault.sol\":2241:2303  if (!rv) {... */\n    tag_55:\n        /* \"src/Vault.sol\":2319:2323  true */\n      0x01\n        /* \"src/Vault.sol\":2312:2323  return true */\n      swap2\n      pop\n      pop\n        /* \"src/Vault.sol\":1747:2330  function depositPermit(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Vault.sol\":2711:2835  function balanceOf(address token) external view returns (uint256 amount) {... */\n    tag_27:\n        /* \"src/Vault.sol\":2768:2782  uint256 amount */\n      0x00\n        /* \"src/Vault.sol\":2801:2809  balances */\n      dup1\n        /* \"src/Vault.sol\":2801:2816  balances[token] */\n      0x00\n        /* \"src/Vault.sol\":2810:2815  token */\n      dup4\n        /* \"src/Vault.sol\":2801:2816  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Vault.sol\":2801:2828  balances[token][msg.sender] */\n      0x00\n        /* \"src/Vault.sol\":2817:2827  msg.sender */\n      caller\n        /* \"src/Vault.sol\":2801:2828  balances[token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Vault.sol\":2794:2828  return balances[token][msg.sender] */\n      swap1\n      pop\n        /* \"src/Vault.sol\":2711:2835  function balanceOf(address token) external view returns (uint256 amount) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Vault.sol\":555:624  mapping(address token => mapping(address => uint256)) public balances */\n    tag_33:\n      mstore(0x20, 0x00)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/Vault.sol\":2337:2705  function withdraw(address token, uint256 amount) external amountCheck(amount) returns (bool success) {... */\n    tag_37:\n        /* \"src/Vault.sol\":2424:2436  bool success */\n      0x00\n        /* \"src/Vault.sol\":2407:2413  amount */\n      dup2\n        /* \"src/Vault.sol\":693:694  0 */\n      0x00\n        /* \"src/Vault.sol\":683:689  amount */\n      dup2\n        /* \"src/Vault.sol\":683:694  amount <= 0 */\n      gt\n        /* \"src/Vault.sol\":678:764  if ( amount <= 0) {... */\n      tag_58\n      jumpi\n        /* \"src/Vault.sol\":717:753  Vault__AmountShouldNotLessThanZero() */\n      mload(0x40)\n      0x7d12343e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Vault.sol\":678:764  if ( amount <= 0) {... */\n    tag_58:\n        /* \"src/Vault.sol\":2481:2487  amount */\n      dup3\n        /* \"src/Vault.sol\":2451:2459  balances */\n      0x00\n        /* \"src/Vault.sol\":2451:2466  balances[token] */\n      dup1\n        /* \"src/Vault.sol\":2460:2465  token */\n      dup7\n        /* \"src/Vault.sol\":2451:2466  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Vault.sol\":2451:2478  balances[token][msg.sender] */\n      0x00\n        /* \"src/Vault.sol\":2467:2477  msg.sender */\n      caller\n        /* \"src/Vault.sol\":2451:2478  balances[token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Vault.sol\":2451:2487  balances[token][msg.sender] < amount */\n      lt\n        /* \"src/Vault.sol\":2448:2546  if(balances[token][msg.sender] < amount) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"src/Vault.sol\":2510:2535  Vault__BalanceNotEnough() */\n      mload(0x40)\n      0x60b1ca00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Vault.sol\":2448:2546  if(balances[token][msg.sender] < amount) {... */\n    tag_60:\n        /* \"src/Vault.sol\":2555:2562  bool rv */\n      0x00\n        /* \"src/Vault.sol\":2572:2577  token */\n      dup5\n        /* \"src/Vault.sol\":2565:2587  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/Vault.sol\":2588:2598  msg.sender */\n      caller\n        /* \"src/Vault.sol\":2599:2605  amount */\n      dup7\n        /* \"src/Vault.sol\":2565:2606  IERC20(token).transfer(msg.sender,amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"src/Vault.sol\":2555:2606  bool rv = IERC20(token).transfer(msg.sender,amount) */\n      swap1\n      pop\n        /* \"src/Vault.sol\":2620:2622  rv */\n      dup1\n        /* \"src/Vault.sol\":2616:2678  if(!rv) {... */\n      tag_67\n      jumpi\n        /* \"src/Vault.sol\":2645:2667  Vault__WithdrawError() */\n      mload(0x40)\n      0x8eda183b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Vault.sol\":2616:2678  if(!rv) {... */\n    tag_67:\n        /* \"src/Vault.sol\":2694:2698  true */\n      0x01\n        /* \"src/Vault.sol\":2687:2698  return true */\n      swap3\n      pop\n      pop\n        /* \"src/Vault.sol\":2337:2705  function withdraw(address token, uint256 amount) external amountCheck(amount) returns (bool success) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_70\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_75\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_76\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_78\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_82\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_83\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_91\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_90)\n    tag_91:\n      0x60\n      swap2\n      pop\n    tag_90:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_98)\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_99\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_94)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_94:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_106:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_108:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_109:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_140\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_108\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_110:\n        /* \"#utility.yul\":641:665   */\n      tag_142\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_109\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_143:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_111:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_145\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_110\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_112:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_113:\n        /* \"#utility.yul\":997:1021   */\n      tag_148\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_112\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_149:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_114:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_151\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_113\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_11:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_154\n      tag_106\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1290:1409   */\n    tag_153:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_155\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_111\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_156\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_114\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1767   */\n    tag_115:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1754:1759   */\n      dup2\n        /* \"#utility.yul\":1747:1760   */\n      iszero\n        /* \"#utility.yul\":1740:1761   */\n      iszero\n        /* \"#utility.yul\":1729:1761   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1882   */\n    tag_116:\n        /* \"#utility.yul\":1854:1875   */\n      tag_159\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1854:1875   */\n      tag_115\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1849:1852   */\n      dup3\n        /* \"#utility.yul\":1842:1876   */\n      mstore\n        /* \"#utility.yul\":1773:1882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2098   */\n    tag_14:\n        /* \"#utility.yul\":1975:1979   */\n      0x00\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":2002:2011   */\n      dup3\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"#utility.yul\":1990:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":2026:2091   */\n      tag_161\n        /* \"#utility.yul\":2088:2089   */\n      0x00\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2073:2090   */\n      add\n        /* \"#utility.yul\":2064:2070   */\n      dup5\n        /* \"#utility.yul\":2026:2091   */\n      tag_116\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1888:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2190   */\n    tag_117:\n        /* \"#utility.yul\":2139:2146   */\n      0x00\n        /* \"#utility.yul\":2179:2183   */\n      0xff\n        /* \"#utility.yul\":2172:2177   */\n      dup3\n        /* \"#utility.yul\":2168:2184   */\n      and\n        /* \"#utility.yul\":2157:2184   */\n      swap1\n      pop\n        /* \"#utility.yul\":2104:2190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2196:2314   */\n    tag_118:\n        /* \"#utility.yul\":2267:2289   */\n      tag_164\n        /* \"#utility.yul\":2283:2288   */\n      dup2\n        /* \"#utility.yul\":2267:2289   */\n      tag_117\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2260:2265   */\n      dup2\n        /* \"#utility.yul\":2257:2290   */\n      eq\n        /* \"#utility.yul\":2247:2308   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2304:2305   */\n      0x00\n        /* \"#utility.yul\":2301:2302   */\n      dup1\n        /* \"#utility.yul\":2294:2306   */\n      revert\n        /* \"#utility.yul\":2247:2308   */\n    tag_165:\n        /* \"#utility.yul\":2196:2314   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2455   */\n    tag_119:\n        /* \"#utility.yul\":2364:2369   */\n      0x00\n        /* \"#utility.yul\":2402:2408   */\n      dup2\n        /* \"#utility.yul\":2389:2409   */\n      calldataload\n        /* \"#utility.yul\":2380:2409   */\n      swap1\n      pop\n        /* \"#utility.yul\":2418:2449   */\n      tag_167\n        /* \"#utility.yul\":2443:2448   */\n      dup2\n        /* \"#utility.yul\":2418:2449   */\n      tag_118\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2320:2455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2461:2538   */\n    tag_120:\n        /* \"#utility.yul\":2498:2505   */\n      0x00\n        /* \"#utility.yul\":2527:2532   */\n      dup2\n        /* \"#utility.yul\":2516:2532   */\n      swap1\n      pop\n        /* \"#utility.yul\":2461:2538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2544:2666   */\n    tag_121:\n        /* \"#utility.yul\":2617:2641   */\n      tag_170\n        /* \"#utility.yul\":2635:2640   */\n      dup2\n        /* \"#utility.yul\":2617:2641   */\n      tag_120\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2610:2615   */\n      dup2\n        /* \"#utility.yul\":2607:2642   */\n      eq\n        /* \"#utility.yul\":2597:2660   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2656:2657   */\n      0x00\n        /* \"#utility.yul\":2653:2654   */\n      dup1\n        /* \"#utility.yul\":2646:2658   */\n      revert\n        /* \"#utility.yul\":2597:2660   */\n    tag_171:\n        /* \"#utility.yul\":2544:2666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2672:2811   */\n    tag_122:\n        /* \"#utility.yul\":2718:2723   */\n      0x00\n        /* \"#utility.yul\":2756:2762   */\n      dup2\n        /* \"#utility.yul\":2743:2763   */\n      calldataload\n        /* \"#utility.yul\":2734:2763   */\n      swap1\n      pop\n        /* \"#utility.yul\":2772:2805   */\n      tag_173\n        /* \"#utility.yul\":2799:2804   */\n      dup2\n        /* \"#utility.yul\":2772:2805   */\n      tag_121\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2672:2811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2817:3870   */\n    tag_21:\n        /* \"#utility.yul\":2919:2925   */\n      0x00\n        /* \"#utility.yul\":2927:2933   */\n      dup1\n        /* \"#utility.yul\":2935:2941   */\n      0x00\n        /* \"#utility.yul\":2943:2949   */\n      dup1\n        /* \"#utility.yul\":2951:2957   */\n      0x00\n        /* \"#utility.yul\":2959:2965   */\n      dup1\n        /* \"#utility.yul\":3008:3011   */\n      0xc0\n        /* \"#utility.yul\":2996:3005   */\n      dup8\n        /* \"#utility.yul\":2987:2994   */\n      dup10\n        /* \"#utility.yul\":2983:3006   */\n      sub\n        /* \"#utility.yul\":2979:3012   */\n      slt\n        /* \"#utility.yul\":2976:3096   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":3015:3094   */\n      tag_176\n      tag_106\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2976:3096   */\n    tag_175:\n        /* \"#utility.yul\":3135:3136   */\n      0x00\n        /* \"#utility.yul\":3160:3213   */\n      tag_177\n        /* \"#utility.yul\":3205:3212   */\n      dup10\n        /* \"#utility.yul\":3196:3202   */\n      dup3\n        /* \"#utility.yul\":3185:3194   */\n      dup11\n        /* \"#utility.yul\":3181:3203   */\n      add\n        /* \"#utility.yul\":3160:3213   */\n      tag_111\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3150:3213   */\n      swap7\n      pop\n        /* \"#utility.yul\":3106:3223   */\n      pop\n        /* \"#utility.yul\":3262:3264   */\n      0x20\n        /* \"#utility.yul\":3288:3341   */\n      tag_178\n        /* \"#utility.yul\":3333:3340   */\n      dup10\n        /* \"#utility.yul\":3324:3330   */\n      dup3\n        /* \"#utility.yul\":3313:3322   */\n      dup11\n        /* \"#utility.yul\":3309:3331   */\n      add\n        /* \"#utility.yul\":3288:3341   */\n      tag_114\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3278:3341   */\n      swap6\n      pop\n        /* \"#utility.yul\":3233:3351   */\n      pop\n        /* \"#utility.yul\":3390:3392   */\n      0x40\n        /* \"#utility.yul\":3416:3469   */\n      tag_179\n        /* \"#utility.yul\":3461:3468   */\n      dup10\n        /* \"#utility.yul\":3452:3458   */\n      dup3\n        /* \"#utility.yul\":3441:3450   */\n      dup11\n        /* \"#utility.yul\":3437:3459   */\n      add\n        /* \"#utility.yul\":3416:3469   */\n      tag_114\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3406:3469   */\n      swap5\n      pop\n        /* \"#utility.yul\":3361:3479   */\n      pop\n        /* \"#utility.yul\":3518:3520   */\n      0x60\n        /* \"#utility.yul\":3544:3595   */\n      tag_180\n        /* \"#utility.yul\":3587:3594   */\n      dup10\n        /* \"#utility.yul\":3578:3584   */\n      dup3\n        /* \"#utility.yul\":3567:3576   */\n      dup11\n        /* \"#utility.yul\":3563:3585   */\n      add\n        /* \"#utility.yul\":3544:3595   */\n      tag_119\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3534:3595   */\n      swap4\n      pop\n        /* \"#utility.yul\":3489:3605   */\n      pop\n        /* \"#utility.yul\":3644:3647   */\n      0x80\n        /* \"#utility.yul\":3671:3724   */\n      tag_181\n        /* \"#utility.yul\":3716:3723   */\n      dup10\n        /* \"#utility.yul\":3707:3713   */\n      dup3\n        /* \"#utility.yul\":3696:3705   */\n      dup11\n        /* \"#utility.yul\":3692:3714   */\n      add\n        /* \"#utility.yul\":3671:3724   */\n      tag_122\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3661:3724   */\n      swap3\n      pop\n        /* \"#utility.yul\":3615:3734   */\n      pop\n        /* \"#utility.yul\":3773:3776   */\n      0xa0\n        /* \"#utility.yul\":3800:3853   */\n      tag_182\n        /* \"#utility.yul\":3845:3852   */\n      dup10\n        /* \"#utility.yul\":3836:3842   */\n      dup3\n        /* \"#utility.yul\":3825:3834   */\n      dup11\n        /* \"#utility.yul\":3821:3843   */\n      add\n        /* \"#utility.yul\":3800:3853   */\n      tag_122\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3790:3853   */\n      swap2\n      pop\n        /* \"#utility.yul\":3744:3863   */\n      pop\n        /* \"#utility.yul\":2817:3870   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":3876:4205   */\n    tag_26:\n        /* \"#utility.yul\":3935:3941   */\n      0x00\n        /* \"#utility.yul\":3984:3986   */\n      0x20\n        /* \"#utility.yul\":3972:3981   */\n      dup3\n        /* \"#utility.yul\":3963:3970   */\n      dup5\n        /* \"#utility.yul\":3959:3982   */\n      sub\n        /* \"#utility.yul\":3955:3987   */\n      slt\n        /* \"#utility.yul\":3952:4071   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":3990:4069   */\n      tag_185\n      tag_106\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3952:4071   */\n    tag_184:\n        /* \"#utility.yul\":4110:4111   */\n      0x00\n        /* \"#utility.yul\":4135:4188   */\n      tag_186\n        /* \"#utility.yul\":4180:4187   */\n      dup5\n        /* \"#utility.yul\":4171:4177   */\n      dup3\n        /* \"#utility.yul\":4160:4169   */\n      dup6\n        /* \"#utility.yul\":4156:4178   */\n      add\n        /* \"#utility.yul\":4135:4188   */\n      tag_111\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4125:4188   */\n      swap2\n      pop\n        /* \"#utility.yul\":4081:4198   */\n      pop\n        /* \"#utility.yul\":3876:4205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4211:4329   */\n    tag_123:\n        /* \"#utility.yul\":4298:4322   */\n      tag_188\n        /* \"#utility.yul\":4316:4321   */\n      dup2\n        /* \"#utility.yul\":4298:4322   */\n      tag_112\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4293:4296   */\n      dup3\n        /* \"#utility.yul\":4286:4323   */\n      mstore\n        /* \"#utility.yul\":4211:4329   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4335:4557   */\n    tag_29:\n        /* \"#utility.yul\":4428:4432   */\n      0x00\n        /* \"#utility.yul\":4466:4468   */\n      0x20\n        /* \"#utility.yul\":4455:4464   */\n      dup3\n        /* \"#utility.yul\":4451:4469   */\n      add\n        /* \"#utility.yul\":4443:4469   */\n      swap1\n      pop\n        /* \"#utility.yul\":4479:4550   */\n      tag_190\n        /* \"#utility.yul\":4547:4548   */\n      0x00\n        /* \"#utility.yul\":4536:4545   */\n      dup4\n        /* \"#utility.yul\":4532:4549   */\n      add\n        /* \"#utility.yul\":4523:4529   */\n      dup5\n        /* \"#utility.yul\":4479:4550   */\n      tag_123\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4335:4557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:5037   */\n    tag_32:\n        /* \"#utility.yul\":4631:4637   */\n      0x00\n        /* \"#utility.yul\":4639:4645   */\n      dup1\n        /* \"#utility.yul\":4688:4690   */\n      0x40\n        /* \"#utility.yul\":4676:4685   */\n      dup4\n        /* \"#utility.yul\":4667:4674   */\n      dup6\n        /* \"#utility.yul\":4663:4686   */\n      sub\n        /* \"#utility.yul\":4659:4691   */\n      slt\n        /* \"#utility.yul\":4656:4775   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":4694:4773   */\n      tag_193\n      tag_106\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4656:4775   */\n    tag_192:\n        /* \"#utility.yul\":4814:4815   */\n      0x00\n        /* \"#utility.yul\":4839:4892   */\n      tag_194\n        /* \"#utility.yul\":4884:4891   */\n      dup6\n        /* \"#utility.yul\":4875:4881   */\n      dup3\n        /* \"#utility.yul\":4864:4873   */\n      dup7\n        /* \"#utility.yul\":4860:4882   */\n      add\n        /* \"#utility.yul\":4839:4892   */\n      tag_111\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4829:4892   */\n      swap3\n      pop\n        /* \"#utility.yul\":4785:4902   */\n      pop\n        /* \"#utility.yul\":4941:4943   */\n      0x20\n        /* \"#utility.yul\":4967:5020   */\n      tag_195\n        /* \"#utility.yul\":5012:5019   */\n      dup6\n        /* \"#utility.yul\":5003:5009   */\n      dup3\n        /* \"#utility.yul\":4992:5001   */\n      dup7\n        /* \"#utility.yul\":4988:5010   */\n      add\n        /* \"#utility.yul\":4967:5020   */\n      tag_111\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4957:5020   */\n      swap2\n      pop\n        /* \"#utility.yul\":4912:5030   */\n      pop\n        /* \"#utility.yul\":4563:5037   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5043:5223   */\n    tag_124:\n        /* \"#utility.yul\":5091:5168   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5088:5089   */\n      0x00\n        /* \"#utility.yul\":5081:5169   */\n      mstore\n        /* \"#utility.yul\":5188:5192   */\n      0x11\n        /* \"#utility.yul\":5185:5186   */\n      0x04\n        /* \"#utility.yul\":5178:5193   */\n      mstore\n        /* \"#utility.yul\":5212:5216   */\n      0x24\n        /* \"#utility.yul\":5209:5210   */\n      0x00\n        /* \"#utility.yul\":5202:5217   */\n      revert\n        /* \"#utility.yul\":5229:5420   */\n    tag_41:\n        /* \"#utility.yul\":5269:5272   */\n      0x00\n        /* \"#utility.yul\":5288:5308   */\n      tag_198\n        /* \"#utility.yul\":5306:5307   */\n      dup3\n        /* \"#utility.yul\":5288:5308   */\n      tag_112\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5283:5308   */\n      swap2\n      pop\n        /* \"#utility.yul\":5322:5342   */\n      tag_199\n        /* \"#utility.yul\":5340:5341   */\n      dup4\n        /* \"#utility.yul\":5322:5342   */\n      tag_112\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5317:5342   */\n      swap3\n      pop\n        /* \"#utility.yul\":5365:5366   */\n      dup3\n        /* \"#utility.yul\":5362:5363   */\n      dup3\n        /* \"#utility.yul\":5358:5367   */\n      add\n        /* \"#utility.yul\":5351:5367   */\n      swap1\n      pop\n        /* \"#utility.yul\":5386:5389   */\n      dup1\n        /* \"#utility.yul\":5383:5384   */\n      dup3\n        /* \"#utility.yul\":5380:5390   */\n      gt\n        /* \"#utility.yul\":5377:5413   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":5393:5411   */\n      tag_201\n      tag_124\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5377:5413   */\n    tag_200:\n        /* \"#utility.yul\":5229:5420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5426:5544   */\n    tag_125:\n        /* \"#utility.yul\":5513:5537   */\n      tag_203\n        /* \"#utility.yul\":5531:5536   */\n      dup2\n        /* \"#utility.yul\":5513:5537   */\n      tag_109\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5538   */\n      mstore\n        /* \"#utility.yul\":5426:5544   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5550:5662   */\n    tag_126:\n        /* \"#utility.yul\":5633:5655   */\n      tag_205\n        /* \"#utility.yul\":5649:5654   */\n      dup2\n        /* \"#utility.yul\":5633:5655   */\n      tag_117\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5628:5631   */\n      dup3\n        /* \"#utility.yul\":5621:5656   */\n      mstore\n        /* \"#utility.yul\":5550:5662   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5786   */\n    tag_127:\n        /* \"#utility.yul\":5755:5779   */\n      tag_207\n        /* \"#utility.yul\":5773:5778   */\n      dup2\n        /* \"#utility.yul\":5755:5779   */\n      tag_120\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5750:5753   */\n      dup3\n        /* \"#utility.yul\":5743:5780   */\n      mstore\n        /* \"#utility.yul\":5668:5786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5792:6670   */\n    tag_50:\n        /* \"#utility.yul\":6049:6053   */\n      0x00\n        /* \"#utility.yul\":6087:6090   */\n      0xe0\n        /* \"#utility.yul\":6076:6085   */\n      dup3\n        /* \"#utility.yul\":6072:6091   */\n      add\n        /* \"#utility.yul\":6064:6091   */\n      swap1\n      pop\n        /* \"#utility.yul\":6101:6172   */\n      tag_209\n        /* \"#utility.yul\":6169:6170   */\n      0x00\n        /* \"#utility.yul\":6158:6167   */\n      dup4\n        /* \"#utility.yul\":6154:6171   */\n      add\n        /* \"#utility.yul\":6145:6151   */\n      dup11\n        /* \"#utility.yul\":6101:6172   */\n      tag_125\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6182:6254   */\n      tag_210\n        /* \"#utility.yul\":6250:6252   */\n      0x20\n        /* \"#utility.yul\":6239:6248   */\n      dup4\n        /* \"#utility.yul\":6235:6253   */\n      add\n        /* \"#utility.yul\":6226:6232   */\n      dup10\n        /* \"#utility.yul\":6182:6254   */\n      tag_125\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6264:6336   */\n      tag_211\n        /* \"#utility.yul\":6332:6334   */\n      0x40\n        /* \"#utility.yul\":6321:6330   */\n      dup4\n        /* \"#utility.yul\":6317:6335   */\n      add\n        /* \"#utility.yul\":6308:6314   */\n      dup9\n        /* \"#utility.yul\":6264:6336   */\n      tag_123\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6346:6418   */\n      tag_212\n        /* \"#utility.yul\":6414:6416   */\n      0x60\n        /* \"#utility.yul\":6403:6412   */\n      dup4\n        /* \"#utility.yul\":6399:6417   */\n      add\n        /* \"#utility.yul\":6390:6396   */\n      dup8\n        /* \"#utility.yul\":6346:6418   */\n      tag_123\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6428:6497   */\n      tag_213\n        /* \"#utility.yul\":6492:6495   */\n      0x80\n        /* \"#utility.yul\":6481:6490   */\n      dup4\n        /* \"#utility.yul\":6477:6496   */\n      add\n        /* \"#utility.yul\":6468:6474   */\n      dup7\n        /* \"#utility.yul\":6428:6497   */\n      tag_126\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6507:6580   */\n      tag_214\n        /* \"#utility.yul\":6575:6578   */\n      0xa0\n        /* \"#utility.yul\":6564:6573   */\n      dup4\n        /* \"#utility.yul\":6560:6579   */\n      add\n        /* \"#utility.yul\":6551:6557   */\n      dup6\n        /* \"#utility.yul\":6507:6580   */\n      tag_127\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6590:6663   */\n      tag_215\n        /* \"#utility.yul\":6658:6661   */\n      0xc0\n        /* \"#utility.yul\":6647:6656   */\n      dup4\n        /* \"#utility.yul\":6643:6662   */\n      add\n        /* \"#utility.yul\":6634:6640   */\n      dup5\n        /* \"#utility.yul\":6590:6663   */\n      tag_127\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5792:6670   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6676:7008   */\n    tag_62:\n        /* \"#utility.yul\":6797:6801   */\n      0x00\n        /* \"#utility.yul\":6835:6837   */\n      0x40\n        /* \"#utility.yul\":6824:6833   */\n      dup3\n        /* \"#utility.yul\":6820:6838   */\n      add\n        /* \"#utility.yul\":6812:6838   */\n      swap1\n      pop\n        /* \"#utility.yul\":6848:6919   */\n      tag_217\n        /* \"#utility.yul\":6916:6917   */\n      0x00\n        /* \"#utility.yul\":6905:6914   */\n      dup4\n        /* \"#utility.yul\":6901:6918   */\n      add\n        /* \"#utility.yul\":6892:6898   */\n      dup6\n        /* \"#utility.yul\":6848:6919   */\n      tag_125\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6929:7001   */\n      tag_218\n        /* \"#utility.yul\":6997:6999   */\n      0x20\n        /* \"#utility.yul\":6986:6995   */\n      dup4\n        /* \"#utility.yul\":6982:7000   */\n      add\n        /* \"#utility.yul\":6973:6979   */\n      dup5\n        /* \"#utility.yul\":6929:7001   */\n      tag_123\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6676:7008   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7014:7130   */\n    tag_128:\n        /* \"#utility.yul\":7084:7105   */\n      tag_220\n        /* \"#utility.yul\":7099:7104   */\n      dup2\n        /* \"#utility.yul\":7084:7105   */\n      tag_115\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7077:7082   */\n      dup2\n        /* \"#utility.yul\":7074:7106   */\n      eq\n        /* \"#utility.yul\":7064:7124   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":7120:7121   */\n      0x00\n        /* \"#utility.yul\":7117:7118   */\n      dup1\n        /* \"#utility.yul\":7110:7122   */\n      revert\n        /* \"#utility.yul\":7064:7124   */\n    tag_221:\n        /* \"#utility.yul\":7014:7130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7136:7273   */\n    tag_129:\n        /* \"#utility.yul\":7190:7195   */\n      0x00\n        /* \"#utility.yul\":7221:7227   */\n      dup2\n        /* \"#utility.yul\":7215:7228   */\n      mload\n        /* \"#utility.yul\":7206:7228   */\n      swap1\n      pop\n        /* \"#utility.yul\":7237:7267   */\n      tag_223\n        /* \"#utility.yul\":7261:7266   */\n      dup2\n        /* \"#utility.yul\":7237:7267   */\n      tag_128\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7136:7273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7279:7624   */\n    tag_66:\n        /* \"#utility.yul\":7346:7352   */\n      0x00\n        /* \"#utility.yul\":7395:7397   */\n      0x20\n        /* \"#utility.yul\":7383:7392   */\n      dup3\n        /* \"#utility.yul\":7374:7381   */\n      dup5\n        /* \"#utility.yul\":7370:7393   */\n      sub\n        /* \"#utility.yul\":7366:7398   */\n      slt\n        /* \"#utility.yul\":7363:7482   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":7401:7480   */\n      tag_226\n      tag_106\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7363:7482   */\n    tag_225:\n        /* \"#utility.yul\":7521:7522   */\n      0x00\n        /* \"#utility.yul\":7546:7607   */\n      tag_227\n        /* \"#utility.yul\":7599:7606   */\n      dup5\n        /* \"#utility.yul\":7590:7596   */\n      dup3\n        /* \"#utility.yul\":7579:7588   */\n      dup6\n        /* \"#utility.yul\":7575:7597   */\n      add\n        /* \"#utility.yul\":7546:7607   */\n      tag_129\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7536:7607   */\n      swap2\n      pop\n        /* \"#utility.yul\":7492:7617   */\n      pop\n        /* \"#utility.yul\":7279:7624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7630:8072   */\n    tag_71:\n        /* \"#utility.yul\":7779:7783   */\n      0x00\n        /* \"#utility.yul\":7817:7819   */\n      0x60\n        /* \"#utility.yul\":7806:7815   */\n      dup3\n        /* \"#utility.yul\":7802:7820   */\n      add\n        /* \"#utility.yul\":7794:7820   */\n      swap1\n      pop\n        /* \"#utility.yul\":7830:7901   */\n      tag_229\n        /* \"#utility.yul\":7898:7899   */\n      0x00\n        /* \"#utility.yul\":7887:7896   */\n      dup4\n        /* \"#utility.yul\":7883:7900   */\n      add\n        /* \"#utility.yul\":7874:7880   */\n      dup7\n        /* \"#utility.yul\":7830:7901   */\n      tag_125\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7911:7983   */\n      tag_230\n        /* \"#utility.yul\":7979:7981   */\n      0x20\n        /* \"#utility.yul\":7968:7977   */\n      dup4\n        /* \"#utility.yul\":7964:7982   */\n      add\n        /* \"#utility.yul\":7955:7961   */\n      dup6\n        /* \"#utility.yul\":7911:7983   */\n      tag_125\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7993:8065   */\n      tag_231\n        /* \"#utility.yul\":8061:8063   */\n      0x40\n        /* \"#utility.yul\":8050:8059   */\n      dup4\n        /* \"#utility.yul\":8046:8064   */\n      add\n        /* \"#utility.yul\":8037:8043   */\n      dup5\n        /* \"#utility.yul\":7993:8065   */\n      tag_123\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7630:8072   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8078:8300   */\n    tag_80:\n        /* \"#utility.yul\":8171:8175   */\n      0x00\n        /* \"#utility.yul\":8209:8211   */\n      0x20\n        /* \"#utility.yul\":8198:8207   */\n      dup3\n        /* \"#utility.yul\":8194:8212   */\n      add\n        /* \"#utility.yul\":8186:8212   */\n      swap1\n      pop\n        /* \"#utility.yul\":8222:8293   */\n      tag_233\n        /* \"#utility.yul\":8290:8291   */\n      0x00\n        /* \"#utility.yul\":8279:8288   */\n      dup4\n        /* \"#utility.yul\":8275:8292   */\n      add\n        /* \"#utility.yul\":8266:8272   */\n      dup5\n        /* \"#utility.yul\":8222:8293   */\n      tag_125\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":8078:8300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8306:8404   */\n    tag_130:\n        /* \"#utility.yul\":8357:8363   */\n      0x00\n        /* \"#utility.yul\":8391:8396   */\n      dup2\n        /* \"#utility.yul\":8385:8397   */\n      mload\n        /* \"#utility.yul\":8375:8397   */\n      swap1\n      pop\n        /* \"#utility.yul\":8306:8404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8410:8557   */\n    tag_131:\n        /* \"#utility.yul\":8511:8522   */\n      0x00\n        /* \"#utility.yul\":8548:8551   */\n      dup2\n        /* \"#utility.yul\":8533:8551   */\n      swap1\n      pop\n        /* \"#utility.yul\":8410:8557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8563:8702   */\n    tag_132:\n        /* \"#utility.yul\":8652:8658   */\n      dup3\n        /* \"#utility.yul\":8647:8650   */\n      dup2\n        /* \"#utility.yul\":8642:8645   */\n      dup4\n        /* \"#utility.yul\":8636:8659   */\n      mcopy\n        /* \"#utility.yul\":8693:8694   */\n      0x00\n        /* \"#utility.yul\":8684:8690   */\n      dup4\n        /* \"#utility.yul\":8679:8682   */\n      dup4\n        /* \"#utility.yul\":8675:8691   */\n      add\n        /* \"#utility.yul\":8668:8695   */\n      mstore\n        /* \"#utility.yul\":8563:8702   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8708:9094   */\n    tag_133:\n        /* \"#utility.yul\":8812:8815   */\n      0x00\n        /* \"#utility.yul\":8840:8878   */\n      tag_238\n        /* \"#utility.yul\":8872:8877   */\n      dup3\n        /* \"#utility.yul\":8840:8878   */\n      tag_130\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8894:8982   */\n      tag_239\n        /* \"#utility.yul\":8975:8981   */\n      dup2\n        /* \"#utility.yul\":8970:8973   */\n      dup6\n        /* \"#utility.yul\":8894:8982   */\n      tag_131\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8887:8982   */\n      swap4\n      pop\n        /* \"#utility.yul\":8991:9056   */\n      tag_240\n        /* \"#utility.yul\":9049:9055   */\n      dup2\n        /* \"#utility.yul\":9044:9047   */\n      dup6\n        /* \"#utility.yul\":9037:9041   */\n      0x20\n        /* \"#utility.yul\":9030:9035   */\n      dup7\n        /* \"#utility.yul\":9026:9042   */\n      add\n        /* \"#utility.yul\":8991:9056   */\n      tag_132\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9081:9087   */\n      dup1\n        /* \"#utility.yul\":9076:9079   */\n      dup5\n        /* \"#utility.yul\":9072:9088   */\n      add\n        /* \"#utility.yul\":9065:9088   */\n      swap2\n      pop\n        /* \"#utility.yul\":8816:9094   */\n      pop\n        /* \"#utility.yul\":8708:9094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9100:9371   */\n    tag_88:\n        /* \"#utility.yul\":9230:9233   */\n      0x00\n        /* \"#utility.yul\":9252:9345   */\n      tag_242\n        /* \"#utility.yul\":9341:9344   */\n      dup3\n        /* \"#utility.yul\":9332:9338   */\n      dup5\n        /* \"#utility.yul\":9252:9345   */\n      tag_133\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":9245:9345   */\n      swap2\n      pop\n        /* \"#utility.yul\":9362:9365   */\n      dup2\n        /* \"#utility.yul\":9355:9365   */\n      swap1\n      pop\n        /* \"#utility.yul\":9100:9371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122072aa358bf284d71f5db5feb539f57fd6b23656cd1452ec72faced0c2390b81d364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50610db98061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c806324a756d11461006457806347e7ef24146100945780636b9d159d146100c457806370a08231146100f4578063c23f001f14610124578063f3fef3a314610154575b5f80fd5b61007e60048036038101906100799190610963565b610184565b60405161008b91906109bb565b60405180910390f35b6100ae60048036038101906100a99190610963565b61021c565b6040516100bb91906109bb565b60405180910390f35b6100de60048036038101906100d99190610a3d565b6102fb565b6040516100eb91906109bb565b60405180910390f35b61010e60048036038101906101099190610ac6565b6103c1565b60405161011b9190610b00565b60405180910390f35b61013e60048036038101906101399190610b19565b610441565b60405161014b9190610b00565b60405180910390f35b61016e60048036038101906101699190610963565b610460565b60405161017b91906109bb565b60405180910390f35b5f815f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020b9190610b84565b925050819055506001905092915050565b5f815f8111610257576040517f7d12343e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102638433308661060c565b825f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102e99190610b84565b92505081905550600191505092915050565b5f8673ffffffffffffffffffffffffffffffffffffffff1663d505accf333089898989896040518863ffffffff1660e01b81526004016103419796959493929190610be4565b5f604051808303815f87803b158015610358575f80fd5b505af115801561036a573d5f803e3d5ffd5b505050505f610379888861021c565b9050806103b2576040517f37a89cef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019150509695505050505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f602052815f5260405f20602052805f5260405f205f91509150505481565b5f815f811161049b576040517f7d12343e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561054b576040517e60b1ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610587929190610c51565b6020604051808303815f875af11580156105a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c79190610ca2565b905080610600576040517f8eda183b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019250505092915050565b610688848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161064193929190610ccd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061068e565b50505050565b5f6106b8828473ffffffffffffffffffffffffffffffffffffffff1661072390919063ffffffff16565b90505f8151141580156106dc5750808060200190518101906106da9190610ca2565b155b1561071e57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016107159190610d02565b60405180910390fd5b505050565b606061073083835f610738565b905092915050565b60608147101561077f57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016107769190610d02565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516107a79190610d6d565b5f6040518083038185875af1925050503d805f81146107e1576040519150601f19603f3d011682016040523d82523d5f602084013e6107e6565b606091505b50915091506107f6868383610801565b925050509392505050565b606082610816576108118261088e565b610886565b5f825114801561083c57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561087e57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016108759190610d02565b60405180910390fd5b819050610887565b5b9392505050565b5f815111156108a05780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108ff826108d6565b9050919050565b61090f816108f5565b8114610919575f80fd5b50565b5f8135905061092a81610906565b92915050565b5f819050919050565b61094281610930565b811461094c575f80fd5b50565b5f8135905061095d81610939565b92915050565b5f8060408385031215610979576109786108d2565b5b5f6109868582860161091c565b92505060206109978582860161094f565b9150509250929050565b5f8115159050919050565b6109b5816109a1565b82525050565b5f6020820190506109ce5f8301846109ac565b92915050565b5f60ff82169050919050565b6109e9816109d4565b81146109f3575f80fd5b50565b5f81359050610a04816109e0565b92915050565b5f819050919050565b610a1c81610a0a565b8114610a26575f80fd5b50565b5f81359050610a3781610a13565b92915050565b5f805f805f8060c08789031215610a5757610a566108d2565b5b5f610a6489828a0161091c565b9650506020610a7589828a0161094f565b9550506040610a8689828a0161094f565b9450506060610a9789828a016109f6565b9350506080610aa889828a01610a29565b92505060a0610ab989828a01610a29565b9150509295509295509295565b5f60208284031215610adb57610ada6108d2565b5b5f610ae88482850161091c565b91505092915050565b610afa81610930565b82525050565b5f602082019050610b135f830184610af1565b92915050565b5f8060408385031215610b2f57610b2e6108d2565b5b5f610b3c8582860161091c565b9250506020610b4d8582860161091c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b8e82610930565b9150610b9983610930565b9250828201905080821115610bb157610bb0610b57565b5b92915050565b610bc0816108f5565b82525050565b610bcf816109d4565b82525050565b610bde81610a0a565b82525050565b5f60e082019050610bf75f83018a610bb7565b610c046020830189610bb7565b610c116040830188610af1565b610c1e6060830187610af1565b610c2b6080830186610bc6565b610c3860a0830185610bd5565b610c4560c0830184610bd5565b98975050505050505050565b5f604082019050610c645f830185610bb7565b610c716020830184610af1565b9392505050565b610c81816109a1565b8114610c8b575f80fd5b50565b5f81519050610c9c81610c78565b92915050565b5f60208284031215610cb757610cb66108d2565b5b5f610cc484828501610c8e565b91505092915050565b5f606082019050610ce05f830186610bb7565b610ced6020830185610bb7565b610cfa6040830184610af1565b949350505050565b5f602082019050610d155f830184610bb7565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610d4782610d1b565b610d518185610d25565b9350610d61818560208601610d2f565b80840191505092915050565b5f610d788284610d3d565b91508190509291505056fea264697066735822122072aa358bf284d71f5db5feb539f57fd6b23656cd1452ec72faced0c2390b81d364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB9 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24A756D1 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x6B9D159D EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xC23F001F EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x154 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xB84 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT PUSH2 0x257 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7D12343E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP5 CALLER ADDRESS DUP7 PUSH2 0x60C JUMP JUMPDEST DUP3 PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0xB84 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH2 0x379 DUP9 DUP9 PUSH2 0x21C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37A89CEF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7D12343E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH31 0x60B1CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP3 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8EDA183B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x688 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x641 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x68E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B8 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x723 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x6DC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x71E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x730 DUP4 DUP4 PUSH0 PUSH2 0x738 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x77F JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7F6 DUP7 DUP4 DUP4 PUSH2 0x801 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x816 JUMPI PUSH2 0x811 DUP3 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x83C JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x87E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x887 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x8A0 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8FF DUP3 PUSH2 0x8D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90F DUP2 PUSH2 0x8F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x919 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x92A DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x942 DUP2 PUSH2 0x930 JUMP JUMPDEST DUP2 EQ PUSH2 0x94C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x95D DUP2 PUSH2 0x939 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x979 JUMPI PUSH2 0x978 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x986 DUP6 DUP3 DUP7 ADD PUSH2 0x91C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x997 DUP6 DUP3 DUP7 ADD PUSH2 0x94F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B5 DUP2 PUSH2 0x9A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9CE PUSH0 DUP4 ADD DUP5 PUSH2 0x9AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E9 DUP2 PUSH2 0x9D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA04 DUP2 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1C DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP2 EQ PUSH2 0xA26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA37 DUP2 PUSH2 0xA13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA57 JUMPI PUSH2 0xA56 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA64 DUP10 DUP3 DUP11 ADD PUSH2 0x91C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xA75 DUP10 DUP3 DUP11 ADD PUSH2 0x94F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xA86 DUP10 DUP3 DUP11 ADD PUSH2 0x94F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xA97 DUP10 DUP3 DUP11 ADD PUSH2 0x9F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0xAA8 DUP10 DUP3 DUP11 ADD PUSH2 0xA29 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0xAB9 DUP10 DUP3 DUP11 ADD PUSH2 0xA29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADB JUMPI PUSH2 0xADA PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAE8 DUP5 DUP3 DUP6 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFA DUP2 PUSH2 0x930 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB13 PUSH0 DUP4 ADD DUP5 PUSH2 0xAF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB3C DUP6 DUP3 DUP7 ADD PUSH2 0x91C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB4D DUP6 DUP3 DUP7 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB8E DUP3 PUSH2 0x930 JUMP JUMPDEST SWAP2 POP PUSH2 0xB99 DUP4 PUSH2 0x930 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB0 PUSH2 0xB57 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC0 DUP2 PUSH2 0x8F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBCF DUP2 PUSH2 0x9D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBDE DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xBF7 PUSH0 DUP4 ADD DUP11 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xC04 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xC11 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xC1E PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xC2B PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0xC38 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0xC45 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xBD5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC64 PUSH0 DUP4 ADD DUP6 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xC71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC81 DUP2 PUSH2 0x9A1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC9C DUP2 PUSH2 0xC78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB7 JUMPI PUSH2 0xCB6 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCC4 DUP5 DUP3 DUP6 ADD PUSH2 0xC8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCE0 PUSH0 DUP4 ADD DUP7 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xCED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xCFA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAF1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD15 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD47 DUP3 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0xD51 DUP2 DUP6 PUSH2 0xD25 JUMP JUMPDEST SWAP4 POP PUSH2 0xD61 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD2F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD78 DUP3 DUP5 PUSH2 0xD3D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xAA358BF284D71F5DB5FEB539F57FD6B23656CD EQ MSTORE 0xEC PUSH19 0xFACED0C2390B81D364736F6C63430008190033 ",
							"sourceMap": "365:2473:5:-:0;;;789:22;;;;;;;;;;365:2473;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 1678,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 2190,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_887": {
									"entryPoint": 961,
									"id": 887,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balances_694": {
									"entryPoint": 1089,
									"id": 694,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositPermit_826": {
									"entryPoint": 763,
									"id": 826,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@deposit_752": {
									"entryPoint": 540,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_523": {
									"entryPoint": 1848,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 1827,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferFrom_190": {
									"entryPoint": 1548,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@tokensReceived_774": {
									"entryPoint": 388,
									"id": 774,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 2049,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_872": {
									"entryPoint": 1120,
									"id": 872,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 3044,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3153,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3375,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9374:6",
										"nodeType": "YulBlock",
										"src": "0:9374:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "886:32:6",
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nativeSrc": "896:16:6",
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:6",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:6",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:6",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nativeSrc": "967:79:6",
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:6",
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nativeSrc": "1026:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nativeSrc": "1026:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nativeSrc": "997:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nativeSrc": "987:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nativeSrc": "980:43:6",
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nativeSrc": "977:63:6",
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:6",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nativeSrc": "1104:87:6",
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nativeSrc": "1114:29:6",
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nativeSrc": "1123:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nativeSrc": "1152:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nativeSrc": "1152:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:6",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:6",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:6",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nativeSrc": "1280:391:6",
													"nodeType": "YulBlock",
													"src": "1280:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:6",
																"nodeType": "YulBlock",
																"src": "1326:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:6"
																			},
																			"nativeSrc": "1328:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:6"
																		},
																		"nativeSrc": "1328:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:6"
																		},
																		"nativeSrc": "1297:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:6"
																},
																"nativeSrc": "1293:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:6"
															},
															"nativeSrc": "1290:119:6",
															"nodeType": "YulIf",
															"src": "1290:119:6"
														},
														{
															"nativeSrc": "1419:117:6",
															"nodeType": "YulBlock",
															"src": "1419:117:6",
															"statements": [
																{
																	"nativeSrc": "1434:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:6"
																				},
																				"nativeSrc": "1494:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:6"
																		},
																		"nativeSrc": "1473:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:6",
															"nodeType": "YulBlock",
															"src": "1546:118:6",
															"statements": [
																{
																	"nativeSrc": "1561:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:6"
																				},
																				"nativeSrc": "1622:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:6"
																		},
																		"nativeSrc": "1601:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:6",
														"nodeType": "YulTypedName",
														"src": "1242:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:6",
														"nodeType": "YulTypedName",
														"src": "1253:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:6",
														"nodeType": "YulTypedName",
														"src": "1265:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:6",
														"nodeType": "YulTypedName",
														"src": "1273:6:6",
														"type": ""
													}
												],
												"src": "1197:474:6"
											},
											{
												"body": {
													"nativeSrc": "1719:48:6",
													"nodeType": "YulBlock",
													"src": "1719:48:6",
													"statements": [
														{
															"nativeSrc": "1729:32:6",
															"nodeType": "YulAssignment",
															"src": "1729:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1754:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1754:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1747:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1747:6:6"
																		},
																		"nativeSrc": "1747:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1747:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1740:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:6"
																},
																"nativeSrc": "1740:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1740:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1729:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1677:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1701:5:6",
														"nodeType": "YulTypedName",
														"src": "1701:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1711:7:6",
														"nodeType": "YulTypedName",
														"src": "1711:7:6",
														"type": ""
													}
												],
												"src": "1677:90:6"
											},
											{
												"body": {
													"nativeSrc": "1832:50:6",
													"nodeType": "YulBlock",
													"src": "1832:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1849:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1849:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1854:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1854:14:6"
																		},
																		"nativeSrc": "1854:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1842:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:6"
																},
																"nativeSrc": "1842:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1842:34:6"
															},
															"nativeSrc": "1842:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1842:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1773:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1820:5:6",
														"nodeType": "YulTypedName",
														"src": "1820:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1827:3:6",
														"nodeType": "YulTypedName",
														"src": "1827:3:6",
														"type": ""
													}
												],
												"src": "1773:109:6"
											},
											{
												"body": {
													"nativeSrc": "1980:118:6",
													"nodeType": "YulBlock",
													"src": "1980:118:6",
													"statements": [
														{
															"nativeSrc": "1990:26:6",
															"nodeType": "YulAssignment",
															"src": "1990:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2002:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2013:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1998:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:6"
																},
																"nativeSrc": "1998:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1998:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1990:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2064:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2064:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2088:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2088:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2073:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:6"
																		},
																		"nativeSrc": "2073:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2026:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "2026:37:6"
																},
																"nativeSrc": "2026:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2026:65:6"
															},
															"nativeSrc": "2026:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2026:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1888:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1952:9:6",
														"nodeType": "YulTypedName",
														"src": "1952:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1964:6:6",
														"nodeType": "YulTypedName",
														"src": "1964:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1975:4:6",
														"nodeType": "YulTypedName",
														"src": "1975:4:6",
														"type": ""
													}
												],
												"src": "1888:210:6"
											},
											{
												"body": {
													"nativeSrc": "2147:43:6",
													"nodeType": "YulBlock",
													"src": "2147:43:6",
													"statements": [
														{
															"nativeSrc": "2157:27:6",
															"nodeType": "YulAssignment",
															"src": "2157:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2172:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2172:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2179:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2179:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2168:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:6"
																},
																"nativeSrc": "2168:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2168:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2157:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2157:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2104:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2129:5:6",
														"nodeType": "YulTypedName",
														"src": "2129:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2139:7:6",
														"nodeType": "YulTypedName",
														"src": "2139:7:6",
														"type": ""
													}
												],
												"src": "2104:86:6"
											},
											{
												"body": {
													"nativeSrc": "2237:77:6",
													"nodeType": "YulBlock",
													"src": "2237:77:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2292:16:6",
																"nodeType": "YulBlock",
																"src": "2292:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2301:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2301:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2304:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2304:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2294:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2294:6:6"
																			},
																			"nativeSrc": "2294:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2294:12:6"
																		},
																		"nativeSrc": "2294:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2294:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2260:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2260:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2283:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2283:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "2267:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "2267:15:6"
																				},
																				"nativeSrc": "2267:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2267:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2257:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2257:2:6"
																		},
																		"nativeSrc": "2257:33:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2257:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2250:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2250:6:6"
																},
																"nativeSrc": "2250:41:6",
																"nodeType": "YulFunctionCall",
																"src": "2250:41:6"
															},
															"nativeSrc": "2247:61:6",
															"nodeType": "YulIf",
															"src": "2247:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "2196:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2230:5:6",
														"nodeType": "YulTypedName",
														"src": "2230:5:6",
														"type": ""
													}
												],
												"src": "2196:118:6"
											},
											{
												"body": {
													"nativeSrc": "2370:85:6",
													"nodeType": "YulBlock",
													"src": "2370:85:6",
													"statements": [
														{
															"nativeSrc": "2380:29:6",
															"nodeType": "YulAssignment",
															"src": "2380:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2402:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2402:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2389:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2389:12:6"
																},
																"nativeSrc": "2389:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2389:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2380:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2380:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2443:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "2418:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "2418:24:6"
																},
																"nativeSrc": "2418:31:6",
																"nodeType": "YulFunctionCall",
																"src": "2418:31:6"
															},
															"nativeSrc": "2418:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "2418:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "2320:135:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2348:6:6",
														"nodeType": "YulTypedName",
														"src": "2348:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2356:3:6",
														"nodeType": "YulTypedName",
														"src": "2356:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2364:5:6",
														"nodeType": "YulTypedName",
														"src": "2364:5:6",
														"type": ""
													}
												],
												"src": "2320:135:6"
											},
											{
												"body": {
													"nativeSrc": "2506:32:6",
													"nodeType": "YulBlock",
													"src": "2506:32:6",
													"statements": [
														{
															"nativeSrc": "2516:16:6",
															"nodeType": "YulAssignment",
															"src": "2516:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2527:5:6",
																"nodeType": "YulIdentifier",
																"src": "2527:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2516:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2516:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2461:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2488:5:6",
														"nodeType": "YulTypedName",
														"src": "2488:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2498:7:6",
														"nodeType": "YulTypedName",
														"src": "2498:7:6",
														"type": ""
													}
												],
												"src": "2461:77:6"
											},
											{
												"body": {
													"nativeSrc": "2587:79:6",
													"nodeType": "YulBlock",
													"src": "2587:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2644:16:6",
																"nodeType": "YulBlock",
																"src": "2644:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2653:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2653:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2656:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2656:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2646:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:6"
																			},
																			"nativeSrc": "2646:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2646:12:6"
																		},
																		"nativeSrc": "2646:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2646:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2610:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2610:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2635:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2635:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2617:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2617:17:6"
																				},
																				"nativeSrc": "2617:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2617:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2607:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2607:2:6"
																		},
																		"nativeSrc": "2607:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2607:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2600:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2600:6:6"
																},
																"nativeSrc": "2600:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2600:43:6"
															},
															"nativeSrc": "2597:63:6",
															"nodeType": "YulIf",
															"src": "2597:63:6"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2544:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2580:5:6",
														"nodeType": "YulTypedName",
														"src": "2580:5:6",
														"type": ""
													}
												],
												"src": "2544:122:6"
											},
											{
												"body": {
													"nativeSrc": "2724:87:6",
													"nodeType": "YulBlock",
													"src": "2724:87:6",
													"statements": [
														{
															"nativeSrc": "2734:29:6",
															"nodeType": "YulAssignment",
															"src": "2734:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2756:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2756:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2743:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2743:12:6"
																},
																"nativeSrc": "2743:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2743:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2734:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2734:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2799:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2799:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "2772:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2772:26:6"
																},
																"nativeSrc": "2772:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2772:33:6"
															},
															"nativeSrc": "2772:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2772:33:6"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "2672:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2702:6:6",
														"nodeType": "YulTypedName",
														"src": "2702:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2710:3:6",
														"nodeType": "YulTypedName",
														"src": "2710:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2718:5:6",
														"nodeType": "YulTypedName",
														"src": "2718:5:6",
														"type": ""
													}
												],
												"src": "2672:139:6"
											},
											{
												"body": {
													"nativeSrc": "2966:904:6",
													"nodeType": "YulBlock",
													"src": "2966:904:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3013:83:6",
																"nodeType": "YulBlock",
																"src": "3013:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3015:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3015:77:6"
																			},
																			"nativeSrc": "3015:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3015:79:6"
																		},
																		"nativeSrc": "3015:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3015:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2987:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2987:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2996:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2996:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2983:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:6"
																		},
																		"nativeSrc": "2983:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3008:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3008:3:6",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2979:3:6"
																},
																"nativeSrc": "2979:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2979:33:6"
															},
															"nativeSrc": "2976:120:6",
															"nodeType": "YulIf",
															"src": "2976:120:6"
														},
														{
															"nativeSrc": "3106:117:6",
															"nodeType": "YulBlock",
															"src": "3106:117:6",
															"statements": [
																{
																	"nativeSrc": "3121:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3121:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3135:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3135:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3125:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3125:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3150:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3150:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3185:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3185:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3196:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3196:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3181:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3181:3:6"
																				},
																				"nativeSrc": "3181:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3181:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3205:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3205:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3160:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3160:20:6"
																		},
																		"nativeSrc": "3160:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3160:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3150:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3150:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3233:118:6",
															"nodeType": "YulBlock",
															"src": "3233:118:6",
															"statements": [
																{
																	"nativeSrc": "3248:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3248:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3262:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3262:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3252:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3252:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3278:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3278:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3313:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3313:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3324:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3324:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3309:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3309:3:6"
																				},
																				"nativeSrc": "3309:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3309:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3333:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3333:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3288:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3288:20:6"
																		},
																		"nativeSrc": "3288:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3288:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3278:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3278:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3361:118:6",
															"nodeType": "YulBlock",
															"src": "3361:118:6",
															"statements": [
																{
																	"nativeSrc": "3376:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3376:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3390:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3390:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3380:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3380:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3406:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3406:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3441:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3441:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3452:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3452:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3437:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3437:3:6"
																				},
																				"nativeSrc": "3437:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3437:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3461:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3461:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3416:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3416:20:6"
																		},
																		"nativeSrc": "3416:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3416:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3406:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3406:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3489:116:6",
															"nodeType": "YulBlock",
															"src": "3489:116:6",
															"statements": [
																{
																	"nativeSrc": "3504:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3504:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3518:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3518:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3508:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3508:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3534:61:6",
																	"nodeType": "YulAssignment",
																	"src": "3534:61:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3567:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3567:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3578:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3578:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3563:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3563:3:6"
																				},
																				"nativeSrc": "3563:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3563:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3587:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3587:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "3544:18:6",
																			"nodeType": "YulIdentifier",
																			"src": "3544:18:6"
																		},
																		"nativeSrc": "3544:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3544:51:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3534:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3534:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3615:119:6",
															"nodeType": "YulBlock",
															"src": "3615:119:6",
															"statements": [
																{
																	"nativeSrc": "3630:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3630:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3644:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3644:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3634:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3634:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3661:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3661:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3696:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3696:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3707:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3707:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3692:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3692:3:6"
																				},
																				"nativeSrc": "3692:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3692:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3716:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3716:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3671:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3671:20:6"
																		},
																		"nativeSrc": "3671:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3671:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "3661:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3661:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3744:119:6",
															"nodeType": "YulBlock",
															"src": "3744:119:6",
															"statements": [
																{
																	"nativeSrc": "3759:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3759:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3773:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3773:3:6",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3763:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3763:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3790:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3790:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3825:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3825:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3836:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3836:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3821:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3821:3:6"
																				},
																				"nativeSrc": "3821:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3821:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3845:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3845:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3800:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3800:20:6"
																		},
																		"nativeSrc": "3800:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3800:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "3790:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3790:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "2817:1053:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2896:9:6",
														"nodeType": "YulTypedName",
														"src": "2896:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2907:7:6",
														"nodeType": "YulTypedName",
														"src": "2907:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2919:6:6",
														"nodeType": "YulTypedName",
														"src": "2919:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2927:6:6",
														"nodeType": "YulTypedName",
														"src": "2927:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2935:6:6",
														"nodeType": "YulTypedName",
														"src": "2935:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2943:6:6",
														"nodeType": "YulTypedName",
														"src": "2943:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2951:6:6",
														"nodeType": "YulTypedName",
														"src": "2951:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2959:6:6",
														"nodeType": "YulTypedName",
														"src": "2959:6:6",
														"type": ""
													}
												],
												"src": "2817:1053:6"
											},
											{
												"body": {
													"nativeSrc": "3942:263:6",
													"nodeType": "YulBlock",
													"src": "3942:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3988:83:6",
																"nodeType": "YulBlock",
																"src": "3988:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3990:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3990:77:6"
																			},
																			"nativeSrc": "3990:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3990:79:6"
																		},
																		"nativeSrc": "3990:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3990:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3963:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3963:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3972:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3972:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3959:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3959:3:6"
																		},
																		"nativeSrc": "3959:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3959:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3984:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3984:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3955:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3955:3:6"
																},
																"nativeSrc": "3955:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3955:32:6"
															},
															"nativeSrc": "3952:119:6",
															"nodeType": "YulIf",
															"src": "3952:119:6"
														},
														{
															"nativeSrc": "4081:117:6",
															"nodeType": "YulBlock",
															"src": "4081:117:6",
															"statements": [
																{
																	"nativeSrc": "4096:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4096:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4110:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4110:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4100:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4100:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4125:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4125:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4160:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4160:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4171:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4171:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4156:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4156:3:6"
																				},
																				"nativeSrc": "4156:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4156:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4180:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4180:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4135:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4135:20:6"
																		},
																		"nativeSrc": "4135:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4135:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4125:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4125:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3876:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3912:9:6",
														"nodeType": "YulTypedName",
														"src": "3912:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3923:7:6",
														"nodeType": "YulTypedName",
														"src": "3923:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3935:6:6",
														"nodeType": "YulTypedName",
														"src": "3935:6:6",
														"type": ""
													}
												],
												"src": "3876:329:6"
											},
											{
												"body": {
													"nativeSrc": "4276:53:6",
													"nodeType": "YulBlock",
													"src": "4276:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4293:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4293:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4316:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4316:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4298:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4298:17:6"
																		},
																		"nativeSrc": "4298:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4298:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4286:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4286:6:6"
																},
																"nativeSrc": "4286:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4286:37:6"
															},
															"nativeSrc": "4286:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4286:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4211:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4264:5:6",
														"nodeType": "YulTypedName",
														"src": "4264:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4271:3:6",
														"nodeType": "YulTypedName",
														"src": "4271:3:6",
														"type": ""
													}
												],
												"src": "4211:118:6"
											},
											{
												"body": {
													"nativeSrc": "4433:124:6",
													"nodeType": "YulBlock",
													"src": "4433:124:6",
													"statements": [
														{
															"nativeSrc": "4443:26:6",
															"nodeType": "YulAssignment",
															"src": "4443:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4455:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4455:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4466:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4466:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4451:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4451:3:6"
																},
																"nativeSrc": "4451:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4451:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4443:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4443:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4523:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4523:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4536:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4536:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4547:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4547:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:6"
																		},
																		"nativeSrc": "4532:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4532:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4479:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:43:6"
																},
																"nativeSrc": "4479:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:71:6"
															},
															"nativeSrc": "4479:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4335:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4405:9:6",
														"nodeType": "YulTypedName",
														"src": "4405:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4417:6:6",
														"nodeType": "YulTypedName",
														"src": "4417:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4428:4:6",
														"nodeType": "YulTypedName",
														"src": "4428:4:6",
														"type": ""
													}
												],
												"src": "4335:222:6"
											},
											{
												"body": {
													"nativeSrc": "4646:391:6",
													"nodeType": "YulBlock",
													"src": "4646:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4692:83:6",
																"nodeType": "YulBlock",
																"src": "4692:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4694:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4694:77:6"
																			},
																			"nativeSrc": "4694:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4694:79:6"
																		},
																		"nativeSrc": "4694:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4694:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4667:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4667:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4676:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4676:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4663:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4663:3:6"
																		},
																		"nativeSrc": "4663:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4663:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4688:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4688:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4659:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:6"
																},
																"nativeSrc": "4659:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4659:32:6"
															},
															"nativeSrc": "4656:119:6",
															"nodeType": "YulIf",
															"src": "4656:119:6"
														},
														{
															"nativeSrc": "4785:117:6",
															"nodeType": "YulBlock",
															"src": "4785:117:6",
															"statements": [
																{
																	"nativeSrc": "4800:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4800:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4814:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4814:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4804:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4804:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4829:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4829:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4864:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4864:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4875:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4875:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4860:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4860:3:6"
																				},
																				"nativeSrc": "4860:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4860:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4884:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4884:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4839:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4839:20:6"
																		},
																		"nativeSrc": "4839:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4839:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4829:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4829:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4912:118:6",
															"nodeType": "YulBlock",
															"src": "4912:118:6",
															"statements": [
																{
																	"nativeSrc": "4927:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4927:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4941:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4941:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4931:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4931:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4957:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4957:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4992:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4992:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5003:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5003:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4988:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4988:3:6"
																				},
																				"nativeSrc": "4988:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4988:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5012:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5012:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4967:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4967:20:6"
																		},
																		"nativeSrc": "4967:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4967:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4957:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4957:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4563:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4608:9:6",
														"nodeType": "YulTypedName",
														"src": "4608:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4619:7:6",
														"nodeType": "YulTypedName",
														"src": "4619:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4631:6:6",
														"nodeType": "YulTypedName",
														"src": "4631:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4639:6:6",
														"nodeType": "YulTypedName",
														"src": "4639:6:6",
														"type": ""
													}
												],
												"src": "4563:474:6"
											},
											{
												"body": {
													"nativeSrc": "5071:152:6",
													"nodeType": "YulBlock",
													"src": "5071:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5088:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5088:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5091:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5091:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5081:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5081:6:6"
																},
																"nativeSrc": "5081:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5081:88:6"
															},
															"nativeSrc": "5081:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5081:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5185:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5185:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5188:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5188:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5178:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5178:6:6"
																},
																"nativeSrc": "5178:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5178:15:6"
															},
															"nativeSrc": "5178:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5178:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5209:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5209:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5212:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5212:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5202:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:6"
																},
																"nativeSrc": "5202:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5202:15:6"
															},
															"nativeSrc": "5202:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5202:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5043:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5043:180:6"
											},
											{
												"body": {
													"nativeSrc": "5273:147:6",
													"nodeType": "YulBlock",
													"src": "5273:147:6",
													"statements": [
														{
															"nativeSrc": "5283:25:6",
															"nodeType": "YulAssignment",
															"src": "5283:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5306:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5306:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5288:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5288:17:6"
																},
																"nativeSrc": "5288:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5288:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5283:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5283:1:6"
																}
															]
														},
														{
															"nativeSrc": "5317:25:6",
															"nodeType": "YulAssignment",
															"src": "5317:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5340:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5340:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5322:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5322:17:6"
																},
																"nativeSrc": "5322:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5322:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5317:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5317:1:6"
																}
															]
														},
														{
															"nativeSrc": "5351:16:6",
															"nodeType": "YulAssignment",
															"src": "5351:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5362:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5362:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5365:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5365:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5358:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5358:3:6"
																},
																"nativeSrc": "5358:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5358:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5351:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5351:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5391:22:6",
																"nodeType": "YulBlock",
																"src": "5391:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5393:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5393:16:6"
																			},
																			"nativeSrc": "5393:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5393:18:6"
																		},
																		"nativeSrc": "5393:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5393:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5383:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5383:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5386:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5386:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5380:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:6"
																},
																"nativeSrc": "5380:10:6",
																"nodeType": "YulFunctionCall",
																"src": "5380:10:6"
															},
															"nativeSrc": "5377:36:6",
															"nodeType": "YulIf",
															"src": "5377:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5229:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5260:1:6",
														"nodeType": "YulTypedName",
														"src": "5260:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5263:1:6",
														"nodeType": "YulTypedName",
														"src": "5263:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5269:3:6",
														"nodeType": "YulTypedName",
														"src": "5269:3:6",
														"type": ""
													}
												],
												"src": "5229:191:6"
											},
											{
												"body": {
													"nativeSrc": "5491:53:6",
													"nodeType": "YulBlock",
													"src": "5491:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5508:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5531:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5531:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5513:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5513:17:6"
																		},
																		"nativeSrc": "5513:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5513:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5501:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:6"
																},
																"nativeSrc": "5501:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5501:37:6"
															},
															"nativeSrc": "5501:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5501:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5426:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5479:5:6",
														"nodeType": "YulTypedName",
														"src": "5479:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5486:3:6",
														"nodeType": "YulTypedName",
														"src": "5486:3:6",
														"type": ""
													}
												],
												"src": "5426:118:6"
											},
											{
												"body": {
													"nativeSrc": "5611:51:6",
													"nodeType": "YulBlock",
													"src": "5611:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5628:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5628:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5649:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5649:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5633:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "5633:15:6"
																		},
																		"nativeSrc": "5633:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5633:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5621:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:6"
																},
																"nativeSrc": "5621:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5621:35:6"
															},
															"nativeSrc": "5621:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5621:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5550:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5599:5:6",
														"nodeType": "YulTypedName",
														"src": "5599:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5606:3:6",
														"nodeType": "YulTypedName",
														"src": "5606:3:6",
														"type": ""
													}
												],
												"src": "5550:112:6"
											},
											{
												"body": {
													"nativeSrc": "5733:53:6",
													"nodeType": "YulBlock",
													"src": "5733:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5750:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5750:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5773:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5773:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5755:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5755:17:6"
																		},
																		"nativeSrc": "5755:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5755:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5743:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5743:6:6"
																},
																"nativeSrc": "5743:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5743:37:6"
															},
															"nativeSrc": "5743:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5743:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5668:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5721:5:6",
														"nodeType": "YulTypedName",
														"src": "5721:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5728:3:6",
														"nodeType": "YulTypedName",
														"src": "5728:3:6",
														"type": ""
													}
												],
												"src": "5668:118:6"
											},
											{
												"body": {
													"nativeSrc": "6054:616:6",
													"nodeType": "YulBlock",
													"src": "6054:616:6",
													"statements": [
														{
															"nativeSrc": "6064:27:6",
															"nodeType": "YulAssignment",
															"src": "6064:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6076:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6076:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6087:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6087:3:6",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6072:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6072:3:6"
																},
																"nativeSrc": "6072:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6072:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6064:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6064:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6145:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6145:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6158:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6158:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6169:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6169:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6154:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6154:3:6"
																		},
																		"nativeSrc": "6154:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6154:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6101:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6101:43:6"
																},
																"nativeSrc": "6101:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6101:71:6"
															},
															"nativeSrc": "6101:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6101:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6226:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6226:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6239:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6239:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6250:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6250:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6235:3:6"
																		},
																		"nativeSrc": "6235:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6235:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6182:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6182:43:6"
																},
																"nativeSrc": "6182:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6182:72:6"
															},
															"nativeSrc": "6182:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6182:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6308:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6308:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6321:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6321:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6332:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6332:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6317:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6317:3:6"
																		},
																		"nativeSrc": "6317:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6317:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6264:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6264:43:6"
																},
																"nativeSrc": "6264:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6264:72:6"
															},
															"nativeSrc": "6264:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6264:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6390:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6390:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6403:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6403:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6414:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6414:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:6"
																		},
																		"nativeSrc": "6399:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6399:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6346:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6346:43:6"
																},
																"nativeSrc": "6346:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6346:72:6"
															},
															"nativeSrc": "6346:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6346:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6468:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6468:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6481:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6481:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6492:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6492:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6477:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6477:3:6"
																		},
																		"nativeSrc": "6477:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6477:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6428:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "6428:39:6"
																},
																"nativeSrc": "6428:69:6",
																"nodeType": "YulFunctionCall",
																"src": "6428:69:6"
															},
															"nativeSrc": "6428:69:6",
															"nodeType": "YulExpressionStatement",
															"src": "6428:69:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "6551:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6551:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6575:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6575:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6560:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:6"
																		},
																		"nativeSrc": "6560:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6507:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6507:43:6"
																},
																"nativeSrc": "6507:73:6",
																"nodeType": "YulFunctionCall",
																"src": "6507:73:6"
															},
															"nativeSrc": "6507:73:6",
															"nodeType": "YulExpressionStatement",
															"src": "6507:73:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "6634:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6634:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6647:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6647:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6658:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6658:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6643:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6643:3:6"
																		},
																		"nativeSrc": "6643:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6643:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6590:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6590:43:6"
																},
																"nativeSrc": "6590:73:6",
																"nodeType": "YulFunctionCall",
																"src": "6590:73:6"
															},
															"nativeSrc": "6590:73:6",
															"nodeType": "YulExpressionStatement",
															"src": "6590:73:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "5792:878:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5978:9:6",
														"nodeType": "YulTypedName",
														"src": "5978:9:6",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "5990:6:6",
														"nodeType": "YulTypedName",
														"src": "5990:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5998:6:6",
														"nodeType": "YulTypedName",
														"src": "5998:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6006:6:6",
														"nodeType": "YulTypedName",
														"src": "6006:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6014:6:6",
														"nodeType": "YulTypedName",
														"src": "6014:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6022:6:6",
														"nodeType": "YulTypedName",
														"src": "6022:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6030:6:6",
														"nodeType": "YulTypedName",
														"src": "6030:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6038:6:6",
														"nodeType": "YulTypedName",
														"src": "6038:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6049:4:6",
														"nodeType": "YulTypedName",
														"src": "6049:4:6",
														"type": ""
													}
												],
												"src": "5792:878:6"
											},
											{
												"body": {
													"nativeSrc": "6802:206:6",
													"nodeType": "YulBlock",
													"src": "6802:206:6",
													"statements": [
														{
															"nativeSrc": "6812:26:6",
															"nodeType": "YulAssignment",
															"src": "6812:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6824:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6824:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6835:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6820:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6820:3:6"
																},
																"nativeSrc": "6820:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6820:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6812:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6812:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6892:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6892:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6905:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6905:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6916:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6916:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6901:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:6"
																		},
																		"nativeSrc": "6901:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6901:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6848:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6848:43:6"
																},
																"nativeSrc": "6848:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6848:71:6"
															},
															"nativeSrc": "6848:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6848:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6973:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6973:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6986:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6986:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6997:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6997:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6982:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6982:3:6"
																		},
																		"nativeSrc": "6982:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6982:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6929:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6929:43:6"
																},
																"nativeSrc": "6929:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6929:72:6"
															},
															"nativeSrc": "6929:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6929:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6676:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6766:9:6",
														"nodeType": "YulTypedName",
														"src": "6766:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6778:6:6",
														"nodeType": "YulTypedName",
														"src": "6778:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6786:6:6",
														"nodeType": "YulTypedName",
														"src": "6786:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6797:4:6",
														"nodeType": "YulTypedName",
														"src": "6797:4:6",
														"type": ""
													}
												],
												"src": "6676:332:6"
											},
											{
												"body": {
													"nativeSrc": "7054:76:6",
													"nodeType": "YulBlock",
													"src": "7054:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7108:16:6",
																"nodeType": "YulBlock",
																"src": "7108:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7117:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7117:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7120:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7120:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7110:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7110:6:6"
																			},
																			"nativeSrc": "7110:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7110:12:6"
																		},
																		"nativeSrc": "7110:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7110:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7077:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7077:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7099:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7099:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7084:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "7084:14:6"
																				},
																				"nativeSrc": "7084:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7084:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7074:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7074:2:6"
																		},
																		"nativeSrc": "7074:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7074:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7067:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7067:6:6"
																},
																"nativeSrc": "7067:40:6",
																"nodeType": "YulFunctionCall",
																"src": "7067:40:6"
															},
															"nativeSrc": "7064:60:6",
															"nodeType": "YulIf",
															"src": "7064:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7014:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7047:5:6",
														"nodeType": "YulTypedName",
														"src": "7047:5:6",
														"type": ""
													}
												],
												"src": "7014:116:6"
											},
											{
												"body": {
													"nativeSrc": "7196:77:6",
													"nodeType": "YulBlock",
													"src": "7196:77:6",
													"statements": [
														{
															"nativeSrc": "7206:22:6",
															"nodeType": "YulAssignment",
															"src": "7206:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7221:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7221:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7215:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7215:5:6"
																},
																"nativeSrc": "7215:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7215:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7206:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7206:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7261:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7261:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7237:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "7237:23:6"
																},
																"nativeSrc": "7237:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7237:30:6"
															},
															"nativeSrc": "7237:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7237:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7136:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7174:6:6",
														"nodeType": "YulTypedName",
														"src": "7174:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7182:3:6",
														"nodeType": "YulTypedName",
														"src": "7182:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7190:5:6",
														"nodeType": "YulTypedName",
														"src": "7190:5:6",
														"type": ""
													}
												],
												"src": "7136:137:6"
											},
											{
												"body": {
													"nativeSrc": "7353:271:6",
													"nodeType": "YulBlock",
													"src": "7353:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7399:83:6",
																"nodeType": "YulBlock",
																"src": "7399:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7401:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7401:77:6"
																			},
																			"nativeSrc": "7401:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7401:79:6"
																		},
																		"nativeSrc": "7401:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7401:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7374:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7374:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7383:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7383:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7370:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7370:3:6"
																		},
																		"nativeSrc": "7370:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7370:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7395:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7395:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7366:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7366:3:6"
																},
																"nativeSrc": "7366:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7366:32:6"
															},
															"nativeSrc": "7363:119:6",
															"nodeType": "YulIf",
															"src": "7363:119:6"
														},
														{
															"nativeSrc": "7492:125:6",
															"nodeType": "YulBlock",
															"src": "7492:125:6",
															"statements": [
																{
																	"nativeSrc": "7507:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7507:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7521:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7521:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7511:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7511:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7536:71:6",
																	"nodeType": "YulAssignment",
																	"src": "7536:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7579:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7579:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7590:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7590:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7575:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7575:3:6"
																				},
																				"nativeSrc": "7575:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7575:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7599:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7599:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7546:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7546:28:6"
																		},
																		"nativeSrc": "7546:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7546:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7536:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7536:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7279:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7323:9:6",
														"nodeType": "YulTypedName",
														"src": "7323:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7334:7:6",
														"nodeType": "YulTypedName",
														"src": "7334:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7346:6:6",
														"nodeType": "YulTypedName",
														"src": "7346:6:6",
														"type": ""
													}
												],
												"src": "7279:345:6"
											},
											{
												"body": {
													"nativeSrc": "7784:288:6",
													"nodeType": "YulBlock",
													"src": "7784:288:6",
													"statements": [
														{
															"nativeSrc": "7794:26:6",
															"nodeType": "YulAssignment",
															"src": "7794:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7806:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7806:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7817:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7817:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7802:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7802:3:6"
																},
																"nativeSrc": "7802:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7802:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7794:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7794:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7874:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7874:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7887:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7887:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7898:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7898:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7883:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7883:3:6"
																		},
																		"nativeSrc": "7883:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7883:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7830:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7830:43:6"
																},
																"nativeSrc": "7830:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7830:71:6"
															},
															"nativeSrc": "7830:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7830:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7955:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7955:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7968:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7968:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7979:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7979:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7964:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7964:3:6"
																		},
																		"nativeSrc": "7964:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7964:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7911:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7911:43:6"
																},
																"nativeSrc": "7911:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7911:72:6"
															},
															"nativeSrc": "7911:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7911:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8037:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8037:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8050:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8050:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8061:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8061:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8046:3:6"
																		},
																		"nativeSrc": "8046:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8046:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7993:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7993:43:6"
																},
																"nativeSrc": "7993:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7993:72:6"
															},
															"nativeSrc": "7993:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7993:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7630:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7740:9:6",
														"nodeType": "YulTypedName",
														"src": "7740:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7752:6:6",
														"nodeType": "YulTypedName",
														"src": "7752:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7760:6:6",
														"nodeType": "YulTypedName",
														"src": "7760:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7768:6:6",
														"nodeType": "YulTypedName",
														"src": "7768:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7779:4:6",
														"nodeType": "YulTypedName",
														"src": "7779:4:6",
														"type": ""
													}
												],
												"src": "7630:442:6"
											},
											{
												"body": {
													"nativeSrc": "8176:124:6",
													"nodeType": "YulBlock",
													"src": "8176:124:6",
													"statements": [
														{
															"nativeSrc": "8186:26:6",
															"nodeType": "YulAssignment",
															"src": "8186:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8198:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8198:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8209:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8209:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8194:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8194:3:6"
																},
																"nativeSrc": "8194:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8194:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8186:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8186:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8266:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8279:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8279:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8290:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8290:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8275:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8275:3:6"
																		},
																		"nativeSrc": "8275:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8275:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8222:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8222:43:6"
																},
																"nativeSrc": "8222:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8222:71:6"
															},
															"nativeSrc": "8222:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "8222:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8078:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8148:9:6",
														"nodeType": "YulTypedName",
														"src": "8148:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8160:6:6",
														"nodeType": "YulTypedName",
														"src": "8160:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8171:4:6",
														"nodeType": "YulTypedName",
														"src": "8171:4:6",
														"type": ""
													}
												],
												"src": "8078:222:6"
											},
											{
												"body": {
													"nativeSrc": "8364:40:6",
													"nodeType": "YulBlock",
													"src": "8364:40:6",
													"statements": [
														{
															"nativeSrc": "8375:22:6",
															"nodeType": "YulAssignment",
															"src": "8375:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8391:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8391:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8385:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8385:5:6"
																},
																"nativeSrc": "8385:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8385:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8375:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8375:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "8306:98:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8347:5:6",
														"nodeType": "YulTypedName",
														"src": "8347:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8357:6:6",
														"nodeType": "YulTypedName",
														"src": "8357:6:6",
														"type": ""
													}
												],
												"src": "8306:98:6"
											},
											{
												"body": {
													"nativeSrc": "8523:34:6",
													"nodeType": "YulBlock",
													"src": "8523:34:6",
													"statements": [
														{
															"nativeSrc": "8533:18:6",
															"nodeType": "YulAssignment",
															"src": "8533:18:6",
															"value": {
																"name": "pos",
																"nativeSrc": "8548:3:6",
																"nodeType": "YulIdentifier",
																"src": "8548:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8533:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8533:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8410:147:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8495:3:6",
														"nodeType": "YulTypedName",
														"src": "8495:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8500:6:6",
														"nodeType": "YulTypedName",
														"src": "8500:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8511:11:6",
														"nodeType": "YulTypedName",
														"src": "8511:11:6",
														"type": ""
													}
												],
												"src": "8410:147:6"
											},
											{
												"body": {
													"nativeSrc": "8625:77:6",
													"nodeType": "YulBlock",
													"src": "8625:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8642:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8642:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8647:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8647:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8652:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "8636:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8636:5:6"
																},
																"nativeSrc": "8636:23:6",
																"nodeType": "YulFunctionCall",
																"src": "8636:23:6"
															},
															"nativeSrc": "8636:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "8636:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8679:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8679:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8684:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8684:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8675:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8675:3:6"
																		},
																		"nativeSrc": "8675:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8675:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8693:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8693:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8668:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8668:6:6"
																},
																"nativeSrc": "8668:27:6",
																"nodeType": "YulFunctionCall",
																"src": "8668:27:6"
															},
															"nativeSrc": "8668:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "8668:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "8563:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8607:3:6",
														"nodeType": "YulTypedName",
														"src": "8607:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8612:3:6",
														"nodeType": "YulTypedName",
														"src": "8612:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8617:6:6",
														"nodeType": "YulTypedName",
														"src": "8617:6:6",
														"type": ""
													}
												],
												"src": "8563:139:6"
											},
											{
												"body": {
													"nativeSrc": "8816:278:6",
													"nodeType": "YulBlock",
													"src": "8816:278:6",
													"statements": [
														{
															"nativeSrc": "8826:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8826:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8872:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8872:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "8840:31:6",
																	"nodeType": "YulIdentifier",
																	"src": "8840:31:6"
																},
																"nativeSrc": "8840:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8840:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8830:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8830:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8887:95:6",
															"nodeType": "YulAssignment",
															"src": "8887:95:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8970:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8970:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8975:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8975:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8894:75:6",
																	"nodeType": "YulIdentifier",
																	"src": "8894:75:6"
																},
																"nativeSrc": "8894:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8894:88:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8887:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8887:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9030:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9030:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9037:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9037:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9026:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9026:3:6"
																		},
																		"nativeSrc": "9026:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9026:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9044:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9044:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9049:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9049:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8991:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "8991:34:6"
																},
																"nativeSrc": "8991:65:6",
																"nodeType": "YulFunctionCall",
																"src": "8991:65:6"
															},
															"nativeSrc": "8991:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "8991:65:6"
														},
														{
															"nativeSrc": "9065:23:6",
															"nodeType": "YulAssignment",
															"src": "9065:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9076:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9076:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9081:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9081:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9072:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:6"
																},
																"nativeSrc": "9072:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9072:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9065:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9065:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8708:386:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8797:5:6",
														"nodeType": "YulTypedName",
														"src": "8797:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8804:3:6",
														"nodeType": "YulTypedName",
														"src": "8804:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8812:3:6",
														"nodeType": "YulTypedName",
														"src": "8812:3:6",
														"type": ""
													}
												],
												"src": "8708:386:6"
											},
											{
												"body": {
													"nativeSrc": "9234:137:6",
													"nodeType": "YulBlock",
													"src": "9234:137:6",
													"statements": [
														{
															"nativeSrc": "9245:100:6",
															"nodeType": "YulAssignment",
															"src": "9245:100:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9332:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9332:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9341:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9341:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9252:79:6",
																	"nodeType": "YulIdentifier",
																	"src": "9252:79:6"
																},
																"nativeSrc": "9252:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9252:93:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9245:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9245:3:6"
																}
															]
														},
														{
															"nativeSrc": "9355:10:6",
															"nodeType": "YulAssignment",
															"src": "9355:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "9362:3:6",
																"nodeType": "YulIdentifier",
																"src": "9362:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9355:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9355:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9100:271:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9213:3:6",
														"nodeType": "YulTypedName",
														"src": "9213:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9219:6:6",
														"nodeType": "YulTypedName",
														"src": "9219:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9230:3:6",
														"nodeType": "YulTypedName",
														"src": "9230:3:6",
														"type": ""
													}
												],
												"src": "9100:271:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c806324a756d11461006457806347e7ef24146100945780636b9d159d146100c457806370a08231146100f4578063c23f001f14610124578063f3fef3a314610154575b5f80fd5b61007e60048036038101906100799190610963565b610184565b60405161008b91906109bb565b60405180910390f35b6100ae60048036038101906100a99190610963565b61021c565b6040516100bb91906109bb565b60405180910390f35b6100de60048036038101906100d99190610a3d565b6102fb565b6040516100eb91906109bb565b60405180910390f35b61010e60048036038101906101099190610ac6565b6103c1565b60405161011b9190610b00565b60405180910390f35b61013e60048036038101906101399190610b19565b610441565b60405161014b9190610b00565b60405180910390f35b61016e60048036038101906101699190610963565b610460565b60405161017b91906109bb565b60405180910390f35b5f815f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020b9190610b84565b925050819055506001905092915050565b5f815f8111610257576040517f7d12343e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102638433308661060c565b825f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102e99190610b84565b92505081905550600191505092915050565b5f8673ffffffffffffffffffffffffffffffffffffffff1663d505accf333089898989896040518863ffffffff1660e01b81526004016103419796959493929190610be4565b5f604051808303815f87803b158015610358575f80fd5b505af115801561036a573d5f803e3d5ffd5b505050505f610379888861021c565b9050806103b2576040517f37a89cef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019150509695505050505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f602052815f5260405f20602052805f5260405f205f91509150505481565b5f815f811161049b576040517f7d12343e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561054b576040517e60b1ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610587929190610c51565b6020604051808303815f875af11580156105a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c79190610ca2565b905080610600576040517f8eda183b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019250505092915050565b610688848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161064193929190610ccd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061068e565b50505050565b5f6106b8828473ffffffffffffffffffffffffffffffffffffffff1661072390919063ffffffff16565b90505f8151141580156106dc5750808060200190518101906106da9190610ca2565b155b1561071e57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016107159190610d02565b60405180910390fd5b505050565b606061073083835f610738565b905092915050565b60608147101561077f57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016107769190610d02565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516107a79190610d6d565b5f6040518083038185875af1925050503d805f81146107e1576040519150601f19603f3d011682016040523d82523d5f602084013e6107e6565b606091505b50915091506107f6868383610801565b925050509392505050565b606082610816576108118261088e565b610886565b5f825114801561083c57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561087e57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016108759190610d02565b60405180910390fd5b819050610887565b5b9392505050565b5f815111156108a05780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108ff826108d6565b9050919050565b61090f816108f5565b8114610919575f80fd5b50565b5f8135905061092a81610906565b92915050565b5f819050919050565b61094281610930565b811461094c575f80fd5b50565b5f8135905061095d81610939565b92915050565b5f8060408385031215610979576109786108d2565b5b5f6109868582860161091c565b92505060206109978582860161094f565b9150509250929050565b5f8115159050919050565b6109b5816109a1565b82525050565b5f6020820190506109ce5f8301846109ac565b92915050565b5f60ff82169050919050565b6109e9816109d4565b81146109f3575f80fd5b50565b5f81359050610a04816109e0565b92915050565b5f819050919050565b610a1c81610a0a565b8114610a26575f80fd5b50565b5f81359050610a3781610a13565b92915050565b5f805f805f8060c08789031215610a5757610a566108d2565b5b5f610a6489828a0161091c565b9650506020610a7589828a0161094f565b9550506040610a8689828a0161094f565b9450506060610a9789828a016109f6565b9350506080610aa889828a01610a29565b92505060a0610ab989828a01610a29565b9150509295509295509295565b5f60208284031215610adb57610ada6108d2565b5b5f610ae88482850161091c565b91505092915050565b610afa81610930565b82525050565b5f602082019050610b135f830184610af1565b92915050565b5f8060408385031215610b2f57610b2e6108d2565b5b5f610b3c8582860161091c565b9250506020610b4d8582860161091c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b8e82610930565b9150610b9983610930565b9250828201905080821115610bb157610bb0610b57565b5b92915050565b610bc0816108f5565b82525050565b610bcf816109d4565b82525050565b610bde81610a0a565b82525050565b5f60e082019050610bf75f83018a610bb7565b610c046020830189610bb7565b610c116040830188610af1565b610c1e6060830187610af1565b610c2b6080830186610bc6565b610c3860a0830185610bd5565b610c4560c0830184610bd5565b98975050505050505050565b5f604082019050610c645f830185610bb7565b610c716020830184610af1565b9392505050565b610c81816109a1565b8114610c8b575f80fd5b50565b5f81519050610c9c81610c78565b92915050565b5f60208284031215610cb757610cb66108d2565b5b5f610cc484828501610c8e565b91505092915050565b5f606082019050610ce05f830186610bb7565b610ced6020830185610bb7565b610cfa6040830184610af1565b949350505050565b5f602082019050610d155f830184610bb7565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610d4782610d1b565b610d518185610d25565b9350610d61818560208601610d2f565b80840191505092915050565b5f610d788284610d3d565b91508190509291505056fea264697066735822122072aa358bf284d71f5db5feb539f57fd6b23656cd1452ec72faced0c2390b81d364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24A756D1 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x6B9D159D EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xC23F001F EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x154 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xB84 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT PUSH2 0x257 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7D12343E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP5 CALLER ADDRESS DUP7 PUSH2 0x60C JUMP JUMPDEST DUP3 PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0xB84 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH2 0x379 DUP9 DUP9 PUSH2 0x21C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37A89CEF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7D12343E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH31 0x60B1CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP3 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8EDA183B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x688 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x641 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x68E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B8 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x723 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x6DC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x71E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x730 DUP4 DUP4 PUSH0 PUSH2 0x738 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x77F JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7F6 DUP7 DUP4 DUP4 PUSH2 0x801 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x816 JUMPI PUSH2 0x811 DUP3 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x83C JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x87E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x887 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x8A0 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8FF DUP3 PUSH2 0x8D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90F DUP2 PUSH2 0x8F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x919 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x92A DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x942 DUP2 PUSH2 0x930 JUMP JUMPDEST DUP2 EQ PUSH2 0x94C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x95D DUP2 PUSH2 0x939 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x979 JUMPI PUSH2 0x978 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x986 DUP6 DUP3 DUP7 ADD PUSH2 0x91C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x997 DUP6 DUP3 DUP7 ADD PUSH2 0x94F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B5 DUP2 PUSH2 0x9A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9CE PUSH0 DUP4 ADD DUP5 PUSH2 0x9AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E9 DUP2 PUSH2 0x9D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA04 DUP2 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1C DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP2 EQ PUSH2 0xA26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA37 DUP2 PUSH2 0xA13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA57 JUMPI PUSH2 0xA56 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA64 DUP10 DUP3 DUP11 ADD PUSH2 0x91C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xA75 DUP10 DUP3 DUP11 ADD PUSH2 0x94F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xA86 DUP10 DUP3 DUP11 ADD PUSH2 0x94F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xA97 DUP10 DUP3 DUP11 ADD PUSH2 0x9F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0xAA8 DUP10 DUP3 DUP11 ADD PUSH2 0xA29 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0xAB9 DUP10 DUP3 DUP11 ADD PUSH2 0xA29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADB JUMPI PUSH2 0xADA PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAE8 DUP5 DUP3 DUP6 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFA DUP2 PUSH2 0x930 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB13 PUSH0 DUP4 ADD DUP5 PUSH2 0xAF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB3C DUP6 DUP3 DUP7 ADD PUSH2 0x91C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB4D DUP6 DUP3 DUP7 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB8E DUP3 PUSH2 0x930 JUMP JUMPDEST SWAP2 POP PUSH2 0xB99 DUP4 PUSH2 0x930 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB0 PUSH2 0xB57 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC0 DUP2 PUSH2 0x8F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBCF DUP2 PUSH2 0x9D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBDE DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xBF7 PUSH0 DUP4 ADD DUP11 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xC04 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xC11 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xC1E PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xC2B PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0xC38 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0xC45 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xBD5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC64 PUSH0 DUP4 ADD DUP6 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xC71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC81 DUP2 PUSH2 0x9A1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC9C DUP2 PUSH2 0xC78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB7 JUMPI PUSH2 0xCB6 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCC4 DUP5 DUP3 DUP6 ADD PUSH2 0xC8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCE0 PUSH0 DUP4 ADD DUP7 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xCED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xCFA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAF1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD15 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD47 DUP3 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0xD51 DUP2 DUP6 PUSH2 0xD25 JUMP JUMPDEST SWAP4 POP PUSH2 0xD61 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD2F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD78 DUP3 DUP5 PUSH2 0xD3D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xAA358BF284D71F5DB5FEB539F57FD6B23656CD EQ MSTORE 0xEC PUSH19 0xFACED0C2390B81D364736F6C63430008190033 ",
							"sourceMap": "365:2473:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1458:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:337;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1747:583;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2711:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;555:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2337:368;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1458:237;1530:12;1661:6;1631:8;:20;1640:10;1631:20;;;;;;;;;;;;;;;:26;1652:4;1631:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1684:4;1677:11;;1458:237;;;;:::o;909:337::-;1002:12;985:6;693:1;683:6;:11;678:86;;717:36;;;;;;;;;;;;;;678:86;1098:73:::1;1132:5;1139:10;1158:4;1164:6;1098:26;:73::i;:::-;1212:6;1181:8;:15:::0;1190:5:::1;1181:15;;;;;;;;;;;;;;;:27;1197:10;1181:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1235:4;1228:11;;909:337:::0;;;;;:::o;1747:583::-;1922:12;1958:5;1945:26;;;1985:10;2017:4;2036:6;2056:8;2078:1;2093;2108;1945:174;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:7;2139:21;2147:5;2153:6;2139:7;:21::i;:::-;2129:31;;2246:2;2241:62;;2271:21;;;;;;;;;;;;;;2241:62;2319:4;2312:11;;;1747:583;;;;;;;;:::o;2711:124::-;2768:14;2801:8;:15;2810:5;2801:15;;;;;;;;;;;;;;;:27;2817:10;2801:27;;;;;;;;;;;;;;;;2794:34;;2711:124;;;:::o;555:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2337:368::-;2424:12;2407:6;693:1;683:6;:11;678:86;;717:36;;;;;;;;;;;;;;678:86;2481:6:::1;2451:8;:15:::0;2460:5:::1;2451:15;;;;;;;;;;;;;;;:27;2467:10;2451:27;;;;;;;;;;;;;;;;:36;2448:98;;;2510:25;;;;;;;;;;;;;;2448:98;2555:7;2572:5;2565:22;;;2588:10;2599:6;2565:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2555:51;;2620:2;2616:62;;2645:22;;;;;;;;;;;;;;2616:62;2694:4;2687:11;;;2337:368:::0;;;;;:::o;1702:188:2:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:86::-;2139:7;2179:4;2172:5;2168:16;2157:27;;2104:86;;;:::o;2196:118::-;2267:22;2283:5;2267:22;:::i;:::-;2260:5;2257:33;2247:61;;2304:1;2301;2294:12;2247:61;2196:118;:::o;2320:135::-;2364:5;2402:6;2389:20;2380:29;;2418:31;2443:5;2418:31;:::i;:::-;2320:135;;;;:::o;2461:77::-;2498:7;2527:5;2516:16;;2461:77;;;:::o;2544:122::-;2617:24;2635:5;2617:24;:::i;:::-;2610:5;2607:35;2597:63;;2656:1;2653;2646:12;2597:63;2544:122;:::o;2672:139::-;2718:5;2756:6;2743:20;2734:29;;2772:33;2799:5;2772:33;:::i;:::-;2672:139;;;;:::o;2817:1053::-;2919:6;2927;2935;2943;2951;2959;3008:3;2996:9;2987:7;2983:23;2979:33;2976:120;;;3015:79;;:::i;:::-;2976:120;3135:1;3160:53;3205:7;3196:6;3185:9;3181:22;3160:53;:::i;:::-;3150:63;;3106:117;3262:2;3288:53;3333:7;3324:6;3313:9;3309:22;3288:53;:::i;:::-;3278:63;;3233:118;3390:2;3416:53;3461:7;3452:6;3441:9;3437:22;3416:53;:::i;:::-;3406:63;;3361:118;3518:2;3544:51;3587:7;3578:6;3567:9;3563:22;3544:51;:::i;:::-;3534:61;;3489:116;3644:3;3671:53;3716:7;3707:6;3696:9;3692:22;3671:53;:::i;:::-;3661:63;;3615:119;3773:3;3800:53;3845:7;3836:6;3825:9;3821:22;3800:53;:::i;:::-;3790:63;;3744:119;2817:1053;;;;;;;;:::o;3876:329::-;3935:6;3984:2;3972:9;3963:7;3959:23;3955:32;3952:119;;;3990:79;;:::i;:::-;3952:119;4110:1;4135:53;4180:7;4171:6;4160:9;4156:22;4135:53;:::i;:::-;4125:63;;4081:117;3876:329;;;;:::o;4211:118::-;4298:24;4316:5;4298:24;:::i;:::-;4293:3;4286:37;4211:118;;:::o;4335:222::-;4428:4;4466:2;4455:9;4451:18;4443:26;;4479:71;4547:1;4536:9;4532:17;4523:6;4479:71;:::i;:::-;4335:222;;;;:::o;4563:474::-;4631:6;4639;4688:2;4676:9;4667:7;4663:23;4659:32;4656:119;;;4694:79;;:::i;:::-;4656:119;4814:1;4839:53;4884:7;4875:6;4864:9;4860:22;4839:53;:::i;:::-;4829:63;;4785:117;4941:2;4967:53;5012:7;5003:6;4992:9;4988:22;4967:53;:::i;:::-;4957:63;;4912:118;4563:474;;;;;:::o;5043:180::-;5091:77;5088:1;5081:88;5188:4;5185:1;5178:15;5212:4;5209:1;5202:15;5229:191;5269:3;5288:20;5306:1;5288:20;:::i;:::-;5283:25;;5322:20;5340:1;5322:20;:::i;:::-;5317:25;;5365:1;5362;5358:9;5351:16;;5386:3;5383:1;5380:10;5377:36;;;5393:18;;:::i;:::-;5377:36;5229:191;;;;:::o;5426:118::-;5513:24;5531:5;5513:24;:::i;:::-;5508:3;5501:37;5426:118;;:::o;5550:112::-;5633:22;5649:5;5633:22;:::i;:::-;5628:3;5621:35;5550:112;;:::o;5668:118::-;5755:24;5773:5;5755:24;:::i;:::-;5750:3;5743:37;5668:118;;:::o;5792:878::-;6049:4;6087:3;6076:9;6072:19;6064:27;;6101:71;6169:1;6158:9;6154:17;6145:6;6101:71;:::i;:::-;6182:72;6250:2;6239:9;6235:18;6226:6;6182:72;:::i;:::-;6264;6332:2;6321:9;6317:18;6308:6;6264:72;:::i;:::-;6346;6414:2;6403:9;6399:18;6390:6;6346:72;:::i;:::-;6428:69;6492:3;6481:9;6477:19;6468:6;6428:69;:::i;:::-;6507:73;6575:3;6564:9;6560:19;6551:6;6507:73;:::i;:::-;6590;6658:3;6647:9;6643:19;6634:6;6590:73;:::i;:::-;5792:878;;;;;;;;;;:::o;6676:332::-;6797:4;6835:2;6824:9;6820:18;6812:26;;6848:71;6916:1;6905:9;6901:17;6892:6;6848:71;:::i;:::-;6929:72;6997:2;6986:9;6982:18;6973:6;6929:72;:::i;:::-;6676:332;;;;;:::o;7014:116::-;7084:21;7099:5;7084:21;:::i;:::-;7077:5;7074:32;7064:60;;7120:1;7117;7110:12;7064:60;7014:116;:::o;7136:137::-;7190:5;7221:6;7215:13;7206:22;;7237:30;7261:5;7237:30;:::i;:::-;7136:137;;;;:::o;7279:345::-;7346:6;7395:2;7383:9;7374:7;7370:23;7366:32;7363:119;;;7401:79;;:::i;:::-;7363:119;7521:1;7546:61;7599:7;7590:6;7579:9;7575:22;7546:61;:::i;:::-;7536:71;;7492:125;7279:345;;;;:::o;7630:442::-;7779:4;7817:2;7806:9;7802:18;7794:26;;7830:71;7898:1;7887:9;7883:17;7874:6;7830:71;:::i;:::-;7911:72;7979:2;7968:9;7964:18;7955:6;7911:72;:::i;:::-;7993;8061:2;8050:9;8046:18;8037:6;7993:72;:::i;:::-;7630:442;;;;;;:::o;8078:222::-;8171:4;8209:2;8198:9;8194:18;8186:26;;8222:71;8290:1;8279:9;8275:17;8266:6;8222:71;:::i;:::-;8078:222;;;;:::o;8306:98::-;8357:6;8391:5;8385:12;8375:22;;8306:98;;;:::o;8410:147::-;8511:11;8548:3;8533:18;;8410:147;;;;:::o;8563:139::-;8652:6;8647:3;8642;8636:23;8693:1;8684:6;8679:3;8675:16;8668:27;8563:139;;;:::o;8708:386::-;8812:3;8840:38;8872:5;8840:38;:::i;:::-;8894:88;8975:6;8970:3;8894:88;:::i;:::-;8887:95;;8991:65;9049:6;9044:3;9037:4;9030:5;9026:16;8991:65;:::i;:::-;9081:6;9076:3;9072:16;9065:23;;8816:278;8708:386;;;;:::o;9100:271::-;9230:3;9252:93;9341:3;9332:6;9252:93;:::i;:::-;9245:100;;9362:3;9355:10;;9100:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "702600",
								"executionCost": "732",
								"totalCost": "703332"
							},
							"external": {
								"balanceOf(address)": "2960",
								"balances(address,address)": "infinite",
								"deposit(address,uint256)": "infinite",
								"depositPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"tokensReceived(address,uint256)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 365,
									"end": 2838,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 365,
									"end": 2838,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 365,
									"end": 2838,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 789,
									"end": 811,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 789,
									"end": 811,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 789,
									"end": 811,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 789,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 789,
									"end": 811,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 789,
									"end": 811,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 811,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 789,
									"end": 811,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 789,
									"end": 811,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 789,
									"end": 811,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 789,
									"end": 811,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 365,
									"end": 2838,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 2838,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 365,
									"end": 2838,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 2838,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 2838,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 365,
									"end": 2838,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 2838,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072aa358bf284d71f5db5feb539f57fd6b23656cd1452ec72faced0c2390b81d364736f6c63430008190033",
									".code": [
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "24A756D1"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "47E7EF24"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "6B9D159D"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "C23F001F"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "F3FEF3A3"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 365,
											"end": 2838,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1458,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1458,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1458,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 909,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 909,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 909,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1747,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1747,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1747,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2711,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2711,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2711,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 555,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 555,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 555,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2337,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2337,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2337,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1650,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1656,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1631,
											"end": 1667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1677,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 693,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 689,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 683,
											"end": 694,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 678,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 678,
											"end": 764,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "PUSH",
											"source": 5,
											"value": "7D12343E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 717,
											"end": 753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 717,
											"end": 753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 678,
											"end": 764,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 678,
											"end": 764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1132,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1149,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1162,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1170,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1098,
											"end": 1171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1098,
											"end": 1171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1218,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1196,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1196,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1207,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1181,
											"end": 1218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1218,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1228,
											"end": 1239,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1239,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 909,
											"end": 1246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1963,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "D505ACCF"
										},
										{
											"begin": 1985,
											"end": 1995,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2064,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2079,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2094,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1945,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2139,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2160,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2139,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2241,
											"end": 2303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "PUSH",
											"source": 5,
											"value": "37A89CEF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2241,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2323,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2312,
											"end": 2323,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 2330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2809,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 555,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 693,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 689,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 683,
											"end": 694,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 678,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 678,
											"end": 764,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "PUSH",
											"source": 5,
											"value": "7D12343E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 717,
											"end": 753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 717,
											"end": 753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 717,
											"end": 753,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 678,
											"end": 764,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 678,
											"end": 764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2487,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2466,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2477,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2478,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2487,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2546,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2448,
											"end": 2546,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "60B1CA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2535,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2448,
											"end": 2546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2577,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2565,
											"end": 2587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2588,
											"end": 2598,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2605,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2565,
											"end": 2606,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2606,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2565,
											"end": 2606,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2565,
											"end": 2606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2606,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2622,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2616,
											"end": 2678,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8EDA183B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2667,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2616,
											"end": 2678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2694,
											"end": 2698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2687,
											"end": 2698,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2698,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2698,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1854,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2026,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2190,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2104,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2183,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2172,
											"end": 2177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2184,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2190,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2314,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2196,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2283,
											"end": 2288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2267,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2289,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2267,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2290,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2247,
											"end": 2308,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2304,
											"end": 2305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2308,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2247,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2455,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2320,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2409,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2443,
											"end": 2448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2418,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2449,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2418,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2455,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2538,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2461,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2532,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2666,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2544,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2617,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2617,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2617,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2617,
											"end": 2641,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2617,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2642,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2763,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2799,
											"end": 2804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2772,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2933,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2965,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 2996,
											"end": 3005,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2983,
											"end": 3006,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 3096,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2976,
											"end": 3096,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3015,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3015,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3094,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3015,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 3096,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2976,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3205,
											"end": 3212,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3194,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3160,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3160,
											"end": 3213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3160,
											"end": 3213,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3160,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3213,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3264,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3288,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3333,
											"end": 3340,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3322,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 3331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3288,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3341,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3288,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3341,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3390,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3461,
											"end": 3468,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3450,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3416,
											"end": 3469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3469,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3416,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3469,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3544,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3587,
											"end": 3594,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3578,
											"end": 3584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3567,
											"end": 3576,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3544,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3544,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3595,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3671,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3716,
											"end": 3723,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3713,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3671,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3724,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3671,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3724,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3615,
											"end": 3734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3800,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3845,
											"end": 3852,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3834,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3800,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3853,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3800,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 3870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 4205,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3876,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3935,
											"end": 3941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 3981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 3970,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3982,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3955,
											"end": 3987,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 4071,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3952,
											"end": 4071,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3990,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3990,
											"end": 4069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4069,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3990,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 4071,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3952,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4180,
											"end": 4187,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4169,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4135,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4188,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4135,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 4205,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 4205,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 4205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 4205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 4205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4329,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4211,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4316,
											"end": 4321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4298,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4298,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4296,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4323,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4557,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4335,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4432,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4468,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4547,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4532,
											"end": 4549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4529,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4479,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4550,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4479,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4557,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4688,
											"end": 4690,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4685,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 4674,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4686,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4691,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4694,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4884,
											"end": 4891,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4839,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 5012,
											"end": 5019,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4992,
											"end": 5001,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4967,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4967,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 5020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 5037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5043,
											"end": 5223,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5043,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5091,
											"end": 5168,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5088,
											"end": 5089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5192,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5185,
											"end": 5186,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5178,
											"end": 5193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5209,
											"end": 5210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5217,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5420,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5229,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5288,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5322,
											"end": 5342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5366,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5413,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5377,
											"end": 5413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5393,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5413,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5377,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5420,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5420,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5544,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5426,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5531,
											"end": 5536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5513,
											"end": 5537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5537,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5513,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5662,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5550,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5633,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5655,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5633,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5786,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5668,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5773,
											"end": 5778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5755,
											"end": 5779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5779,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5755,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5753,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5743,
											"end": 5780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5786,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5786,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6049,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6090,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6076,
											"end": 6085,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6167,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6101,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6172,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6101,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6182,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6239,
											"end": 6248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6232,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6182,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6182,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6182,
											"end": 6254,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6182,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6321,
											"end": 6330,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6308,
											"end": 6314,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6264,
											"end": 6336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6336,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6264,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6414,
											"end": 6416,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6403,
											"end": 6412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6396,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6346,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6418,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6346,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6492,
											"end": 6495,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6481,
											"end": 6490,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6496,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6474,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6428,
											"end": 6497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6497,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6428,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6575,
											"end": 6578,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6557,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6507,
											"end": 6580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6580,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6507,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6658,
											"end": 6661,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 6647,
											"end": 6656,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 6662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6590,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6663,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6590,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7008,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6676,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6916,
											"end": 6917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6898,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6848,
											"end": 6919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6919,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6848,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6997,
											"end": 6999,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6986,
											"end": 6995,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6982,
											"end": 7000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6973,
											"end": 6979,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6929,
											"end": 7001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7001,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6929,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7008,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7008,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7130,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 7014,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7099,
											"end": 7104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7084,
											"end": 7105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7105,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7084,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7106,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7064,
											"end": 7124,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7120,
											"end": 7121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7110,
											"end": 7122,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7124,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7064,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7136,
											"end": 7273,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7136,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7190,
											"end": 7195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7227,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7228,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7261,
											"end": 7266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 7237,
											"end": 7267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7267,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7237,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7136,
											"end": 7273,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7136,
											"end": 7273,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7136,
											"end": 7273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7136,
											"end": 7273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7136,
											"end": 7273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7624,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7279,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7397,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7381,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7393,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7398,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7482,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7363,
											"end": 7482,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7401,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 7401,
											"end": 7480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7480,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7401,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7482,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7363,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7599,
											"end": 7606,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7579,
											"end": 7588,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7575,
											"end": 7597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7546,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7607,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7546,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7624,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 8072,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 7630,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7819,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7806,
											"end": 7815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7898,
											"end": 7899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 7896,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7874,
											"end": 7880,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7830,
											"end": 7901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7901,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7830,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7979,
											"end": 7981,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7968,
											"end": 7977,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7955,
											"end": 7961,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7911,
											"end": 7983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7983,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7911,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8061,
											"end": 8063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8050,
											"end": 8059,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8037,
											"end": 8043,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7993,
											"end": 8065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8065,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7993,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 8072,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 8072,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 8072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 8072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 8072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 8072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8300,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8078,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8209,
											"end": 8211,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8194,
											"end": 8212,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8212,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8222,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8288,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8222,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 8222,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8222,
											"end": 8293,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8222,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8300,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8404,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 8306,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8385,
											"end": 8397,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8375,
											"end": 8397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8375,
											"end": 8397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8557,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 8410,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8511,
											"end": 8522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8557,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8702,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8563,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8647,
											"end": 8650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8642,
											"end": 8645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8659,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 8693,
											"end": 8694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8679,
											"end": 8682,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8668,
											"end": 8695,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8708,
											"end": 9094,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8708,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8812,
											"end": 8815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8840,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8872,
											"end": 8877,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 8840,
											"end": 8878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8878,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8840,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8894,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8975,
											"end": 8981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 8973,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8894,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 8894,
											"end": 8982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8894,
											"end": 8982,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8894,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8982,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9049,
											"end": 9055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9030,
											"end": 9035,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9026,
											"end": 9042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8991,
											"end": 9056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9056,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8991,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9081,
											"end": 9087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9076,
											"end": 9079,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9065,
											"end": 9088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9065,
											"end": 9088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8816,
											"end": 9094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8708,
											"end": 9094,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8708,
											"end": 9094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8708,
											"end": 9094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8708,
											"end": 9094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8708,
											"end": 9094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9371,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 9100,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9230,
											"end": 9233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 9341,
											"end": 9344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9332,
											"end": 9338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9252,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 9252,
											"end": 9345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9252,
											"end": 9345,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 9252,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9245,
											"end": 9345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9245,
											"end": 9345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/ERC20Received.sol",
								"src/Vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"balances(address,address)": "c23f001f",
							"deposit(address,uint256)": "47e7ef24",
							"depositPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "6b9d159d",
							"tokensReceived(address,uint256)": "24a756d1",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Vault__AmountShouldNotLessThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Vault__BalanceNotEnough\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Vault__DepositError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Vault__WithdrawError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositPermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(address,uint256)\":{\"notice\":\"method 1  approve + deposit(transferFrom) \\u4e24\\u7b14\\u4ea4\\u6613\"},\"depositPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"method 3 permit\"},\"tokensReceived(address,uint256)\":{\"notice\":\"method 2 tokenReceived  (\\u4e5f\\u53ef\\u4ee5\\u7528erc777\\u5b9e\\u73b0\\uff0c\\u4e0d\\u8fc7777\\u73b0\\u5728\\u5df2\\u7ecf\\u5e9f\\u5f03\\u4e86) user - erc - vault \\u4e00\\u7b14\\u4ea4\\u6613  \\u5b9e\\u73b0\\u65b9\\u6cd5\\u5728token\\u5408\\u7ea6\\u4e2d\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vault.sol\":\"Vault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"src/ERC20Received.sol\":{\"keccak256\":\"0xbd16574b1ba13d46cabd1b785d03e5d2382681b6cb404662f5830f48017e0b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d874dec8d927b3e8ba417319ca09399f44a522d7fa390b6897a14072cde31ba\",\"dweb:/ipfs/QmW7jyMtPrpJ2QV4mXNG5roUJBef4eywfKRsyZAQJUiSS7\"]},\"src/Vault.sol\":{\"keccak256\":\"0x68feed337b6b86b5266141d92f0ce2a5a3733a64a01b17abd137e1bb34c2a114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfa00ff7be4fa3a58d1ab6b46e9e23d83c9723bc97de38e314be967be6b60ab9\",\"dweb:/ipfs/QmXwf2fZrPDnhdpkv5Qok6RGW8qUguxjxvXx4Y9iuvRs7f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 694,
								"contract": "src/Vault.sol:Vault",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit(address,uint256)": {
								"notice": "method 1  approve + deposit(transferFrom) 两笔交易"
							},
							"depositPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "method 3 permit"
							},
							"tokensReceived(address,uint256)": {
								"notice": "method 2 tokenReceived  (也可以用erc777实现，不过777现在已经废弃了) user - erc - vault 一笔交易  实现方法在token合约中"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"src/ERC20Received.sol": {
				"ast": {
					"absolutePath": "src/ERC20Received.sol",
					"exportedSymbols": {
						"ERC20Received": [
							668
						]
					},
					"id": 669,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC20Received",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 668,
							"linearizedBaseContracts": [
								668
							],
							"name": "ERC20Received",
							"nameLocation": "69:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "24a756d1",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "98:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "113:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "122:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:18:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "154:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "149:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "149:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "148:14:4"
									},
									"scope": 668,
									"src": "89:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 669,
							"src": "59:106:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:132:4"
				},
				"id": 4
			},
			"src/Vault.sol": {
				"ast": {
					"absolutePath": "src/Vault.sol",
					"exportedSymbols": {
						"ERC20Received": [
							668
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						],
						"Vault": [
							888
						]
					},
					"id": 889,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 670,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 889,
							"sourceUnit": 78,
							"src": "59:72:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 671,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "68:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 674,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 889,
							"sourceUnit": 404,
							"src": "132:84:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 673,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 403,
										"src": "141:9:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/ERC20Received.sol",
							"file": "./ERC20Received.sol",
							"id": 676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 889,
							"sourceUnit": 669,
							"src": "217:50:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 675,
										"name": "ERC20Received",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 668,
										"src": "225:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"id": 678,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 889,
							"sourceUnit": 114,
							"src": "268:95:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 677,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "277:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 679,
										"name": "ERC20Received",
										"nameLocations": [
											"383:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 668,
										"src": "383:13:5"
									},
									"id": 680,
									"nodeType": "InheritanceSpecifier",
									"src": "383:13:5"
								}
							],
							"canonicalName": "Vault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 888,
							"linearizedBaseContracts": [
								888,
								668
							],
							"name": "Vault",
							"nameLocation": "374:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "7d12343e",
									"id": 682,
									"name": "Vault__AmountShouldNotLessThanZero",
									"nameLocation": "408:34:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:2:5"
									},
									"src": "402:43:5"
								},
								{
									"errorSelector": "0060b1ca",
									"id": 684,
									"name": "Vault__BalanceNotEnough",
									"nameLocation": "456:23:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:2:5"
									},
									"src": "450:32:5"
								},
								{
									"errorSelector": "37a89cef",
									"id": 686,
									"name": "Vault__DepositError",
									"nameLocation": "493:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:5"
									},
									"src": "487:28:5"
								},
								{
									"errorSelector": "8eda183b",
									"id": 688,
									"name": "Vault__WithdrawError",
									"nameLocation": "526:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:5"
									},
									"src": "520:29:5"
								},
								{
									"constant": false,
									"functionSelector": "c23f001f",
									"id": 694,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "616:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 888,
									"src": "555:69:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 693,
										"keyName": "token",
										"keyNameLocation": "571:5:5",
										"keyType": {
											"id": 689,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "563:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "555:53:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 692,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 690,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "588:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "580:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 691,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "599:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "668:113:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 698,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "683:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "693:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "683:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 705,
												"nodeType": "IfStatement",
												"src": "678:86:5",
												"trueBody": {
													"id": 704,
													"nodeType": "Block",
													"src": "696:68:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 701,
																	"name": "Vault__AmountShouldNotLessThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "717:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "717:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 703,
															"nodeType": "RevertStatement",
															"src": "710:43:5"
														}
													]
												}
											},
											{
												"id": 706,
												"nodeType": "PlaceholderStatement",
												"src": "773:1:5"
											}
										]
									},
									"id": 708,
									"name": "amountCheck",
									"nameLocation": "640:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:16:5"
									},
									"src": "631:150:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "803:8:5",
										"statements": []
									},
									"id": 712,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:2:5"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:5"
									},
									"scope": 888,
									"src": "789:22:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "1016:230:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 729,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "1132:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 728,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1125:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1125:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 731,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1139:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1143:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1139:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 735,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1158:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Vault_$888",
																		"typeString": "contract Vault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Vault_$888",
																		"typeString": "contract Vault"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1150:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 733,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1150:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1150:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "1164:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 725,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1098:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$403_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1108:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "1098:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1098:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "1098:73:5"
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 740,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "1181:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 744,
															"indexExpression": {
																"id": 741,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "1190:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1181:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 745,
														"indexExpression": {
															"expression": {
																"id": 742,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1197:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1201:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1197:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1181:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 746,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "1212:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1181:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "1181:37:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 724,
												"id": 750,
												"nodeType": "Return",
												"src": "1228:11:5"
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "816:87:5",
										"text": " method 1 \n approve + deposit(transferFrom)\n 两笔交易"
									},
									"functionSelector": "47e7ef24",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 720,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "985:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 719,
												"name": "amountCheck",
												"nameLocations": [
													"973:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "973:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "973:19:5"
										}
									],
									"name": "deposit",
									"nameLocation": "918:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "934:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "926:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "949:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "941:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:31:5"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1007:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1002:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1002:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:14:5"
									},
									"scope": 888,
									"src": "909:337:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										667
									],
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "1544:151:5",
										"statements": [
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 762,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "1631:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 766,
															"indexExpression": {
																"expression": {
																	"id": 763,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1640:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1644:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1640:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1631:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 767,
														"indexExpression": {
															"id": 765,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "1652:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1631:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 768,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "1661:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1631:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "1631:36:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1684:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 761,
												"id": 772,
												"nodeType": "Return",
												"src": "1677:11:5"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "1252:200:5",
										"text": " method 2\n tokenReceived  (也可以用erc777实现，不过777现在已经废弃了)\n user - erc - vault\n 一笔交易\n \n 实现方法在token合约中"
									},
									"functionSelector": "24a756d1",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "1467:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1490:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1482:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1504:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1496:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:30:5"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1535:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1530:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1530:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:14:5"
									},
									"scope": 888,
									"src": "1458:237:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "1935:395:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 796,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1985:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1989:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1985:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 800,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2017:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Vault_$888",
																		"typeString": "contract Vault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Vault_$888",
																		"typeString": "contract Vault"
																	}
																],
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2009:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 798,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2009:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2009:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "2036:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 803,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "2056:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 804,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "2078:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 805,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2093:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 806,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "2108:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 793,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "1958:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 792,
																"name": "IERC20Permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1945:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Permit_$113_$",
																	"typeString": "type(contract IERC20Permit)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1945:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1965:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "1945:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:174:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "1945:174:5"
											},
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "rv",
														"nameLocation": "2134:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "2129:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 809,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2129:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [
														{
															"id": 812,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "2147:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "2153:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 811,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "2139:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2139:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2129:31:5"
											},
											{
												"condition": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2245:3:5",
													"subExpression": {
														"id": 816,
														"name": "rv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2246:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 822,
												"nodeType": "IfStatement",
												"src": "2241:62:5",
												"trueBody": {
													"id": 821,
													"nodeType": "Block",
													"src": "2250:53:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 818,
																	"name": "Vault__DepositError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "2271:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2271:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 820,
															"nodeType": "RevertStatement",
															"src": "2264:28:5"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2319:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 791,
												"id": 824,
												"nodeType": "Return",
												"src": "2312:11:5"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "1701:41:5",
										"text": " method 3\n permit"
									},
									"functionSelector": "6b9d159d",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositPermit",
									"nameLocation": "1756:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1787:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1779:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1810:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1802:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1834:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1826:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1858:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1852:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 782,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1852:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1877:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1869:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 784,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1896:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1888:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 786,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:134:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1927:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1922:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1922:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:14:5"
									},
									"scope": 888,
									"src": "1747:583:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "2438:267:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 838,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "2451:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 840,
															"indexExpression": {
																"id": 839,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "2460:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2451:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 843,
														"indexExpression": {
															"expression": {
																"id": 841,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2467:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2471:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2467:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2451:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 844,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2481:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2451:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "2448:98:5",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "2489:57:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 846,
																	"name": "Vault__BalanceNotEnough",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "2510:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2510:25:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "2503:32:5"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "rv",
														"nameLocation": "2560:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "2555:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 851,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2555:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 857,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2588:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2592:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2588:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "2599:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 854,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "2572:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 853,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2565:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2565:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2579:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "2565:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2565:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2555:51:5"
											},
											{
												"condition": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2619:3:5",
													"subExpression": {
														"id": 862,
														"name": "rv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "2620:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "2616:62:5",
												"trueBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "2624:54:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 864,
																	"name": "Vault__WithdrawError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "2645:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2645:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 866,
															"nodeType": "RevertStatement",
															"src": "2638:29:5"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 837,
												"id": 870,
												"nodeType": "Return",
												"src": "2687:11:5"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 833,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 830,
													"src": "2407:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 834,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "amountCheck",
												"nameLocations": [
													"2395:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "2395:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2395:19:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "2346:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2363:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2355:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2355:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2378:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2370:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2354:31:5"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2429:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2424:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2424:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:14:5"
									},
									"scope": 888,
									"src": "2337:368:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "2784:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 879,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "2801:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 881,
														"indexExpression": {
															"id": 880,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2810:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2801:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 884,
													"indexExpression": {
														"expression": {
															"id": 882,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2817:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2821:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2817:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2801:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 878,
												"id": 885,
												"nodeType": "Return",
												"src": "2794:34:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2720:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2738:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2730:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:15:5"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2776:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2768:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:16:5"
									},
									"scope": 888,
									"src": "2711:124:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 889,
							"src": "365:2473:5",
							"usedErrors": [
								130,
								411,
								416,
								419,
								682,
								684,
								686,
								688
							],
							"usedEvents": []
						}
					],
					"src": "33:2805:5"
				},
				"id": 5
			}
		}
	}
}
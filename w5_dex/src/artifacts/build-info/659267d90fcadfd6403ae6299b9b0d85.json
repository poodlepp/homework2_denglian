{
	"id": "659267d90fcadfd6403ae6299b9b0d85",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/MyTokenMarket.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\nimport \"./IUniswapV2Router01.sol\";\nimport \"./IMasterChef.sol\";\n\n// import {IUniswapV2Router02} from \"@v2-periphery/interfaces/IUniswapV2Router02.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract MyTokenMarket {\n    using SafeERC20 for IERC20;\n\n    address public myToken;\n    address public router;\n    address public weth;\n\n    constructor(address _token, address _router, address _weth) {\n        myToken = _token;\n        router = _router;\n        weth = _weth;\n    }\n\n    // 添加流动性\n    function AddLiquidity(uint tokenAmount) public payable {\n        IERC20(myToken).transferFrom(msg.sender, address(this),tokenAmount);\n        IERC20(myToken).approve(router, tokenAmount);\n\n        // ingnore slippage\n        // (uint amountToken, uint amountETH, uint liquidity) = \n        IUniswapV2Router01(router).addLiquidityETH{value: msg.value}(myToken, tokenAmount, 0, 0, msg.sender, block.timestamp);\n\n        //TODO: handle left\n    }\n\n    // 用 ETH 购买 Token\n    function buyToken(uint minTokenAmount) public payable {\n        address[] memory path = new address[](2);\n        path[0] = weth;\n        path[1] = myToken;\n\n        IUniswapV2Router01(router).swapExactETHForTokens{value : msg.value}(minTokenAmount, path, msg.sender, block.timestamp);\n    }\n\n\n\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"src/IMasterChef.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IMasterChef {\n    function deposit(uint256 _pid, uint256 _amount) external;\n    function withdraw(uint256 _pid, uint256 _amount) external;\n}\n"
			},
			"src/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/IMasterChef.sol",
								"src/IUniswapV2Router01.sol",
								"src/MyTokenMarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/IMasterChef.sol",
								"src/IUniswapV2Router01.sol",
								"src/MyTokenMarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/IMasterChef.sol": {
				"IMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256,uint256)": "e2bbb158",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IMasterChef.sol\":\"IMasterChef\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/IMasterChef.sol\":{\"keccak256\":\"0xfedbe0adf90715b605191a171642bc9b83f55f7f8188204feec6bb9ffc9aefaa\",\"urls\":[\"bzz-raw://ec7578688c821e0af441664f4d320b17c7ae6e10002bc58b9d2f3c2daf170ca3\",\"dweb:/ipfs/QmW9Lgh3UWCWS6rZRaWAWWbJ4koLZpExAQECaEnEeAieNg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/MyTokenMarket.sol": {
				"MyTokenMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "AddLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minTokenAmount",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/MyTokenMarket.sol\":337:1424  contract MyTokenMarket {... */\n  mstore(0x40, 0x80)\n    /* \"src/MyTokenMarket.sol\":480:621  constructor(address _token, address _router, address _weth) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/MyTokenMarket.sol\":560:566  _token */\n  dup3\n    /* \"src/MyTokenMarket.sol\":550:557  myToken */\n  0x00\n  dup1\n    /* \"src/MyTokenMarket.sol\":550:566  myToken = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/MyTokenMarket.sol\":585:592  _router */\n  dup2\n    /* \"src/MyTokenMarket.sol\":576:582  router */\n  0x01\n  0x00\n    /* \"src/MyTokenMarket.sol\":576:592  router = _router */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/MyTokenMarket.sol\":609:614  _weth */\n  dup1\n    /* \"src/MyTokenMarket.sol\":602:606  weth */\n  0x02\n  0x00\n    /* \"src/MyTokenMarket.sol\":602:614  weth = _weth */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/MyTokenMarket.sol\":480:621  constructor(address _token, address _router, address _weth) {... */\n  pop\n  pop\n  pop\n    /* \"src/MyTokenMarket.sol\":337:1424  contract MyTokenMarket {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":966:1085   */\ntag_27:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_29\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_30\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_31\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"src/MyTokenMarket.sol\":337:1424  contract MyTokenMarket {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/MyTokenMarket.sol\":337:1424  contract MyTokenMarket {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2d296bf1\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3fc8cef3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb8fcf937\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf53d9d58\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf887ea40\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"src/MyTokenMarket.sol\":1127:1418  function buyToken(uint minTokenAmount) public payable {... */\n    tag_2:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"src/MyTokenMarket.sol\":454:473  address public weth */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/MyTokenMarket.sol\":399:421  address public myToken */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/MyTokenMarket.sol\":650:1093  function AddLiquidity(uint tokenAmount) public payable {... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"src/MyTokenMarket.sol\":427:448  address public router */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/MyTokenMarket.sol\":1127:1418  function buyToken(uint minTokenAmount) public payable {... */\n    tag_10:\n        /* \"src/MyTokenMarket.sol\":1191:1212  address[] memory path */\n      0x00\n        /* \"src/MyTokenMarket.sol\":1229:1230  2 */\n      0x02\n        /* \"src/MyTokenMarket.sol\":1215:1231  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n    tag_28:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_31:\n      pop\n        /* \"src/MyTokenMarket.sol\":1191:1231  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"src/MyTokenMarket.sol\":1251:1255  weth */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/MyTokenMarket.sol\":1241:1245  path */\n      dup2\n        /* \"src/MyTokenMarket.sol\":1246:1247  0 */\n      0x00\n        /* \"src/MyTokenMarket.sol\":1241:1248  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_32\n      jumpi\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n    tag_32:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"src/MyTokenMarket.sol\":1241:1255  path[0] = weth */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/MyTokenMarket.sol\":1275:1282  myToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/MyTokenMarket.sol\":1265:1269  path */\n      dup2\n        /* \"src/MyTokenMarket.sol\":1270:1271  1 */\n      0x01\n        /* \"src/MyTokenMarket.sol\":1265:1272  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_35\n      jumpi\n      tag_36\n      tag_34\n      jump\t// in\n    tag_36:\n    tag_35:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"src/MyTokenMarket.sol\":1265:1282  path[1] = myToken */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/MyTokenMarket.sol\":1312:1318  router */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/MyTokenMarket.sol\":1293:1341  IUniswapV2Router01(router).swapExactETHForTokens */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7ff36ab5\n        /* \"src/MyTokenMarket.sol\":1350:1359  msg.value */\n      callvalue\n        /* \"src/MyTokenMarket.sol\":1361:1375  minTokenAmount */\n      dup5\n        /* \"src/MyTokenMarket.sol\":1377:1381  path */\n      dup5\n        /* \"src/MyTokenMarket.sol\":1383:1393  msg.sender */\n      caller\n        /* \"src/MyTokenMarket.sol\":1395:1410  block.timestamp */\n      timestamp\n        /* \"src/MyTokenMarket.sol\":1293:1411  IUniswapV2Router01(router).swapExactETHForTokens{value : msg.value}(minTokenAmount, path, msg.sender, block.timestamp) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      pop\n        /* \"src/MyTokenMarket.sol\":1181:1418  {... */\n      pop\n        /* \"src/MyTokenMarket.sol\":1127:1418  function buyToken(uint minTokenAmount) public payable {... */\n      pop\n      jump\t// out\n        /* \"src/MyTokenMarket.sol\":454:473  address public weth */\n    tag_13:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/MyTokenMarket.sol\":399:421  address public myToken */\n    tag_18:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/MyTokenMarket.sol\":650:1093  function AddLiquidity(uint tokenAmount) public payable {... */\n    tag_22:\n        /* \"src/MyTokenMarket.sol\":722:729  myToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/MyTokenMarket.sol\":715:743  IERC20(myToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/MyTokenMarket.sol\":744:754  msg.sender */\n      caller\n        /* \"src/MyTokenMarket.sol\":764:768  this */\n      address\n        /* \"src/MyTokenMarket.sol\":770:781  tokenAmount */\n      dup5\n        /* \"src/MyTokenMarket.sol\":715:782  IERC20(myToken).transferFrom(msg.sender, address(this),tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      pop\n        /* \"src/MyTokenMarket.sol\":799:806  myToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/MyTokenMarket.sol\":792:815  IERC20(myToken).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"src/MyTokenMarket.sol\":816:822  router */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/MyTokenMarket.sol\":824:835  tokenAmount */\n      dup4\n        /* \"src/MyTokenMarket.sol\":792:836  IERC20(myToken).approve(router, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_54:\n      pop\n        /* \"src/MyTokenMarket.sol\":959:965  router */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/MyTokenMarket.sol\":940:982  IUniswapV2Router01(router).addLiquidityETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf305d719\n        /* \"src/MyTokenMarket.sol\":990:999  msg.value */\n      callvalue\n        /* \"src/MyTokenMarket.sol\":1001:1008  myToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/MyTokenMarket.sol\":1010:1021  tokenAmount */\n      dup5\n        /* \"src/MyTokenMarket.sol\":1023:1024  0 */\n      0x00\n        /* \"src/MyTokenMarket.sol\":1026:1027  0 */\n      dup1\n        /* \"src/MyTokenMarket.sol\":1029:1039  msg.sender */\n      caller\n        /* \"src/MyTokenMarket.sol\":1041:1056  block.timestamp */\n      timestamp\n        /* \"src/MyTokenMarket.sol\":940:1057  IUniswapV2Router01(router).addLiquidityETH{value: msg.value}(myToken, tokenAmount, 0, 0, msg.sender, block.timestamp) */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      pop\n      pop\n      pop\n        /* \"src/MyTokenMarket.sol\":650:1093  function AddLiquidity(uint tokenAmount) public payable {... */\n      pop\n      jump\t// out\n        /* \"src/MyTokenMarket.sol\":427:448  address public router */\n    tag_25:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_61:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_62:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_63:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_64:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_65:\n        /* \"#utility.yul\":490:514   */\n      tag_100\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_64\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_101:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_66:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_103\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_65\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_106\n      tag_62\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":766:885   */\n    tag_105:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_107\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_66\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_67:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_68:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_110\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_67\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_69:\n        /* \"#utility.yul\":1346:1370   */\n      tag_112\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_68\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_15:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_114\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_69\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1791   */\n    tag_30:\n        /* \"#utility.yul\":1659:1736   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1656:1657   */\n      0x00\n        /* \"#utility.yul\":1649:1737   */\n      mstore\n        /* \"#utility.yul\":1756:1760   */\n      0x41\n        /* \"#utility.yul\":1753:1754   */\n      0x04\n        /* \"#utility.yul\":1746:1761   */\n      mstore\n        /* \"#utility.yul\":1780:1784   */\n      0x24\n        /* \"#utility.yul\":1777:1778   */\n      0x00\n        /* \"#utility.yul\":1770:1785   */\n      revert\n        /* \"#utility.yul\":1797:1977   */\n    tag_34:\n        /* \"#utility.yul\":1845:1922   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1842:1843   */\n      0x00\n        /* \"#utility.yul\":1835:1923   */\n      mstore\n        /* \"#utility.yul\":1942:1946   */\n      0x32\n        /* \"#utility.yul\":1939:1940   */\n      0x04\n        /* \"#utility.yul\":1932:1947   */\n      mstore\n        /* \"#utility.yul\":1966:1970   */\n      0x24\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1956:1971   */\n      revert\n        /* \"#utility.yul\":1983:2101   */\n    tag_70:\n        /* \"#utility.yul\":2070:2094   */\n      tag_118\n        /* \"#utility.yul\":2088:2093   */\n      dup2\n        /* \"#utility.yul\":2070:2094   */\n      tag_64\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2065:2068   */\n      dup3\n        /* \"#utility.yul\":2058:2095   */\n      mstore\n        /* \"#utility.yul\":1983:2101   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2107:2221   */\n    tag_71:\n        /* \"#utility.yul\":2174:2180   */\n      0x00\n        /* \"#utility.yul\":2208:2213   */\n      dup2\n        /* \"#utility.yul\":2202:2214   */\n      mload\n        /* \"#utility.yul\":2192:2214   */\n      swap1\n      pop\n        /* \"#utility.yul\":2107:2221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2227:2411   */\n    tag_72:\n        /* \"#utility.yul\":2326:2337   */\n      0x00\n        /* \"#utility.yul\":2360:2366   */\n      dup3\n        /* \"#utility.yul\":2355:2358   */\n      dup3\n        /* \"#utility.yul\":2348:2367   */\n      mstore\n        /* \"#utility.yul\":2400:2404   */\n      0x20\n        /* \"#utility.yul\":2395:2398   */\n      dup3\n        /* \"#utility.yul\":2391:2405   */\n      add\n        /* \"#utility.yul\":2376:2405   */\n      swap1\n      pop\n        /* \"#utility.yul\":2227:2411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2417:2549   */\n    tag_73:\n        /* \"#utility.yul\":2484:2488   */\n      0x00\n        /* \"#utility.yul\":2507:2510   */\n      dup2\n        /* \"#utility.yul\":2499:2510   */\n      swap1\n      pop\n        /* \"#utility.yul\":2537:2541   */\n      0x20\n        /* \"#utility.yul\":2532:2535   */\n      dup3\n        /* \"#utility.yul\":2528:2542   */\n      add\n        /* \"#utility.yul\":2520:2542   */\n      swap1\n      pop\n        /* \"#utility.yul\":2417:2549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2555:2663   */\n    tag_74:\n        /* \"#utility.yul\":2632:2656   */\n      tag_123\n        /* \"#utility.yul\":2650:2655   */\n      dup2\n        /* \"#utility.yul\":2632:2656   */\n      tag_68\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2627:2630   */\n      dup3\n        /* \"#utility.yul\":2620:2657   */\n      mstore\n        /* \"#utility.yul\":2555:2663   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2669:2848   */\n    tag_75:\n        /* \"#utility.yul\":2738:2748   */\n      0x00\n        /* \"#utility.yul\":2759:2805   */\n      tag_125\n        /* \"#utility.yul\":2801:2804   */\n      dup4\n        /* \"#utility.yul\":2793:2799   */\n      dup4\n        /* \"#utility.yul\":2759:2805   */\n      tag_74\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2837:2841   */\n      0x20\n        /* \"#utility.yul\":2832:2835   */\n      dup4\n        /* \"#utility.yul\":2828:2842   */\n      add\n        /* \"#utility.yul\":2814:2842   */\n      swap1\n      pop\n        /* \"#utility.yul\":2669:2848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2854:2967   */\n    tag_76:\n        /* \"#utility.yul\":2924:2928   */\n      0x00\n        /* \"#utility.yul\":2956:2960   */\n      0x20\n        /* \"#utility.yul\":2951:2954   */\n      dup3\n        /* \"#utility.yul\":2947:2961   */\n      add\n        /* \"#utility.yul\":2939:2961   */\n      swap1\n      pop\n        /* \"#utility.yul\":2854:2967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3003:3735   */\n    tag_77:\n        /* \"#utility.yul\":3122:3125   */\n      0x00\n        /* \"#utility.yul\":3151:3205   */\n      tag_128\n        /* \"#utility.yul\":3199:3204   */\n      dup3\n        /* \"#utility.yul\":3151:3205   */\n      tag_71\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3221:3307   */\n      tag_129\n        /* \"#utility.yul\":3300:3306   */\n      dup2\n        /* \"#utility.yul\":3295:3298   */\n      dup6\n        /* \"#utility.yul\":3221:3307   */\n      tag_72\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3214:3307   */\n      swap4\n      pop\n        /* \"#utility.yul\":3331:3387   */\n      tag_130\n        /* \"#utility.yul\":3381:3386   */\n      dup4\n        /* \"#utility.yul\":3331:3387   */\n      tag_73\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3410:3417   */\n      dup1\n        /* \"#utility.yul\":3441:3442   */\n      0x00\n        /* \"#utility.yul\":3426:3710   */\n    tag_131:\n        /* \"#utility.yul\":3451:3457   */\n      dup4\n        /* \"#utility.yul\":3448:3449   */\n      dup2\n        /* \"#utility.yul\":3445:3458   */\n      lt\n        /* \"#utility.yul\":3426:3710   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3527:3533   */\n      dup2\n        /* \"#utility.yul\":3521:3534   */\n      mload\n        /* \"#utility.yul\":3554:3617   */\n      tag_134\n        /* \"#utility.yul\":3613:3616   */\n      dup9\n        /* \"#utility.yul\":3598:3611   */\n      dup3\n        /* \"#utility.yul\":3554:3617   */\n      tag_75\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3547:3617   */\n      swap8\n      pop\n        /* \"#utility.yul\":3640:3700   */\n      tag_135\n        /* \"#utility.yul\":3693:3699   */\n      dup4\n        /* \"#utility.yul\":3640:3700   */\n      tag_76\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3630:3700   */\n      swap3\n      pop\n        /* \"#utility.yul\":3486:3710   */\n      pop\n        /* \"#utility.yul\":3473:3474   */\n      0x01\n        /* \"#utility.yul\":3470:3471   */\n      dup2\n        /* \"#utility.yul\":3466:3475   */\n      add\n        /* \"#utility.yul\":3461:3475   */\n      swap1\n      pop\n        /* \"#utility.yul\":3426:3710   */\n      jump(tag_131)\n    tag_133:\n        /* \"#utility.yul\":3430:3444   */\n      pop\n        /* \"#utility.yul\":3726:3729   */\n      dup6\n        /* \"#utility.yul\":3719:3729   */\n      swap4\n      pop\n        /* \"#utility.yul\":3127:3735   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3003:3735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3741:4445   */\n    tag_38:\n        /* \"#utility.yul\":3968:3972   */\n      0x00\n        /* \"#utility.yul\":4006:4009   */\n      0x80\n        /* \"#utility.yul\":3995:4004   */\n      dup3\n        /* \"#utility.yul\":3991:4010   */\n      add\n        /* \"#utility.yul\":3983:4010   */\n      swap1\n      pop\n        /* \"#utility.yul\":4020:4091   */\n      tag_137\n        /* \"#utility.yul\":4088:4089   */\n      0x00\n        /* \"#utility.yul\":4077:4086   */\n      dup4\n        /* \"#utility.yul\":4073:4090   */\n      add\n        /* \"#utility.yul\":4064:4070   */\n      dup8\n        /* \"#utility.yul\":4020:4091   */\n      tag_70\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4138:4147   */\n      dup2\n        /* \"#utility.yul\":4132:4136   */\n      dup2\n        /* \"#utility.yul\":4128:4148   */\n      sub\n        /* \"#utility.yul\":4123:4125   */\n      0x20\n        /* \"#utility.yul\":4112:4121   */\n      dup4\n        /* \"#utility.yul\":4108:4126   */\n      add\n        /* \"#utility.yul\":4101:4149   */\n      mstore\n        /* \"#utility.yul\":4166:4274   */\n      tag_138\n        /* \"#utility.yul\":4269:4273   */\n      dup2\n        /* \"#utility.yul\":4260:4266   */\n      dup7\n        /* \"#utility.yul\":4166:4274   */\n      tag_77\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4158:4274   */\n      swap1\n      pop\n        /* \"#utility.yul\":4284:4356   */\n      tag_139\n        /* \"#utility.yul\":4352:4354   */\n      0x40\n        /* \"#utility.yul\":4341:4350   */\n      dup4\n        /* \"#utility.yul\":4337:4355   */\n      add\n        /* \"#utility.yul\":4328:4334   */\n      dup6\n        /* \"#utility.yul\":4284:4356   */\n      tag_69\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4366:4438   */\n      tag_140\n        /* \"#utility.yul\":4434:4436   */\n      0x60\n        /* \"#utility.yul\":4423:4432   */\n      dup4\n        /* \"#utility.yul\":4419:4437   */\n      add\n        /* \"#utility.yul\":4410:4416   */\n      dup5\n        /* \"#utility.yul\":4366:4438   */\n      tag_70\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3741:4445   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4451:4568   */\n    tag_78:\n        /* \"#utility.yul\":4560:4561   */\n      0x00\n        /* \"#utility.yul\":4557:4558   */\n      dup1\n        /* \"#utility.yul\":4550:4562   */\n      revert\n        /* \"#utility.yul\":4574:4676   */\n    tag_79:\n        /* \"#utility.yul\":4615:4621   */\n      0x00\n        /* \"#utility.yul\":4666:4668   */\n      0x1f\n        /* \"#utility.yul\":4662:4669   */\n      not\n        /* \"#utility.yul\":4657:4659   */\n      0x1f\n        /* \"#utility.yul\":4650:4655   */\n      dup4\n        /* \"#utility.yul\":4646:4660   */\n      add\n        /* \"#utility.yul\":4642:4670   */\n      and\n        /* \"#utility.yul\":4632:4670   */\n      swap1\n      pop\n        /* \"#utility.yul\":4574:4676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4682:4963   */\n    tag_80:\n        /* \"#utility.yul\":4765:4792   */\n      tag_144\n        /* \"#utility.yul\":4787:4791   */\n      dup3\n        /* \"#utility.yul\":4765:4792   */\n      tag_79\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4757:4763   */\n      dup2\n        /* \"#utility.yul\":4753:4793   */\n      add\n        /* \"#utility.yul\":4895:4901   */\n      dup2\n        /* \"#utility.yul\":4883:4893   */\n      dup2\n        /* \"#utility.yul\":4880:4902   */\n      lt\n        /* \"#utility.yul\":4859:4877   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4847:4857   */\n      dup3\n        /* \"#utility.yul\":4844:4878   */\n      gt\n        /* \"#utility.yul\":4841:4903   */\n      or\n        /* \"#utility.yul\":4838:4926   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":4906:4924   */\n      tag_146\n      tag_30\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4838:4926   */\n    tag_145:\n        /* \"#utility.yul\":4946:4956   */\n      dup1\n        /* \"#utility.yul\":4942:4944   */\n      0x40\n        /* \"#utility.yul\":4935:4957   */\n      mstore\n        /* \"#utility.yul\":4725:4963   */\n      pop\n        /* \"#utility.yul\":4682:4963   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4969:5098   */\n    tag_81:\n        /* \"#utility.yul\":5003:5009   */\n      0x00\n        /* \"#utility.yul\":5030:5050   */\n      tag_148\n      tag_61\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5020:5050   */\n      swap1\n      pop\n        /* \"#utility.yul\":5059:5092   */\n      tag_149\n        /* \"#utility.yul\":5087:5091   */\n      dup3\n        /* \"#utility.yul\":5079:5085   */\n      dup3\n        /* \"#utility.yul\":5059:5092   */\n      tag_80\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4969:5098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5104:5415   */\n    tag_82:\n        /* \"#utility.yul\":5181:5185   */\n      0x00\n        /* \"#utility.yul\":5271:5289   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5263:5269   */\n      dup3\n        /* \"#utility.yul\":5260:5290   */\n      gt\n        /* \"#utility.yul\":5257:5313   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":5293:5311   */\n      tag_152\n      tag_30\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5257:5313   */\n    tag_151:\n        /* \"#utility.yul\":5343:5347   */\n      0x20\n        /* \"#utility.yul\":5335:5341   */\n      dup3\n        /* \"#utility.yul\":5331:5348   */\n      mul\n        /* \"#utility.yul\":5323:5348   */\n      swap1\n      pop\n        /* \"#utility.yul\":5403:5407   */\n      0x20\n        /* \"#utility.yul\":5397:5401   */\n      dup2\n        /* \"#utility.yul\":5393:5408   */\n      add\n        /* \"#utility.yul\":5385:5408   */\n      swap1\n      pop\n        /* \"#utility.yul\":5104:5415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5421:5538   */\n    tag_83:\n        /* \"#utility.yul\":5530:5531   */\n      0x00\n        /* \"#utility.yul\":5527:5528   */\n      dup1\n        /* \"#utility.yul\":5520:5532   */\n      revert\n        /* \"#utility.yul\":5544:5687   */\n    tag_84:\n        /* \"#utility.yul\":5601:5606   */\n      0x00\n        /* \"#utility.yul\":5632:5638   */\n      dup2\n        /* \"#utility.yul\":5626:5639   */\n      mload\n        /* \"#utility.yul\":5617:5639   */\n      swap1\n      pop\n        /* \"#utility.yul\":5648:5681   */\n      tag_155\n        /* \"#utility.yul\":5675:5680   */\n      dup2\n        /* \"#utility.yul\":5648:5681   */\n      tag_65\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5544:5687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5710:6442   */\n    tag_85:\n        /* \"#utility.yul\":5817:5822   */\n      0x00\n        /* \"#utility.yul\":5842:5923   */\n      tag_157\n        /* \"#utility.yul\":5858:5922   */\n      tag_158\n        /* \"#utility.yul\":5915:5921   */\n      dup5\n        /* \"#utility.yul\":5858:5922   */\n      tag_82\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5842:5923   */\n      tag_81\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5833:5923   */\n      swap1\n      pop\n        /* \"#utility.yul\":5943:5948   */\n      dup1\n        /* \"#utility.yul\":5972:5978   */\n      dup4\n        /* \"#utility.yul\":5965:5970   */\n      dup3\n        /* \"#utility.yul\":5958:5979   */\n      mstore\n        /* \"#utility.yul\":6006:6010   */\n      0x20\n        /* \"#utility.yul\":5999:6004   */\n      dup3\n        /* \"#utility.yul\":5995:6011   */\n      add\n        /* \"#utility.yul\":5988:6011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6059:6063   */\n      0x20\n        /* \"#utility.yul\":6051:6057   */\n      dup5\n        /* \"#utility.yul\":6047:6064   */\n      mul\n        /* \"#utility.yul\":6039:6045   */\n      dup4\n        /* \"#utility.yul\":6035:6065   */\n      add\n        /* \"#utility.yul\":6088:6091   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup2\n        /* \"#utility.yul\":6077:6092   */\n      gt\n        /* \"#utility.yul\":6074:6196   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":6107:6186   */\n      tag_160\n      tag_83\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":6074:6196   */\n    tag_159:\n        /* \"#utility.yul\":6222:6228   */\n      dup4\n        /* \"#utility.yul\":6205:6436   */\n    tag_161:\n        /* \"#utility.yul\":6239:6245   */\n      dup2\n        /* \"#utility.yul\":6234:6237   */\n      dup2\n        /* \"#utility.yul\":6231:6246   */\n      lt\n        /* \"#utility.yul\":6205:6436   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":6314:6317   */\n      dup1\n        /* \"#utility.yul\":6343:6391   */\n      tag_164\n        /* \"#utility.yul\":6387:6390   */\n      dup9\n        /* \"#utility.yul\":6375:6385   */\n      dup3\n        /* \"#utility.yul\":6343:6391   */\n      tag_84\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6338:6341   */\n      dup5\n        /* \"#utility.yul\":6331:6392   */\n      mstore\n        /* \"#utility.yul\":6421:6425   */\n      0x20\n        /* \"#utility.yul\":6416:6419   */\n      dup5\n        /* \"#utility.yul\":6412:6426   */\n      add\n        /* \"#utility.yul\":6405:6426   */\n      swap4\n      pop\n        /* \"#utility.yul\":6281:6436   */\n      pop\n        /* \"#utility.yul\":6265:6269   */\n      0x20\n        /* \"#utility.yul\":6260:6263   */\n      dup2\n        /* \"#utility.yul\":6256:6270   */\n      add\n        /* \"#utility.yul\":6249:6270   */\n      swap1\n      pop\n        /* \"#utility.yul\":6205:6436   */\n      jump(tag_161)\n    tag_163:\n        /* \"#utility.yul\":6209:6230   */\n      pop\n        /* \"#utility.yul\":5823:6442   */\n      pop\n      pop\n        /* \"#utility.yul\":5710:6442   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6465:6850   */\n    tag_86:\n        /* \"#utility.yul\":6547:6552   */\n      0x00\n        /* \"#utility.yul\":6596:6599   */\n      dup3\n        /* \"#utility.yul\":6589:6593   */\n      0x1f\n        /* \"#utility.yul\":6581:6587   */\n      dup4\n        /* \"#utility.yul\":6577:6594   */\n      add\n        /* \"#utility.yul\":6573:6600   */\n      slt\n        /* \"#utility.yul\":6563:6685   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":6604:6683   */\n      tag_167\n      tag_78\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6563:6685   */\n    tag_166:\n        /* \"#utility.yul\":6714:6720   */\n      dup2\n        /* \"#utility.yul\":6708:6721   */\n      mload\n        /* \"#utility.yul\":6739:6844   */\n      tag_168\n        /* \"#utility.yul\":6840:6843   */\n      dup5\n        /* \"#utility.yul\":6832:6838   */\n      dup3\n        /* \"#utility.yul\":6825:6829   */\n      0x20\n        /* \"#utility.yul\":6817:6823   */\n      dup7\n        /* \"#utility.yul\":6813:6830   */\n      add\n        /* \"#utility.yul\":6739:6844   */\n      tag_85\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6730:6844   */\n      swap2\n      pop\n        /* \"#utility.yul\":6553:6850   */\n      pop\n        /* \"#utility.yul\":6465:6850   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6856:7410   */\n    tag_42:\n        /* \"#utility.yul\":6951:6957   */\n      0x00\n        /* \"#utility.yul\":7000:7002   */\n      0x20\n        /* \"#utility.yul\":6988:6997   */\n      dup3\n        /* \"#utility.yul\":6979:6986   */\n      dup5\n        /* \"#utility.yul\":6975:6998   */\n      sub\n        /* \"#utility.yul\":6971:7003   */\n      slt\n        /* \"#utility.yul\":6968:7087   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":7006:7085   */\n      tag_171\n      tag_62\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6968:7087   */\n    tag_170:\n        /* \"#utility.yul\":7147:7148   */\n      0x00\n        /* \"#utility.yul\":7136:7145   */\n      dup3\n        /* \"#utility.yul\":7132:7149   */\n      add\n        /* \"#utility.yul\":7126:7150   */\n      mload\n        /* \"#utility.yul\":7177:7195   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7169:7175   */\n      dup2\n        /* \"#utility.yul\":7166:7196   */\n      gt\n        /* \"#utility.yul\":7163:7280   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":7199:7278   */\n      tag_173\n      tag_63\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7163:7280   */\n    tag_172:\n        /* \"#utility.yul\":7304:7393   */\n      tag_174\n        /* \"#utility.yul\":7385:7392   */\n      dup5\n        /* \"#utility.yul\":7376:7382   */\n      dup3\n        /* \"#utility.yul\":7365:7374   */\n      dup6\n        /* \"#utility.yul\":7361:7383   */\n      add\n        /* \"#utility.yul\":7304:7393   */\n      tag_86\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":7294:7393   */\n      swap2\n      pop\n        /* \"#utility.yul\":7097:7403   */\n      pop\n        /* \"#utility.yul\":6856:7410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7416:7858   */\n    tag_45:\n        /* \"#utility.yul\":7565:7569   */\n      0x00\n        /* \"#utility.yul\":7603:7605   */\n      0x60\n        /* \"#utility.yul\":7592:7601   */\n      dup3\n        /* \"#utility.yul\":7588:7606   */\n      add\n        /* \"#utility.yul\":7580:7606   */\n      swap1\n      pop\n        /* \"#utility.yul\":7616:7687   */\n      tag_176\n        /* \"#utility.yul\":7684:7685   */\n      0x00\n        /* \"#utility.yul\":7673:7682   */\n      dup4\n        /* \"#utility.yul\":7669:7686   */\n      add\n        /* \"#utility.yul\":7660:7666   */\n      dup7\n        /* \"#utility.yul\":7616:7687   */\n      tag_69\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":7697:7769   */\n      tag_177\n        /* \"#utility.yul\":7765:7767   */\n      0x20\n        /* \"#utility.yul\":7754:7763   */\n      dup4\n        /* \"#utility.yul\":7750:7768   */\n      add\n        /* \"#utility.yul\":7741:7747   */\n      dup6\n        /* \"#utility.yul\":7697:7769   */\n      tag_69\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7779:7851   */\n      tag_178\n        /* \"#utility.yul\":7847:7849   */\n      0x40\n        /* \"#utility.yul\":7836:7845   */\n      dup4\n        /* \"#utility.yul\":7832:7850   */\n      add\n        /* \"#utility.yul\":7823:7829   */\n      dup5\n        /* \"#utility.yul\":7779:7851   */\n      tag_70\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":7416:7858   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7864:7954   */\n    tag_87:\n        /* \"#utility.yul\":7898:7905   */\n      0x00\n        /* \"#utility.yul\":7941:7946   */\n      dup2\n        /* \"#utility.yul\":7934:7947   */\n      iszero\n        /* \"#utility.yul\":7927:7948   */\n      iszero\n        /* \"#utility.yul\":7916:7948   */\n      swap1\n      pop\n        /* \"#utility.yul\":7864:7954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7960:8076   */\n    tag_88:\n        /* \"#utility.yul\":8030:8051   */\n      tag_181\n        /* \"#utility.yul\":8045:8050   */\n      dup2\n        /* \"#utility.yul\":8030:8051   */\n      tag_87\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":8023:8028   */\n      dup2\n        /* \"#utility.yul\":8020:8052   */\n      eq\n        /* \"#utility.yul\":8010:8070   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":8066:8067   */\n      0x00\n        /* \"#utility.yul\":8063:8064   */\n      dup1\n        /* \"#utility.yul\":8056:8068   */\n      revert\n        /* \"#utility.yul\":8010:8070   */\n    tag_182:\n        /* \"#utility.yul\":7960:8076   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8082:8219   */\n    tag_89:\n        /* \"#utility.yul\":8136:8141   */\n      0x00\n        /* \"#utility.yul\":8167:8173   */\n      dup2\n        /* \"#utility.yul\":8161:8174   */\n      mload\n        /* \"#utility.yul\":8152:8174   */\n      swap1\n      pop\n        /* \"#utility.yul\":8183:8213   */\n      tag_184\n        /* \"#utility.yul\":8207:8212   */\n      dup2\n        /* \"#utility.yul\":8183:8213   */\n      tag_88\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":8082:8219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8225:8570   */\n    tag_49:\n        /* \"#utility.yul\":8292:8298   */\n      0x00\n        /* \"#utility.yul\":8341:8343   */\n      0x20\n        /* \"#utility.yul\":8329:8338   */\n      dup3\n        /* \"#utility.yul\":8320:8327   */\n      dup5\n        /* \"#utility.yul\":8316:8339   */\n      sub\n        /* \"#utility.yul\":8312:8344   */\n      slt\n        /* \"#utility.yul\":8309:8428   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":8347:8426   */\n      tag_187\n      tag_62\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":8309:8428   */\n    tag_186:\n        /* \"#utility.yul\":8467:8468   */\n      0x00\n        /* \"#utility.yul\":8492:8553   */\n      tag_188\n        /* \"#utility.yul\":8545:8552   */\n      dup5\n        /* \"#utility.yul\":8536:8542   */\n      dup3\n        /* \"#utility.yul\":8525:8534   */\n      dup6\n        /* \"#utility.yul\":8521:8543   */\n      add\n        /* \"#utility.yul\":8492:8553   */\n      tag_89\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":8482:8553   */\n      swap2\n      pop\n        /* \"#utility.yul\":8438:8563   */\n      pop\n        /* \"#utility.yul\":8225:8570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8576:8908   */\n    tag_51:\n        /* \"#utility.yul\":8697:8701   */\n      0x00\n        /* \"#utility.yul\":8735:8737   */\n      0x40\n        /* \"#utility.yul\":8724:8733   */\n      dup3\n        /* \"#utility.yul\":8720:8738   */\n      add\n        /* \"#utility.yul\":8712:8738   */\n      swap1\n      pop\n        /* \"#utility.yul\":8748:8819   */\n      tag_190\n        /* \"#utility.yul\":8816:8817   */\n      0x00\n        /* \"#utility.yul\":8805:8814   */\n      dup4\n        /* \"#utility.yul\":8801:8818   */\n      add\n        /* \"#utility.yul\":8792:8798   */\n      dup6\n        /* \"#utility.yul\":8748:8819   */\n      tag_69\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":8829:8901   */\n      tag_191\n        /* \"#utility.yul\":8897:8899   */\n      0x20\n        /* \"#utility.yul\":8886:8895   */\n      dup4\n        /* \"#utility.yul\":8882:8900   */\n      add\n        /* \"#utility.yul\":8873:8879   */\n      dup5\n        /* \"#utility.yul\":8829:8901   */\n      tag_70\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":8576:8908   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8914:8999   */\n    tag_90:\n        /* \"#utility.yul\":8959:8966   */\n      0x00\n        /* \"#utility.yul\":8988:8993   */\n      dup2\n        /* \"#utility.yul\":8977:8993   */\n      swap1\n      pop\n        /* \"#utility.yul\":8914:8999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9005:9065   */\n    tag_91:\n        /* \"#utility.yul\":9033:9036   */\n      0x00\n        /* \"#utility.yul\":9054:9059   */\n      dup2\n        /* \"#utility.yul\":9047:9059   */\n      swap1\n      pop\n        /* \"#utility.yul\":9005:9065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9071:9229   */\n    tag_92:\n        /* \"#utility.yul\":9129:9138   */\n      0x00\n        /* \"#utility.yul\":9162:9223   */\n      tag_195\n        /* \"#utility.yul\":9180:9222   */\n      tag_196\n        /* \"#utility.yul\":9189:9221   */\n      tag_197\n        /* \"#utility.yul\":9215:9220   */\n      dup5\n        /* \"#utility.yul\":9189:9221   */\n      tag_90\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":9180:9222   */\n      tag_91\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":9162:9223   */\n      tag_64\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":9149:9223   */\n      swap1\n      pop\n        /* \"#utility.yul\":9071:9229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9235:9382   */\n    tag_93:\n        /* \"#utility.yul\":9330:9375   */\n      tag_199\n        /* \"#utility.yul\":9369:9374   */\n      dup2\n        /* \"#utility.yul\":9330:9375   */\n      tag_92\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":9325:9328   */\n      dup3\n        /* \"#utility.yul\":9318:9376   */\n      mstore\n        /* \"#utility.yul\":9235:9382   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9388:10195   */\n    tag_56:\n        /* \"#utility.yul\":9637:9641   */\n      0x00\n        /* \"#utility.yul\":9675:9678   */\n      0xc0\n        /* \"#utility.yul\":9664:9673   */\n      dup3\n        /* \"#utility.yul\":9660:9679   */\n      add\n        /* \"#utility.yul\":9652:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9689:9760   */\n      tag_201\n        /* \"#utility.yul\":9757:9758   */\n      0x00\n        /* \"#utility.yul\":9746:9755   */\n      dup4\n        /* \"#utility.yul\":9742:9759   */\n      add\n        /* \"#utility.yul\":9733:9739   */\n      dup10\n        /* \"#utility.yul\":9689:9760   */\n      tag_69\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":9770:9842   */\n      tag_202\n        /* \"#utility.yul\":9838:9840   */\n      0x20\n        /* \"#utility.yul\":9827:9836   */\n      dup4\n        /* \"#utility.yul\":9823:9841   */\n      add\n        /* \"#utility.yul\":9814:9820   */\n      dup9\n        /* \"#utility.yul\":9770:9842   */\n      tag_70\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":9852:9932   */\n      tag_203\n        /* \"#utility.yul\":9928:9930   */\n      0x40\n        /* \"#utility.yul\":9917:9926   */\n      dup4\n        /* \"#utility.yul\":9913:9931   */\n      add\n        /* \"#utility.yul\":9904:9910   */\n      dup8\n        /* \"#utility.yul\":9852:9932   */\n      tag_93\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9942:10022   */\n      tag_204\n        /* \"#utility.yul\":10018:10020   */\n      0x60\n        /* \"#utility.yul\":10007:10016   */\n      dup4\n        /* \"#utility.yul\":10003:10021   */\n      add\n        /* \"#utility.yul\":9994:10000   */\n      dup7\n        /* \"#utility.yul\":9942:10022   */\n      tag_93\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":10032:10105   */\n      tag_205\n        /* \"#utility.yul\":10100:10103   */\n      0x80\n        /* \"#utility.yul\":10089:10098   */\n      dup4\n        /* \"#utility.yul\":10085:10104   */\n      add\n        /* \"#utility.yul\":10076:10082   */\n      dup6\n        /* \"#utility.yul\":10032:10105   */\n      tag_69\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":10115:10188   */\n      tag_206\n        /* \"#utility.yul\":10183:10186   */\n      0xa0\n        /* \"#utility.yul\":10172:10181   */\n      dup4\n        /* \"#utility.yul\":10168:10187   */\n      add\n        /* \"#utility.yul\":10159:10165   */\n      dup5\n        /* \"#utility.yul\":10115:10188   */\n      tag_70\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9388:10195   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10201:10864   */\n    tag_60:\n        /* \"#utility.yul\":10289:10295   */\n      0x00\n        /* \"#utility.yul\":10297:10303   */\n      dup1\n        /* \"#utility.yul\":10305:10311   */\n      0x00\n        /* \"#utility.yul\":10354:10356   */\n      0x60\n        /* \"#utility.yul\":10342:10351   */\n      dup5\n        /* \"#utility.yul\":10333:10340   */\n      dup7\n        /* \"#utility.yul\":10329:10352   */\n      sub\n        /* \"#utility.yul\":10325:10357   */\n      slt\n        /* \"#utility.yul\":10322:10441   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":10360:10439   */\n      tag_209\n      tag_62\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":10322:10441   */\n    tag_208:\n        /* \"#utility.yul\":10480:10481   */\n      0x00\n        /* \"#utility.yul\":10505:10569   */\n      tag_210\n        /* \"#utility.yul\":10561:10568   */\n      dup7\n        /* \"#utility.yul\":10552:10558   */\n      dup3\n        /* \"#utility.yul\":10541:10550   */\n      dup8\n        /* \"#utility.yul\":10537:10559   */\n      add\n        /* \"#utility.yul\":10505:10569   */\n      tag_84\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":10495:10569   */\n      swap4\n      pop\n        /* \"#utility.yul\":10451:10579   */\n      pop\n        /* \"#utility.yul\":10618:10620   */\n      0x20\n        /* \"#utility.yul\":10644:10708   */\n      tag_211\n        /* \"#utility.yul\":10700:10707   */\n      dup7\n        /* \"#utility.yul\":10691:10697   */\n      dup3\n        /* \"#utility.yul\":10680:10689   */\n      dup8\n        /* \"#utility.yul\":10676:10698   */\n      add\n        /* \"#utility.yul\":10644:10708   */\n      tag_84\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":10634:10708   */\n      swap3\n      pop\n        /* \"#utility.yul\":10589:10718   */\n      pop\n        /* \"#utility.yul\":10757:10759   */\n      0x40\n        /* \"#utility.yul\":10783:10847   */\n      tag_212\n        /* \"#utility.yul\":10839:10846   */\n      dup7\n        /* \"#utility.yul\":10830:10836   */\n      dup3\n        /* \"#utility.yul\":10819:10828   */\n      dup8\n        /* \"#utility.yul\":10815:10837   */\n      add\n        /* \"#utility.yul\":10783:10847   */\n      tag_84\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":10773:10847   */\n      swap2\n      pop\n        /* \"#utility.yul\":10728:10857   */\n      pop\n        /* \"#utility.yul\":10201:10864   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e84bf8649cb325caad444d9f420224fc1dac0c42febe13873cf3d4b23256430e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1019": {
									"entryPoint": null,
									"id": 1019,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1511:7",
										"nodeType": "YulBlock",
										"src": "0:1511:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "956:552:7",
													"nodeType": "YulBlock",
													"src": "956:552:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:7",
																"nodeType": "YulBlock",
																"src": "1002:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:7"
																			},
																			"nativeSrc": "1004:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:7"
																		},
																		"nativeSrc": "1004:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:7"
																		},
																		"nativeSrc": "973:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:7",
																		"nodeType": "YulLiteral",
																		"src": "998:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:7"
																},
																"nativeSrc": "969:32:7",
																"nodeType": "YulFunctionCall",
																"src": "969:32:7"
															},
															"nativeSrc": "966:119:7",
															"nodeType": "YulIf",
															"src": "966:119:7"
														},
														{
															"nativeSrc": "1095:128:7",
															"nodeType": "YulBlock",
															"src": "1095:128:7",
															"statements": [
																{
																	"nativeSrc": "1110:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:7"
																				},
																				"nativeSrc": "1181:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:7"
																		},
																		"nativeSrc": "1149:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:7",
															"nodeType": "YulBlock",
															"src": "1233:129:7",
															"statements": [
																{
																	"nativeSrc": "1248:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:7"
																				},
																				"nativeSrc": "1320:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:7"
																		},
																		"nativeSrc": "1288:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:7",
															"nodeType": "YulBlock",
															"src": "1372:129:7",
															"statements": [
																{
																	"nativeSrc": "1387:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:7"
																				},
																				"nativeSrc": "1459:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:7"
																		},
																		"nativeSrc": "1427:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:7",
														"nodeType": "YulTypedName",
														"src": "910:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:7",
														"nodeType": "YulTypedName",
														"src": "921:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:7",
														"nodeType": "YulTypedName",
														"src": "933:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:7",
														"nodeType": "YulTypedName",
														"src": "941:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:7",
														"nodeType": "YulTypedName",
														"src": "949:6:7",
														"type": ""
													}
												],
												"src": "845:663:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610cad380380610cad83398181016040528101906100319190610156565b825f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101a6565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610125826100fc565b9050919050565b6101358161011b565b811461013f575f80fd5b50565b5f815190506101508161012c565b92915050565b5f805f6060848603121561016d5761016c6100f8565b5b5f61017a86828701610142565b935050602061018b86828701610142565b925050604061019c86828701610142565b9150509250925092565b610afa806101b35f395ff3fe608060405260043610610049575f3560e01c80632d296bf11461004d5780633fc8cef314610069578063b8fcf93714610093578063f53d9d58146100bd578063f887ea40146100d9575b5f80fd5b610067600480360381019061006291906105ac565b610103565b005b348015610074575f80fd5b5061007d6102d7565b60405161008a9190610616565b60405180910390f35b34801561009e575f80fd5b506100a76102fc565b6040516100b49190610616565b60405180910390f35b6100d760048036038101906100d291906105ac565b61031f565b005b3480156100e4575f80fd5b506100ed610543565b6040516100fa9190610616565b60405180910390f35b5f600267ffffffffffffffff81111561011f5761011e61062f565b5b60405190808252806020026020018201604052801561014d5781602001602082028036833780820191505090505b50905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f815181106101855761018461065c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106101f3576101f261065c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab534848433426040518663ffffffff1660e01b815260040161028e949392919061074f565b5f6040518083038185885af11580156102a9573d5f803e3d5ffd5b50505050506040513d5f823e3d601f19601f820116820180604052508101906102d291906108d0565b505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161037b93929190610917565b6020604051808303815f875af1158015610397573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103bb9190610981565b505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016104379291906109ac565b6020604051808303815f875af1158015610453573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104779190610981565b5060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d719345f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16845f8033426040518863ffffffff1660e01b81526004016104fc96959493929190610a15565b60606040518083038185885af1158015610518573d5f803e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061053d9190610a74565b50505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b61058b81610579565b8114610595575f80fd5b50565b5f813590506105a681610582565b92915050565b5f602082840312156105c1576105c0610571565b5b5f6105ce84828501610598565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610600826105d7565b9050919050565b610610816105f6565b82525050565b5f6020820190506106295f830184610607565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b61069281610579565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6106ca816105f6565b82525050565b5f6106db83836106c1565b60208301905092915050565b5f602082019050919050565b5f6106fd82610698565b61070781856106a2565b9350610712836106b2565b805f5b8381101561074257815161072988826106d0565b9750610734836106e7565b925050600181019050610715565b5085935050505092915050565b5f6080820190506107625f830187610689565b818103602083015261077481866106f3565b90506107836040830185610607565b6107906060830184610689565b95945050505050565b5f80fd5b5f601f19601f8301169050919050565b6107b68261079d565b810181811067ffffffffffffffff821117156107d5576107d461062f565b5b80604052505050565b5f6107e7610568565b90506107f382826107ad565b919050565b5f67ffffffffffffffff8211156108125761081161062f565b5b602082029050602081019050919050565b5f80fd5b5f8151905061083581610582565b92915050565b5f61084d610848846107f8565b6107de565b905080838252602082019050602084028301858111156108705761086f610823565b5b835b8181101561089957806108858882610827565b845260208401935050602081019050610872565b5050509392505050565b5f82601f8301126108b7576108b6610799565b5b81516108c784826020860161083b565b91505092915050565b5f602082840312156108e5576108e4610571565b5b5f82015167ffffffffffffffff81111561090257610901610575565b5b61090e848285016108a3565b91505092915050565b5f60608201905061092a5f830186610607565b6109376020830185610607565b6109446040830184610689565b949350505050565b5f8115159050919050565b6109608161094c565b811461096a575f80fd5b50565b5f8151905061097b81610957565b92915050565b5f6020828403121561099657610995610571565b5b5f6109a38482850161096d565b91505092915050565b5f6040820190506109bf5f830185610607565b6109cc6020830184610689565b9392505050565b5f819050919050565b5f819050919050565b5f6109ff6109fa6109f5846109d3565b6109dc565b610579565b9050919050565b610a0f816109e5565b82525050565b5f60c082019050610a285f830189610607565b610a356020830188610689565b610a426040830187610a06565b610a4f6060830186610a06565b610a5c6080830185610607565b610a6960a0830184610689565b979650505050505050565b5f805f60608486031215610a8b57610a8a610571565b5b5f610a9886828701610827565b9350506020610aa986828701610827565b9250506040610aba86828701610827565b915050925092509256fea2646970667358221220e84bf8649cb325caad444d9f420224fc1dac0c42febe13873cf3d4b23256430e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCAD CODESIZE SUB DUP1 PUSH2 0xCAD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x156 JUMP JUMPDEST DUP3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x1A6 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x125 DUP3 PUSH2 0xFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135 DUP2 PUSH2 0x11B JUMP JUMPDEST DUP2 EQ PUSH2 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x150 DUP2 PUSH2 0x12C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16D JUMPI PUSH2 0x16C PUSH2 0xF8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A DUP7 DUP3 DUP8 ADD PUSH2 0x142 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B DUP7 DUP3 DUP8 ADD PUSH2 0x142 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19C DUP7 DUP3 DUP8 ADD PUSH2 0x142 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xAFA DUP1 PUSH2 0x1B3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D296BF1 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xF53D9D58 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0xD9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F JUMPI PUSH2 0x11E PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x185 JUMPI PUSH2 0x184 PUSH2 0x65C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F3 JUMPI PUSH2 0x1F2 PUSH2 0x65C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7FF36AB5 CALLVALUE DUP5 DUP5 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x74F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x8D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x397 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x437 SWAP3 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x453 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 CALLVALUE PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH0 DUP1 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53D SWAP2 SWAP1 PUSH2 0xA74 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58B DUP2 PUSH2 0x579 JUMP JUMPDEST DUP2 EQ PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A6 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C0 PUSH2 0x571 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5CE DUP5 DUP3 DUP6 ADD PUSH2 0x598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x600 DUP3 PUSH2 0x5D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x5F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x629 PUSH0 DUP4 ADD DUP5 PUSH2 0x607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CA DUP2 PUSH2 0x5F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DB DUP4 DUP4 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6FD DUP3 PUSH2 0x698 JUMP JUMPDEST PUSH2 0x707 DUP2 DUP6 PUSH2 0x6A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x712 DUP4 PUSH2 0x6B2 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x742 JUMPI DUP2 MLOAD PUSH2 0x729 DUP9 DUP3 PUSH2 0x6D0 JUMP JUMPDEST SWAP8 POP PUSH2 0x734 DUP4 PUSH2 0x6E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x715 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x762 PUSH0 DUP4 ADD DUP8 PUSH2 0x689 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x774 DUP2 DUP7 PUSH2 0x6F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x783 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x790 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x79D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7D5 JUMPI PUSH2 0x7D4 PUSH2 0x62F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7E7 PUSH2 0x568 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F3 DUP3 DUP3 PUSH2 0x7AD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x835 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x84D PUSH2 0x848 DUP5 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x870 JUMPI PUSH2 0x86F PUSH2 0x823 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x899 JUMPI DUP1 PUSH2 0x885 DUP9 DUP3 PUSH2 0x827 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x872 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8B7 JUMPI PUSH2 0x8B6 PUSH2 0x799 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x8C7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x83B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E5 JUMPI PUSH2 0x8E4 PUSH2 0x571 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x902 JUMPI PUSH2 0x901 PUSH2 0x575 JUMP JUMPDEST JUMPDEST PUSH2 0x90E DUP5 DUP3 DUP6 ADD PUSH2 0x8A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x92A PUSH0 DUP4 ADD DUP7 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x937 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x944 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x960 DUP2 PUSH2 0x94C JUMP JUMPDEST DUP2 EQ PUSH2 0x96A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x97B DUP2 PUSH2 0x957 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0x571 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A3 DUP5 DUP3 DUP6 ADD PUSH2 0x96D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9BF PUSH0 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x9CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9FF PUSH2 0x9FA PUSH2 0x9F5 DUP5 PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0F DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xA28 PUSH0 DUP4 ADD DUP10 PUSH2 0x607 JUMP JUMPDEST PUSH2 0xA35 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x689 JUMP JUMPDEST PUSH2 0xA42 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xA06 JUMP JUMPDEST PUSH2 0xA4F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xA06 JUMP JUMPDEST PUSH2 0xA5C PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0xA69 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA8B JUMPI PUSH2 0xA8A PUSH2 0x571 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA98 DUP7 DUP3 DUP8 ADD PUSH2 0x827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xAA9 DUP7 DUP3 DUP8 ADD PUSH2 0x827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xABA DUP7 DUP3 DUP8 ADD PUSH2 0x827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x4B 0xF8 PUSH5 0x9CB325CAAD PREVRANDAO 0x4D SWAP16 TIMESTAMP MUL 0x24 0xFC SAR 0xAC 0xC TIMESTAMP INVALID 0xBE SGT DUP8 EXTCODECOPY RETURN 0xD4 0xB2 ORIGIN JUMP NUMBER 0xE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "337:1087:6:-:0;;;480:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;560:6;550:7;;:16;;;;;;;;;;;;;;;;;;585:7;576:6;;:16;;;;;;;;;;;;;;;;;;609:5;602:4;;:12;;;;;;;;;;;;;;;;;;480:141;;;337:1087;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;337:1087:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AddLiquidity_1063": {
									"entryPoint": 799,
									"id": 1063,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyToken_1107": {
									"entryPoint": 259,
									"id": 1107,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@myToken_993": {
									"entryPoint": 764,
									"id": 993,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@router_995": {
									"entryPoint": 1347,
									"id": 995,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weth_997": {
									"entryPoint": 727,
									"id": 997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 2676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 2566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2327,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 2515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 2533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 1628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_bool": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10867:7",
										"nodeType": "YulBlock",
										"src": "0:10867:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "597:87:7",
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nativeSrc": "607:29:7",
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nativeSrc": "616:20:7",
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nativeSrc": "645:33:7",
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nativeSrc": "645:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:7",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:7",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:7",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nativeSrc": "756:263:7",
													"nodeType": "YulBlock",
													"src": "756:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:7",
																"nodeType": "YulBlock",
																"src": "802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:7"
																			},
																			"nativeSrc": "804:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:7"
																		},
																		"nativeSrc": "804:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nativeSrc": "773:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:7",
																		"nodeType": "YulLiteral",
																		"src": "798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:7"
																},
																"nativeSrc": "769:32:7",
																"nodeType": "YulFunctionCall",
																"src": "769:32:7"
															},
															"nativeSrc": "766:119:7",
															"nodeType": "YulIf",
															"src": "766:119:7"
														},
														{
															"nativeSrc": "895:117:7",
															"nodeType": "YulBlock",
															"src": "895:117:7",
															"statements": [
																{
																	"nativeSrc": "910:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:7",
																		"nodeType": "YulLiteral",
																		"src": "924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:7",
																			"nodeType": "YulTypedName",
																			"src": "914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:7",
																	"nodeType": "YulAssignment",
																	"src": "939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:7"
																				},
																				"nativeSrc": "970:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:7"
																		},
																		"nativeSrc": "949:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:7",
														"nodeType": "YulTypedName",
														"src": "726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:7",
														"nodeType": "YulTypedName",
														"src": "737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:7",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													}
												],
												"src": "690:329:7"
											},
											{
												"body": {
													"nativeSrc": "1070:81:7",
													"nodeType": "YulBlock",
													"src": "1070:81:7",
													"statements": [
														{
															"nativeSrc": "1080:65:7",
															"nodeType": "YulAssignment",
															"src": "1080:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:7"
																},
																"nativeSrc": "1091:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:7",
														"nodeType": "YulTypedName",
														"src": "1052:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:7",
														"nodeType": "YulTypedName",
														"src": "1062:7:7",
														"type": ""
													}
												],
												"src": "1025:126:7"
											},
											{
												"body": {
													"nativeSrc": "1202:51:7",
													"nodeType": "YulBlock",
													"src": "1202:51:7",
													"statements": [
														{
															"nativeSrc": "1212:35:7",
															"nodeType": "YulAssignment",
															"src": "1212:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:7"
																},
																"nativeSrc": "1223:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:7",
														"nodeType": "YulTypedName",
														"src": "1184:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:7",
														"nodeType": "YulTypedName",
														"src": "1194:7:7",
														"type": ""
													}
												],
												"src": "1157:96:7"
											},
											{
												"body": {
													"nativeSrc": "1324:53:7",
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nativeSrc": "1346:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nativeSrc": "1334:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1259:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:7",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:7",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nativeSrc": "1481:124:7",
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nativeSrc": "1491:26:7",
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nativeSrc": "1499:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nativeSrc": "1580:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1527:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nativeSrc": "1527:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nativeSrc": "1527:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1383:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:7",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:7",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:7",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nativeSrc": "1639:152:7",
													"nodeType": "YulBlock",
													"src": "1639:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1659:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1659:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1649:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1649:6:7"
																},
																"nativeSrc": "1649:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1649:88:7"
															},
															"nativeSrc": "1649:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1649:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1753:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1753:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1756:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1756:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1746:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:7"
																},
																"nativeSrc": "1746:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1746:15:7"
															},
															"nativeSrc": "1746:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1746:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1777:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1777:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1780:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1780:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1770:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1770:6:7"
																},
																"nativeSrc": "1770:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1770:15:7"
															},
															"nativeSrc": "1770:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1770:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1611:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1611:180:7"
											},
											{
												"body": {
													"nativeSrc": "1825:152:7",
													"nodeType": "YulBlock",
													"src": "1825:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1842:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1842:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1845:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1845:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1835:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:7"
																},
																"nativeSrc": "1835:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1835:88:7"
															},
															"nativeSrc": "1835:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1835:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1939:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1939:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1942:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1942:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1932:6:7"
																},
																"nativeSrc": "1932:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1932:15:7"
															},
															"nativeSrc": "1932:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1932:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1966:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1966:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1956:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:7"
																},
																"nativeSrc": "1956:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1956:15:7"
															},
															"nativeSrc": "1956:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1956:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "1797:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1797:180:7"
											},
											{
												"body": {
													"nativeSrc": "2048:53:7",
													"nodeType": "YulBlock",
													"src": "2048:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2065:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2065:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2088:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2088:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2070:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2070:17:7"
																		},
																		"nativeSrc": "2070:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2070:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2058:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2058:6:7"
																},
																"nativeSrc": "2058:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2058:37:7"
															},
															"nativeSrc": "2058:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2058:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1983:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2036:5:7",
														"nodeType": "YulTypedName",
														"src": "2036:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2043:3:7",
														"nodeType": "YulTypedName",
														"src": "2043:3:7",
														"type": ""
													}
												],
												"src": "1983:118:7"
											},
											{
												"body": {
													"nativeSrc": "2181:40:7",
													"nodeType": "YulBlock",
													"src": "2181:40:7",
													"statements": [
														{
															"nativeSrc": "2192:22:7",
															"nodeType": "YulAssignment",
															"src": "2192:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2208:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2208:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2202:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2202:5:7"
																},
																"nativeSrc": "2202:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2202:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2192:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "2107:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2164:5:7",
														"nodeType": "YulTypedName",
														"src": "2164:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2174:6:7",
														"nodeType": "YulTypedName",
														"src": "2174:6:7",
														"type": ""
													}
												],
												"src": "2107:114:7"
											},
											{
												"body": {
													"nativeSrc": "2338:73:7",
													"nodeType": "YulBlock",
													"src": "2338:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2348:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:7"
																},
																"nativeSrc": "2348:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2348:19:7"
															},
															"nativeSrc": "2348:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "2348:19:7"
														},
														{
															"nativeSrc": "2376:29:7",
															"nodeType": "YulAssignment",
															"src": "2376:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2395:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2395:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2400:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2400:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2391:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2391:3:7"
																},
																"nativeSrc": "2391:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2391:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2376:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "2376:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2227:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2310:3:7",
														"nodeType": "YulTypedName",
														"src": "2310:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2315:6:7",
														"nodeType": "YulTypedName",
														"src": "2315:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2326:11:7",
														"nodeType": "YulTypedName",
														"src": "2326:11:7",
														"type": ""
													}
												],
												"src": "2227:184:7"
											},
											{
												"body": {
													"nativeSrc": "2489:60:7",
													"nodeType": "YulBlock",
													"src": "2489:60:7",
													"statements": [
														{
															"nativeSrc": "2499:11:7",
															"nodeType": "YulAssignment",
															"src": "2499:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2507:3:7",
																"nodeType": "YulIdentifier",
																"src": "2507:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2499:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2499:4:7"
																}
															]
														},
														{
															"nativeSrc": "2520:22:7",
															"nodeType": "YulAssignment",
															"src": "2520:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2532:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2532:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2537:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2537:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2520:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2520:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "2417:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2476:3:7",
														"nodeType": "YulTypedName",
														"src": "2476:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2484:4:7",
														"nodeType": "YulTypedName",
														"src": "2484:4:7",
														"type": ""
													}
												],
												"src": "2417:132:7"
											},
											{
												"body": {
													"nativeSrc": "2610:53:7",
													"nodeType": "YulBlock",
													"src": "2610:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2627:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2627:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2650:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2650:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2632:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2632:17:7"
																		},
																		"nativeSrc": "2632:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2632:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2620:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:7"
																},
																"nativeSrc": "2620:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2620:37:7"
															},
															"nativeSrc": "2620:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2620:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "2555:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2598:5:7",
														"nodeType": "YulTypedName",
														"src": "2598:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2605:3:7",
														"nodeType": "YulTypedName",
														"src": "2605:3:7",
														"type": ""
													}
												],
												"src": "2555:108:7"
											},
											{
												"body": {
													"nativeSrc": "2749:99:7",
													"nodeType": "YulBlock",
													"src": "2749:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2793:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2793:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2801:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2801:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "2759:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "2759:33:7"
																},
																"nativeSrc": "2759:46:7",
																"nodeType": "YulFunctionCall",
																"src": "2759:46:7"
															},
															"nativeSrc": "2759:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "2759:46:7"
														},
														{
															"nativeSrc": "2814:28:7",
															"nodeType": "YulAssignment",
															"src": "2814:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2832:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2832:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2837:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2837:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2828:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2828:3:7"
																},
																"nativeSrc": "2828:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2828:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "2814:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "2814:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "2669:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "2722:6:7",
														"nodeType": "YulTypedName",
														"src": "2722:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2730:3:7",
														"nodeType": "YulTypedName",
														"src": "2730:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "2738:10:7",
														"nodeType": "YulTypedName",
														"src": "2738:10:7",
														"type": ""
													}
												],
												"src": "2669:179:7"
											},
											{
												"body": {
													"nativeSrc": "2929:38:7",
													"nodeType": "YulBlock",
													"src": "2929:38:7",
													"statements": [
														{
															"nativeSrc": "2939:22:7",
															"nodeType": "YulAssignment",
															"src": "2939:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2951:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2951:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2956:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2956:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2947:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2947:3:7"
																},
																"nativeSrc": "2947:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2947:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "2939:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2939:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "2854:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2916:3:7",
														"nodeType": "YulTypedName",
														"src": "2916:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "2924:4:7",
														"nodeType": "YulTypedName",
														"src": "2924:4:7",
														"type": ""
													}
												],
												"src": "2854:113:7"
											},
											{
												"body": {
													"nativeSrc": "3127:608:7",
													"nodeType": "YulBlock",
													"src": "3127:608:7",
													"statements": [
														{
															"nativeSrc": "3137:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3137:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3199:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3199:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "3151:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "3151:47:7"
																},
																"nativeSrc": "3151:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3151:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3141:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3141:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3214:93:7",
															"nodeType": "YulAssignment",
															"src": "3214:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3295:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3295:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3300:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3300:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3221:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "3221:73:7"
																},
																"nativeSrc": "3221:86:7",
																"nodeType": "YulFunctionCall",
																"src": "3221:86:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3214:3:7"
																}
															]
														},
														{
															"nativeSrc": "3316:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3316:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3381:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3381:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "3331:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "3331:49:7"
																},
																"nativeSrc": "3331:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3331:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "3320:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3320:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3396:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3396:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "3410:7:7",
																"nodeType": "YulIdentifier",
																"src": "3410:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3400:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3400:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3486:224:7",
																"nodeType": "YulBlock",
																"src": "3486:224:7",
																"statements": [
																	{
																		"nativeSrc": "3500:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3500:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3527:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3527:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3521:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3521:5:7"
																			},
																			"nativeSrc": "3521:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3521:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "3504:13:7",
																				"nodeType": "YulTypedName",
																				"src": "3504:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3547:70:7",
																		"nodeType": "YulAssignment",
																		"src": "3547:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "3598:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "3598:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "3613:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3613:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "3554:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "3554:43:7"
																			},
																			"nativeSrc": "3554:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3554:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3547:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3547:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3630:70:7",
																		"nodeType": "YulAssignment",
																		"src": "3630:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3693:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3693:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "3640:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "3640:52:7"
																			},
																			"nativeSrc": "3640:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3640:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3630:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3630:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3448:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3448:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3451:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3445:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3445:2:7"
																},
																"nativeSrc": "3445:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3445:13:7"
															},
															"nativeSrc": "3426:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3459:18:7",
																"nodeType": "YulBlock",
																"src": "3459:18:7",
																"statements": [
																	{
																		"nativeSrc": "3461:14:7",
																		"nodeType": "YulAssignment",
																		"src": "3461:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3470:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "3470:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3473:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3473:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3466:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3466:3:7"
																			},
																			"nativeSrc": "3466:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3466:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3461:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3461:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3430:14:7",
																"nodeType": "YulBlock",
																"src": "3430:14:7",
																"statements": [
																	{
																		"nativeSrc": "3432:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3432:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3441:1:7",
																			"nodeType": "YulLiteral",
																			"src": "3441:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "3436:1:7",
																				"nodeType": "YulTypedName",
																				"src": "3436:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3426:284:7"
														},
														{
															"nativeSrc": "3719:10:7",
															"nodeType": "YulAssignment",
															"src": "3719:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "3726:3:7",
																"nodeType": "YulIdentifier",
																"src": "3726:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3719:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3719:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3003:732:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3106:5:7",
														"nodeType": "YulTypedName",
														"src": "3106:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3113:3:7",
														"nodeType": "YulTypedName",
														"src": "3113:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3122:3:7",
														"nodeType": "YulTypedName",
														"src": "3122:3:7",
														"type": ""
													}
												],
												"src": "3003:732:7"
											},
											{
												"body": {
													"nativeSrc": "3973:472:7",
													"nodeType": "YulBlock",
													"src": "3973:472:7",
													"statements": [
														{
															"nativeSrc": "3983:27:7",
															"nodeType": "YulAssignment",
															"src": "3983:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3995:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3995:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4006:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4006:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3991:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:7"
																},
																"nativeSrc": "3991:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3991:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3983:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3983:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4064:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4064:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4077:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4077:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4088:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4088:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4073:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4073:3:7"
																		},
																		"nativeSrc": "4073:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4073:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4020:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4020:43:7"
																},
																"nativeSrc": "4020:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4020:71:7"
															},
															"nativeSrc": "4020:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4020:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4112:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4112:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4123:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4123:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4108:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4108:3:7"
																		},
																		"nativeSrc": "4108:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4132:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4132:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4138:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4138:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4128:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4128:3:7"
																		},
																		"nativeSrc": "4128:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4128:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4101:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:7"
																},
																"nativeSrc": "4101:48:7",
																"nodeType": "YulFunctionCall",
																"src": "4101:48:7"
															},
															"nativeSrc": "4101:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "4101:48:7"
														},
														{
															"nativeSrc": "4158:116:7",
															"nodeType": "YulAssignment",
															"src": "4158:116:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4260:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4260:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4269:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4269:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4166:93:7",
																	"nodeType": "YulIdentifier",
																	"src": "4166:93:7"
																},
																"nativeSrc": "4166:108:7",
																"nodeType": "YulFunctionCall",
																"src": "4166:108:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4158:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4328:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4328:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4341:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4341:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4352:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4352:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4337:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:7"
																		},
																		"nativeSrc": "4337:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4337:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4284:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4284:43:7"
																},
																"nativeSrc": "4284:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4284:72:7"
															},
															"nativeSrc": "4284:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4284:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4410:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4410:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4423:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4423:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4434:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4434:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4419:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4419:3:7"
																		},
																		"nativeSrc": "4419:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4419:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4366:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4366:43:7"
																},
																"nativeSrc": "4366:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4366:72:7"
															},
															"nativeSrc": "4366:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4366:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3741:704:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3921:9:7",
														"nodeType": "YulTypedName",
														"src": "3921:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3933:6:7",
														"nodeType": "YulTypedName",
														"src": "3933:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3941:6:7",
														"nodeType": "YulTypedName",
														"src": "3941:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3949:6:7",
														"nodeType": "YulTypedName",
														"src": "3949:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3957:6:7",
														"nodeType": "YulTypedName",
														"src": "3957:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3968:4:7",
														"nodeType": "YulTypedName",
														"src": "3968:4:7",
														"type": ""
													}
												],
												"src": "3741:704:7"
											},
											{
												"body": {
													"nativeSrc": "4540:28:7",
													"nodeType": "YulBlock",
													"src": "4540:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4557:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4557:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4560:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4560:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4550:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4550:6:7"
																},
																"nativeSrc": "4550:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4550:12:7"
															},
															"nativeSrc": "4550:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "4550:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4451:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4451:117:7"
											},
											{
												"body": {
													"nativeSrc": "4622:54:7",
													"nodeType": "YulBlock",
													"src": "4622:54:7",
													"statements": [
														{
															"nativeSrc": "4632:38:7",
															"nodeType": "YulAssignment",
															"src": "4632:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4650:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4650:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4657:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4657:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4646:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4646:3:7"
																		},
																		"nativeSrc": "4646:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4646:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4666:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4666:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4662:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4662:3:7"
																		},
																		"nativeSrc": "4662:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4662:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4642:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4642:3:7"
																},
																"nativeSrc": "4642:28:7",
																"nodeType": "YulFunctionCall",
																"src": "4642:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4632:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4632:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4574:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4605:5:7",
														"nodeType": "YulTypedName",
														"src": "4605:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4615:6:7",
														"nodeType": "YulTypedName",
														"src": "4615:6:7",
														"type": ""
													}
												],
												"src": "4574:102:7"
											},
											{
												"body": {
													"nativeSrc": "4725:238:7",
													"nodeType": "YulBlock",
													"src": "4725:238:7",
													"statements": [
														{
															"nativeSrc": "4735:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4735:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4757:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4757:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4787:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4787:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4765:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "4765:21:7"
																		},
																		"nativeSrc": "4765:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4765:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4753:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4753:3:7"
																},
																"nativeSrc": "4753:40:7",
																"nodeType": "YulFunctionCall",
																"src": "4753:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4739:10:7",
																	"nodeType": "YulTypedName",
																	"src": "4739:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4904:22:7",
																"nodeType": "YulBlock",
																"src": "4904:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4906:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4906:16:7"
																			},
																			"nativeSrc": "4906:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4906:18:7"
																		},
																		"nativeSrc": "4906:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4906:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4847:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "4847:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4859:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4859:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4844:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4844:2:7"
																		},
																		"nativeSrc": "4844:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4844:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4883:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "4883:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4895:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4895:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4880:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4880:2:7"
																		},
																		"nativeSrc": "4880:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4880:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4841:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4841:2:7"
																},
																"nativeSrc": "4841:62:7",
																"nodeType": "YulFunctionCall",
																"src": "4841:62:7"
															},
															"nativeSrc": "4838:88:7",
															"nodeType": "YulIf",
															"src": "4838:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4942:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4946:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "4946:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4935:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4935:6:7"
																},
																"nativeSrc": "4935:22:7",
																"nodeType": "YulFunctionCall",
																"src": "4935:22:7"
															},
															"nativeSrc": "4935:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "4935:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4682:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4711:6:7",
														"nodeType": "YulTypedName",
														"src": "4711:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4719:4:7",
														"nodeType": "YulTypedName",
														"src": "4719:4:7",
														"type": ""
													}
												],
												"src": "4682:281:7"
											},
											{
												"body": {
													"nativeSrc": "5010:88:7",
													"nodeType": "YulBlock",
													"src": "5010:88:7",
													"statements": [
														{
															"nativeSrc": "5020:30:7",
															"nodeType": "YulAssignment",
															"src": "5020:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5030:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5030:18:7"
																},
																"nativeSrc": "5030:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5030:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5020:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5079:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5079:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5087:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5087:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5059:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "5059:19:7"
																},
																"nativeSrc": "5059:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5059:33:7"
															},
															"nativeSrc": "5059:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5059:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4969:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4994:4:7",
														"nodeType": "YulTypedName",
														"src": "4994:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5003:6:7",
														"nodeType": "YulTypedName",
														"src": "5003:6:7",
														"type": ""
													}
												],
												"src": "4969:129:7"
											},
											{
												"body": {
													"nativeSrc": "5186:229:7",
													"nodeType": "YulBlock",
													"src": "5186:229:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5291:22:7",
																"nodeType": "YulBlock",
																"src": "5291:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5293:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5293:16:7"
																			},
																			"nativeSrc": "5293:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5293:18:7"
																		},
																		"nativeSrc": "5293:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5293:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5263:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5271:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5271:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5260:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5260:2:7"
																},
																"nativeSrc": "5260:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5260:30:7"
															},
															"nativeSrc": "5257:56:7",
															"nodeType": "YulIf",
															"src": "5257:56:7"
														},
														{
															"nativeSrc": "5323:25:7",
															"nodeType": "YulAssignment",
															"src": "5323:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5335:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5335:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5343:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5343:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5331:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:7"
																},
																"nativeSrc": "5331:17:7",
																"nodeType": "YulFunctionCall",
																"src": "5331:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5323:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5323:4:7"
																}
															]
														},
														{
															"nativeSrc": "5385:23:7",
															"nodeType": "YulAssignment",
															"src": "5385:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5397:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5397:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5393:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5393:3:7"
																},
																"nativeSrc": "5393:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5393:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5385:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5385:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5104:311:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5170:6:7",
														"nodeType": "YulTypedName",
														"src": "5170:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5181:4:7",
														"nodeType": "YulTypedName",
														"src": "5181:4:7",
														"type": ""
													}
												],
												"src": "5104:311:7"
											},
											{
												"body": {
													"nativeSrc": "5510:28:7",
													"nodeType": "YulBlock",
													"src": "5510:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5527:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5527:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5530:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5530:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5520:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5520:6:7"
																},
																"nativeSrc": "5520:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5520:12:7"
															},
															"nativeSrc": "5520:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5520:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5421:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5421:117:7"
											},
											{
												"body": {
													"nativeSrc": "5607:80:7",
													"nodeType": "YulBlock",
													"src": "5607:80:7",
													"statements": [
														{
															"nativeSrc": "5617:22:7",
															"nodeType": "YulAssignment",
															"src": "5617:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5632:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5632:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5626:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5626:5:7"
																},
																"nativeSrc": "5626:13:7",
																"nodeType": "YulFunctionCall",
																"src": "5626:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5617:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5617:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5675:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5675:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5648:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "5648:26:7"
																},
																"nativeSrc": "5648:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5648:33:7"
															},
															"nativeSrc": "5648:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5648:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5544:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5585:6:7",
														"nodeType": "YulTypedName",
														"src": "5585:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5593:3:7",
														"nodeType": "YulTypedName",
														"src": "5593:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5601:5:7",
														"nodeType": "YulTypedName",
														"src": "5601:5:7",
														"type": ""
													}
												],
												"src": "5544:143:7"
											},
											{
												"body": {
													"nativeSrc": "5823:619:7",
													"nodeType": "YulBlock",
													"src": "5823:619:7",
													"statements": [
														{
															"nativeSrc": "5833:90:7",
															"nodeType": "YulAssignment",
															"src": "5833:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5915:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "5858:56:7",
																			"nodeType": "YulIdentifier",
																			"src": "5858:56:7"
																		},
																		"nativeSrc": "5858:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5858:64:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5842:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "5842:15:7"
																},
																"nativeSrc": "5842:81:7",
																"nodeType": "YulFunctionCall",
																"src": "5842:81:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5833:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5833:5:7"
																}
															]
														},
														{
															"nativeSrc": "5932:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5932:16:7",
															"value": {
																"name": "array",
																"nativeSrc": "5943:5:7",
																"nodeType": "YulIdentifier",
																"src": "5943:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5936:3:7",
																	"nodeType": "YulTypedName",
																	"src": "5936:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5965:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5965:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5972:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5972:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5958:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5958:6:7"
																},
																"nativeSrc": "5958:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5958:21:7"
															},
															"nativeSrc": "5958:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5958:21:7"
														},
														{
															"nativeSrc": "5988:23:7",
															"nodeType": "YulAssignment",
															"src": "5988:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5999:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5999:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6006:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6006:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5995:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5995:3:7"
																},
																"nativeSrc": "5995:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5995:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5988:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5988:3:7"
																}
															]
														},
														{
															"nativeSrc": "6021:44:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6021:44:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6039:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6039:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6051:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6051:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6059:4:7",
																				"nodeType": "YulLiteral",
																				"src": "6059:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6047:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6047:3:7"
																		},
																		"nativeSrc": "6047:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6047:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6035:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6035:3:7"
																},
																"nativeSrc": "6035:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6035:30:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6025:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6025:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6093:103:7",
																"nodeType": "YulBlock",
																"src": "6093:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6107:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6107:77:7"
																			},
																			"nativeSrc": "6107:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6107:79:7"
																		},
																		"nativeSrc": "6107:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6107:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6080:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6080:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6088:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6088:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6077:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6077:2:7"
																},
																"nativeSrc": "6077:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6077:15:7"
															},
															"nativeSrc": "6074:122:7",
															"nodeType": "YulIf",
															"src": "6074:122:7"
														},
														{
															"body": {
																"nativeSrc": "6281:155:7",
																"nodeType": "YulBlock",
																"src": "6281:155:7",
																"statements": [
																	{
																		"nativeSrc": "6296:21:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6296:21:7",
																		"value": {
																			"name": "src",
																			"nativeSrc": "6314:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6314:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "6300:10:7",
																				"nodeType": "YulTypedName",
																				"src": "6300:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6338:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6338:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "6375:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6375:10:7"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "6387:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6387:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nativeSrc": "6343:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "6343:31:7"
																					},
																					"nativeSrc": "6343:48:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6343:48:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6331:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6331:6:7"
																			},
																			"nativeSrc": "6331:61:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6331:61:7"
																		},
																		"nativeSrc": "6331:61:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6331:61:7"
																	},
																	{
																		"nativeSrc": "6405:21:7",
																		"nodeType": "YulAssignment",
																		"src": "6405:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6416:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6416:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6421:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6421:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6412:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6412:3:7"
																			},
																			"nativeSrc": "6412:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6412:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6405:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6405:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6234:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6234:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6239:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6239:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6231:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6231:2:7"
																},
																"nativeSrc": "6231:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6231:15:7"
															},
															"nativeSrc": "6205:231:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6247:25:7",
																"nodeType": "YulBlock",
																"src": "6247:25:7",
																"statements": [
																	{
																		"nativeSrc": "6249:21:7",
																		"nodeType": "YulAssignment",
																		"src": "6249:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6260:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6260:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6265:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6265:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6256:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6256:3:7"
																			},
																			"nativeSrc": "6256:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6256:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6249:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6249:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6209:21:7",
																"nodeType": "YulBlock",
																"src": "6209:21:7",
																"statements": [
																	{
																		"nativeSrc": "6211:17:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6211:17:7",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "6222:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6222:6:7"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "6215:3:7",
																				"nodeType": "YulTypedName",
																				"src": "6215:3:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6205:231:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "5710:732:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5793:6:7",
														"nodeType": "YulTypedName",
														"src": "5793:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5801:6:7",
														"nodeType": "YulTypedName",
														"src": "5801:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5809:3:7",
														"nodeType": "YulTypedName",
														"src": "5809:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5817:5:7",
														"nodeType": "YulTypedName",
														"src": "5817:5:7",
														"type": ""
													}
												],
												"src": "5710:732:7"
											},
											{
												"body": {
													"nativeSrc": "6553:297:7",
													"nodeType": "YulBlock",
													"src": "6553:297:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6602:83:7",
																"nodeType": "YulBlock",
																"src": "6602:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6604:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6604:77:7"
																			},
																			"nativeSrc": "6604:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6604:79:7"
																		},
																		"nativeSrc": "6604:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6604:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6581:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6581:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6589:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6589:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6577:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6577:3:7"
																				},
																				"nativeSrc": "6577:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6577:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6596:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6596:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6573:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6573:3:7"
																		},
																		"nativeSrc": "6573:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6573:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6566:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6566:6:7"
																},
																"nativeSrc": "6566:35:7",
																"nodeType": "YulFunctionCall",
																"src": "6566:35:7"
															},
															"nativeSrc": "6563:122:7",
															"nodeType": "YulIf",
															"src": "6563:122:7"
														},
														{
															"nativeSrc": "6694:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6694:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6714:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6714:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6708:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6708:5:7"
																},
																"nativeSrc": "6708:13:7",
																"nodeType": "YulFunctionCall",
																"src": "6708:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6698:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6698:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6730:114:7",
															"nodeType": "YulAssignment",
															"src": "6730:114:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6817:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6817:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6825:4:7",
																				"nodeType": "YulLiteral",
																				"src": "6825:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6813:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6813:3:7"
																		},
																		"nativeSrc": "6813:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6813:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6832:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6832:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6840:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6840:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "6739:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "6739:73:7"
																},
																"nativeSrc": "6739:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6739:105:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6730:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6730:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "6465:385:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6531:6:7",
														"nodeType": "YulTypedName",
														"src": "6531:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6539:3:7",
														"nodeType": "YulTypedName",
														"src": "6539:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6547:5:7",
														"nodeType": "YulTypedName",
														"src": "6547:5:7",
														"type": ""
													}
												],
												"src": "6465:385:7"
											},
											{
												"body": {
													"nativeSrc": "6958:452:7",
													"nodeType": "YulBlock",
													"src": "6958:452:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7004:83:7",
																"nodeType": "YulBlock",
																"src": "7004:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7006:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7006:77:7"
																			},
																			"nativeSrc": "7006:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7006:79:7"
																		},
																		"nativeSrc": "7006:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7006:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6979:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6979:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6988:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6988:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6975:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6975:3:7"
																		},
																		"nativeSrc": "6975:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6975:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7000:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7000:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6971:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6971:3:7"
																},
																"nativeSrc": "6971:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6971:32:7"
															},
															"nativeSrc": "6968:119:7",
															"nodeType": "YulIf",
															"src": "6968:119:7"
														},
														{
															"nativeSrc": "7097:306:7",
															"nodeType": "YulBlock",
															"src": "7097:306:7",
															"statements": [
																{
																	"nativeSrc": "7112:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7112:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7136:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7136:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7147:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7147:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7132:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7132:3:7"
																				},
																				"nativeSrc": "7132:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7132:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7126:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7126:5:7"
																		},
																		"nativeSrc": "7126:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7126:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7116:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7116:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7197:83:7",
																		"nodeType": "YulBlock",
																		"src": "7197:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7199:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "7199:77:7"
																					},
																					"nativeSrc": "7199:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7199:79:7"
																				},
																				"nativeSrc": "7199:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7199:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7169:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7169:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7177:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7177:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7166:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7166:2:7"
																		},
																		"nativeSrc": "7166:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7166:30:7"
																	},
																	"nativeSrc": "7163:117:7",
																	"nodeType": "YulIf",
																	"src": "7163:117:7"
																},
																{
																	"nativeSrc": "7294:99:7",
																	"nodeType": "YulAssignment",
																	"src": "7294:99:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7365:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7365:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7376:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7376:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7361:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7361:3:7"
																				},
																				"nativeSrc": "7361:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7361:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7385:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7385:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "7304:56:7",
																			"nodeType": "YulIdentifier",
																			"src": "7304:56:7"
																		},
																		"nativeSrc": "7304:89:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7304:89:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7294:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7294:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "6856:554:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6928:9:7",
														"nodeType": "YulTypedName",
														"src": "6928:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6939:7:7",
														"nodeType": "YulTypedName",
														"src": "6939:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6951:6:7",
														"nodeType": "YulTypedName",
														"src": "6951:6:7",
														"type": ""
													}
												],
												"src": "6856:554:7"
											},
											{
												"body": {
													"nativeSrc": "7570:288:7",
													"nodeType": "YulBlock",
													"src": "7570:288:7",
													"statements": [
														{
															"nativeSrc": "7580:26:7",
															"nodeType": "YulAssignment",
															"src": "7580:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7592:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7592:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7603:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7603:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7588:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7588:3:7"
																},
																"nativeSrc": "7588:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7588:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7580:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7580:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7660:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7660:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7673:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7673:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7684:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7684:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7669:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7669:3:7"
																		},
																		"nativeSrc": "7669:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7616:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7616:43:7"
																},
																"nativeSrc": "7616:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7616:71:7"
															},
															"nativeSrc": "7616:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7616:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7741:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7741:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7754:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7754:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7765:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7765:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7750:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7750:3:7"
																		},
																		"nativeSrc": "7750:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7750:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7697:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7697:43:7"
																},
																"nativeSrc": "7697:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7697:72:7"
															},
															"nativeSrc": "7697:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7697:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7823:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7823:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7836:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7836:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7847:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7847:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7832:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7832:3:7"
																		},
																		"nativeSrc": "7832:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7832:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7779:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7779:43:7"
																},
																"nativeSrc": "7779:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7779:72:7"
															},
															"nativeSrc": "7779:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7779:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7416:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7526:9:7",
														"nodeType": "YulTypedName",
														"src": "7526:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7538:6:7",
														"nodeType": "YulTypedName",
														"src": "7538:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7546:6:7",
														"nodeType": "YulTypedName",
														"src": "7546:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7554:6:7",
														"nodeType": "YulTypedName",
														"src": "7554:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7565:4:7",
														"nodeType": "YulTypedName",
														"src": "7565:4:7",
														"type": ""
													}
												],
												"src": "7416:442:7"
											},
											{
												"body": {
													"nativeSrc": "7906:48:7",
													"nodeType": "YulBlock",
													"src": "7906:48:7",
													"statements": [
														{
															"nativeSrc": "7916:32:7",
															"nodeType": "YulAssignment",
															"src": "7916:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7941:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7941:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7934:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7934:6:7"
																		},
																		"nativeSrc": "7934:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7927:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7927:6:7"
																},
																"nativeSrc": "7927:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7927:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7916:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "7916:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7864:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7888:5:7",
														"nodeType": "YulTypedName",
														"src": "7888:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7898:7:7",
														"nodeType": "YulTypedName",
														"src": "7898:7:7",
														"type": ""
													}
												],
												"src": "7864:90:7"
											},
											{
												"body": {
													"nativeSrc": "8000:76:7",
													"nodeType": "YulBlock",
													"src": "8000:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8054:16:7",
																"nodeType": "YulBlock",
																"src": "8054:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8063:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8063:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8066:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8066:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8056:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8056:6:7"
																			},
																			"nativeSrc": "8056:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8056:12:7"
																		},
																		"nativeSrc": "8056:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8056:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8023:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8023:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8045:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8045:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8030:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "8030:14:7"
																				},
																				"nativeSrc": "8030:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8030:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8020:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8020:2:7"
																		},
																		"nativeSrc": "8020:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8020:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8013:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8013:6:7"
																},
																"nativeSrc": "8013:40:7",
																"nodeType": "YulFunctionCall",
																"src": "8013:40:7"
															},
															"nativeSrc": "8010:60:7",
															"nodeType": "YulIf",
															"src": "8010:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7960:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7993:5:7",
														"nodeType": "YulTypedName",
														"src": "7993:5:7",
														"type": ""
													}
												],
												"src": "7960:116:7"
											},
											{
												"body": {
													"nativeSrc": "8142:77:7",
													"nodeType": "YulBlock",
													"src": "8142:77:7",
													"statements": [
														{
															"nativeSrc": "8152:22:7",
															"nodeType": "YulAssignment",
															"src": "8152:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8167:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8167:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8161:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8161:5:7"
																},
																"nativeSrc": "8161:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8161:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8152:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8152:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8207:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8207:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8183:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "8183:23:7"
																},
																"nativeSrc": "8183:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8183:30:7"
															},
															"nativeSrc": "8183:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8183:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8082:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8120:6:7",
														"nodeType": "YulTypedName",
														"src": "8120:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8128:3:7",
														"nodeType": "YulTypedName",
														"src": "8128:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8136:5:7",
														"nodeType": "YulTypedName",
														"src": "8136:5:7",
														"type": ""
													}
												],
												"src": "8082:137:7"
											},
											{
												"body": {
													"nativeSrc": "8299:271:7",
													"nodeType": "YulBlock",
													"src": "8299:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8345:83:7",
																"nodeType": "YulBlock",
																"src": "8345:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8347:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8347:77:7"
																			},
																			"nativeSrc": "8347:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8347:79:7"
																		},
																		"nativeSrc": "8347:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8347:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8320:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8320:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8329:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8329:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8316:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:7"
																		},
																		"nativeSrc": "8316:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8316:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8341:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8341:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8312:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8312:3:7"
																},
																"nativeSrc": "8312:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8312:32:7"
															},
															"nativeSrc": "8309:119:7",
															"nodeType": "YulIf",
															"src": "8309:119:7"
														},
														{
															"nativeSrc": "8438:125:7",
															"nodeType": "YulBlock",
															"src": "8438:125:7",
															"statements": [
																{
																	"nativeSrc": "8453:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8453:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8467:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8467:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8457:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8457:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8482:71:7",
																	"nodeType": "YulAssignment",
																	"src": "8482:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8525:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8525:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8536:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8536:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8521:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8521:3:7"
																				},
																				"nativeSrc": "8521:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8521:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8545:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8545:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8492:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "8492:28:7"
																		},
																		"nativeSrc": "8492:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8492:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8482:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8482:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8225:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8269:9:7",
														"nodeType": "YulTypedName",
														"src": "8269:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8280:7:7",
														"nodeType": "YulTypedName",
														"src": "8280:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8292:6:7",
														"nodeType": "YulTypedName",
														"src": "8292:6:7",
														"type": ""
													}
												],
												"src": "8225:345:7"
											},
											{
												"body": {
													"nativeSrc": "8702:206:7",
													"nodeType": "YulBlock",
													"src": "8702:206:7",
													"statements": [
														{
															"nativeSrc": "8712:26:7",
															"nodeType": "YulAssignment",
															"src": "8712:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8724:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8724:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8735:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8735:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8720:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8720:3:7"
																},
																"nativeSrc": "8720:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8720:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8712:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8712:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8792:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8792:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8805:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8805:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8816:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8816:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8801:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:7"
																		},
																		"nativeSrc": "8801:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8801:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8748:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8748:43:7"
																},
																"nativeSrc": "8748:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8748:71:7"
															},
															"nativeSrc": "8748:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8748:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8873:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8873:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8886:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8886:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8897:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8897:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8882:3:7"
																		},
																		"nativeSrc": "8882:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8882:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8829:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8829:43:7"
																},
																"nativeSrc": "8829:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8829:72:7"
															},
															"nativeSrc": "8829:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8829:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8576:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8666:9:7",
														"nodeType": "YulTypedName",
														"src": "8666:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8678:6:7",
														"nodeType": "YulTypedName",
														"src": "8678:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8686:6:7",
														"nodeType": "YulTypedName",
														"src": "8686:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8697:4:7",
														"nodeType": "YulTypedName",
														"src": "8697:4:7",
														"type": ""
													}
												],
												"src": "8576:332:7"
											},
											{
												"body": {
													"nativeSrc": "8967:32:7",
													"nodeType": "YulBlock",
													"src": "8967:32:7",
													"statements": [
														{
															"nativeSrc": "8977:16:7",
															"nodeType": "YulAssignment",
															"src": "8977:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "8988:5:7",
																"nodeType": "YulIdentifier",
																"src": "8988:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8977:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8977:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "8914:85:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8949:5:7",
														"nodeType": "YulTypedName",
														"src": "8949:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8959:7:7",
														"nodeType": "YulTypedName",
														"src": "8959:7:7",
														"type": ""
													}
												],
												"src": "8914:85:7"
											},
											{
												"body": {
													"nativeSrc": "9037:28:7",
													"nodeType": "YulBlock",
													"src": "9037:28:7",
													"statements": [
														{
															"nativeSrc": "9047:12:7",
															"nodeType": "YulAssignment",
															"src": "9047:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "9054:5:7",
																"nodeType": "YulIdentifier",
																"src": "9054:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9047:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9047:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9005:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9023:5:7",
														"nodeType": "YulTypedName",
														"src": "9023:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9033:3:7",
														"nodeType": "YulTypedName",
														"src": "9033:3:7",
														"type": ""
													}
												],
												"src": "9005:60:7"
											},
											{
												"body": {
													"nativeSrc": "9139:90:7",
													"nodeType": "YulBlock",
													"src": "9139:90:7",
													"statements": [
														{
															"nativeSrc": "9149:74:7",
															"nodeType": "YulAssignment",
															"src": "9149:74:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9215:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9215:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "9189:25:7",
																					"nodeType": "YulIdentifier",
																					"src": "9189:25:7"
																				},
																				"nativeSrc": "9189:32:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9189:32:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9180:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "9180:8:7"
																		},
																		"nativeSrc": "9180:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9180:42:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9162:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9162:17:7"
																},
																"nativeSrc": "9162:61:7",
																"nodeType": "YulFunctionCall",
																"src": "9162:61:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9149:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "9149:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "9071:158:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9119:5:7",
														"nodeType": "YulTypedName",
														"src": "9119:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9129:9:7",
														"nodeType": "YulTypedName",
														"src": "9129:9:7",
														"type": ""
													}
												],
												"src": "9071:158:7"
											},
											{
												"body": {
													"nativeSrc": "9308:74:7",
													"nodeType": "YulBlock",
													"src": "9308:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9325:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9325:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9369:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9369:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "9330:38:7",
																			"nodeType": "YulIdentifier",
																			"src": "9330:38:7"
																		},
																		"nativeSrc": "9330:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9330:45:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9318:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9318:6:7"
																},
																"nativeSrc": "9318:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9318:58:7"
															},
															"nativeSrc": "9318:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9318:58:7"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "9235:147:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9296:5:7",
														"nodeType": "YulTypedName",
														"src": "9296:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9303:3:7",
														"nodeType": "YulTypedName",
														"src": "9303:3:7",
														"type": ""
													}
												],
												"src": "9235:147:7"
											},
											{
												"body": {
													"nativeSrc": "9642:553:7",
													"nodeType": "YulBlock",
													"src": "9642:553:7",
													"statements": [
														{
															"nativeSrc": "9652:27:7",
															"nodeType": "YulAssignment",
															"src": "9652:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9664:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9664:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9675:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9675:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9660:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9660:3:7"
																},
																"nativeSrc": "9660:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9660:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9652:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9652:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9733:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9733:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9746:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9746:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9757:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9757:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9742:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9742:3:7"
																		},
																		"nativeSrc": "9742:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9742:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9689:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9689:43:7"
																},
																"nativeSrc": "9689:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9689:71:7"
															},
															"nativeSrc": "9689:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9689:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9814:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9814:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9827:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9827:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9838:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9838:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9823:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9823:3:7"
																		},
																		"nativeSrc": "9823:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9823:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9770:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9770:43:7"
																},
																"nativeSrc": "9770:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9770:72:7"
															},
															"nativeSrc": "9770:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9770:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9904:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9904:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9917:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9917:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9928:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9928:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9913:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9913:3:7"
																		},
																		"nativeSrc": "9913:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9913:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9852:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "9852:51:7"
																},
																"nativeSrc": "9852:80:7",
																"nodeType": "YulFunctionCall",
																"src": "9852:80:7"
															},
															"nativeSrc": "9852:80:7",
															"nodeType": "YulExpressionStatement",
															"src": "9852:80:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9994:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9994:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10007:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10007:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10018:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10018:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10003:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10003:3:7"
																		},
																		"nativeSrc": "10003:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10003:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9942:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "9942:51:7"
																},
																"nativeSrc": "9942:80:7",
																"nodeType": "YulFunctionCall",
																"src": "9942:80:7"
															},
															"nativeSrc": "9942:80:7",
															"nodeType": "YulExpressionStatement",
															"src": "9942:80:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10076:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10076:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10089:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10089:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10100:3:7",
																				"nodeType": "YulLiteral",
																				"src": "10100:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10085:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10085:3:7"
																		},
																		"nativeSrc": "10085:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10085:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10032:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10032:43:7"
																},
																"nativeSrc": "10032:73:7",
																"nodeType": "YulFunctionCall",
																"src": "10032:73:7"
															},
															"nativeSrc": "10032:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "10032:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10159:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10159:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10172:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10172:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10183:3:7",
																				"nodeType": "YulLiteral",
																				"src": "10183:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10168:3:7"
																		},
																		"nativeSrc": "10168:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10168:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10115:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10115:43:7"
																},
																"nativeSrc": "10115:73:7",
																"nodeType": "YulFunctionCall",
																"src": "10115:73:7"
															},
															"nativeSrc": "10115:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "10115:73:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9388:807:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9574:9:7",
														"nodeType": "YulTypedName",
														"src": "9574:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9586:6:7",
														"nodeType": "YulTypedName",
														"src": "9586:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9594:6:7",
														"nodeType": "YulTypedName",
														"src": "9594:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9602:6:7",
														"nodeType": "YulTypedName",
														"src": "9602:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9610:6:7",
														"nodeType": "YulTypedName",
														"src": "9610:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9618:6:7",
														"nodeType": "YulTypedName",
														"src": "9618:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9626:6:7",
														"nodeType": "YulTypedName",
														"src": "9626:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9637:4:7",
														"nodeType": "YulTypedName",
														"src": "9637:4:7",
														"type": ""
													}
												],
												"src": "9388:807:7"
											},
											{
												"body": {
													"nativeSrc": "10312:552:7",
													"nodeType": "YulBlock",
													"src": "10312:552:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10358:83:7",
																"nodeType": "YulBlock",
																"src": "10358:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10360:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10360:77:7"
																			},
																			"nativeSrc": "10360:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10360:79:7"
																		},
																		"nativeSrc": "10360:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10360:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10333:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10333:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10342:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10342:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10329:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10329:3:7"
																		},
																		"nativeSrc": "10329:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10329:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10354:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10354:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10325:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10325:3:7"
																},
																"nativeSrc": "10325:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10325:32:7"
															},
															"nativeSrc": "10322:119:7",
															"nodeType": "YulIf",
															"src": "10322:119:7"
														},
														{
															"nativeSrc": "10451:128:7",
															"nodeType": "YulBlock",
															"src": "10451:128:7",
															"statements": [
																{
																	"nativeSrc": "10466:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10466:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10480:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10480:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10470:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10470:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10495:74:7",
																	"nodeType": "YulAssignment",
																	"src": "10495:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10541:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10541:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10552:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10552:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10537:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10537:3:7"
																				},
																				"nativeSrc": "10537:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10537:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10561:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10561:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10505:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "10505:31:7"
																		},
																		"nativeSrc": "10505:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10505:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10495:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10495:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10589:129:7",
															"nodeType": "YulBlock",
															"src": "10589:129:7",
															"statements": [
																{
																	"nativeSrc": "10604:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10604:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10618:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10618:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10608:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10608:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10634:74:7",
																	"nodeType": "YulAssignment",
																	"src": "10634:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10680:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10680:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10691:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10691:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10676:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10676:3:7"
																				},
																				"nativeSrc": "10676:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10676:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10700:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10700:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10644:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "10644:31:7"
																		},
																		"nativeSrc": "10644:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10644:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10634:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10634:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10728:129:7",
															"nodeType": "YulBlock",
															"src": "10728:129:7",
															"statements": [
																{
																	"nativeSrc": "10743:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10743:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10757:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10757:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10747:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10747:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10773:74:7",
																	"nodeType": "YulAssignment",
																	"src": "10773:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10819:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10819:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10830:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10830:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10815:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10815:3:7"
																				},
																				"nativeSrc": "10815:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10815:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10839:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10839:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10783:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "10783:31:7"
																		},
																		"nativeSrc": "10783:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10783:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10773:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10773:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "10201:663:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10266:9:7",
														"nodeType": "YulTypedName",
														"src": "10266:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10277:7:7",
														"nodeType": "YulTypedName",
														"src": "10277:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10289:6:7",
														"nodeType": "YulTypedName",
														"src": "10289:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10297:6:7",
														"nodeType": "YulTypedName",
														"src": "10297:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10305:6:7",
														"nodeType": "YulTypedName",
														"src": "10305:6:7",
														"type": ""
													}
												],
												"src": "10201:663:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610049575f3560e01c80632d296bf11461004d5780633fc8cef314610069578063b8fcf93714610093578063f53d9d58146100bd578063f887ea40146100d9575b5f80fd5b610067600480360381019061006291906105ac565b610103565b005b348015610074575f80fd5b5061007d6102d7565b60405161008a9190610616565b60405180910390f35b34801561009e575f80fd5b506100a76102fc565b6040516100b49190610616565b60405180910390f35b6100d760048036038101906100d291906105ac565b61031f565b005b3480156100e4575f80fd5b506100ed610543565b6040516100fa9190610616565b60405180910390f35b5f600267ffffffffffffffff81111561011f5761011e61062f565b5b60405190808252806020026020018201604052801561014d5781602001602082028036833780820191505090505b50905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f815181106101855761018461065c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106101f3576101f261065c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab534848433426040518663ffffffff1660e01b815260040161028e949392919061074f565b5f6040518083038185885af11580156102a9573d5f803e3d5ffd5b50505050506040513d5f823e3d601f19601f820116820180604052508101906102d291906108d0565b505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161037b93929190610917565b6020604051808303815f875af1158015610397573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103bb9190610981565b505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016104379291906109ac565b6020604051808303815f875af1158015610453573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104779190610981565b5060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d719345f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16845f8033426040518863ffffffff1660e01b81526004016104fc96959493929190610a15565b60606040518083038185885af1158015610518573d5f803e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061053d9190610a74565b50505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b61058b81610579565b8114610595575f80fd5b50565b5f813590506105a681610582565b92915050565b5f602082840312156105c1576105c0610571565b5b5f6105ce84828501610598565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610600826105d7565b9050919050565b610610816105f6565b82525050565b5f6020820190506106295f830184610607565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b61069281610579565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6106ca816105f6565b82525050565b5f6106db83836106c1565b60208301905092915050565b5f602082019050919050565b5f6106fd82610698565b61070781856106a2565b9350610712836106b2565b805f5b8381101561074257815161072988826106d0565b9750610734836106e7565b925050600181019050610715565b5085935050505092915050565b5f6080820190506107625f830187610689565b818103602083015261077481866106f3565b90506107836040830185610607565b6107906060830184610689565b95945050505050565b5f80fd5b5f601f19601f8301169050919050565b6107b68261079d565b810181811067ffffffffffffffff821117156107d5576107d461062f565b5b80604052505050565b5f6107e7610568565b90506107f382826107ad565b919050565b5f67ffffffffffffffff8211156108125761081161062f565b5b602082029050602081019050919050565b5f80fd5b5f8151905061083581610582565b92915050565b5f61084d610848846107f8565b6107de565b905080838252602082019050602084028301858111156108705761086f610823565b5b835b8181101561089957806108858882610827565b845260208401935050602081019050610872565b5050509392505050565b5f82601f8301126108b7576108b6610799565b5b81516108c784826020860161083b565b91505092915050565b5f602082840312156108e5576108e4610571565b5b5f82015167ffffffffffffffff81111561090257610901610575565b5b61090e848285016108a3565b91505092915050565b5f60608201905061092a5f830186610607565b6109376020830185610607565b6109446040830184610689565b949350505050565b5f8115159050919050565b6109608161094c565b811461096a575f80fd5b50565b5f8151905061097b81610957565b92915050565b5f6020828403121561099657610995610571565b5b5f6109a38482850161096d565b91505092915050565b5f6040820190506109bf5f830185610607565b6109cc6020830184610689565b9392505050565b5f819050919050565b5f819050919050565b5f6109ff6109fa6109f5846109d3565b6109dc565b610579565b9050919050565b610a0f816109e5565b82525050565b5f60c082019050610a285f830189610607565b610a356020830188610689565b610a426040830187610a06565b610a4f6060830186610a06565b610a5c6080830185610607565b610a6960a0830184610689565b979650505050505050565b5f805f60608486031215610a8b57610a8a610571565b5b5f610a9886828701610827565b9350506020610aa986828701610827565b9250506040610aba86828701610827565b915050925092509256fea2646970667358221220e84bf8649cb325caad444d9f420224fc1dac0c42febe13873cf3d4b23256430e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D296BF1 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xF53D9D58 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0xD9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F JUMPI PUSH2 0x11E PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x185 JUMPI PUSH2 0x184 PUSH2 0x65C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F3 JUMPI PUSH2 0x1F2 PUSH2 0x65C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7FF36AB5 CALLVALUE DUP5 DUP5 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x74F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x8D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x397 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x437 SWAP3 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x453 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 CALLVALUE PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH0 DUP1 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53D SWAP2 SWAP1 PUSH2 0xA74 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58B DUP2 PUSH2 0x579 JUMP JUMPDEST DUP2 EQ PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A6 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C0 PUSH2 0x571 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5CE DUP5 DUP3 DUP6 ADD PUSH2 0x598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x600 DUP3 PUSH2 0x5D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x5F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x629 PUSH0 DUP4 ADD DUP5 PUSH2 0x607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CA DUP2 PUSH2 0x5F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DB DUP4 DUP4 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6FD DUP3 PUSH2 0x698 JUMP JUMPDEST PUSH2 0x707 DUP2 DUP6 PUSH2 0x6A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x712 DUP4 PUSH2 0x6B2 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x742 JUMPI DUP2 MLOAD PUSH2 0x729 DUP9 DUP3 PUSH2 0x6D0 JUMP JUMPDEST SWAP8 POP PUSH2 0x734 DUP4 PUSH2 0x6E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x715 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x762 PUSH0 DUP4 ADD DUP8 PUSH2 0x689 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x774 DUP2 DUP7 PUSH2 0x6F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x783 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x790 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x79D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7D5 JUMPI PUSH2 0x7D4 PUSH2 0x62F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7E7 PUSH2 0x568 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F3 DUP3 DUP3 PUSH2 0x7AD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x835 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x84D PUSH2 0x848 DUP5 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x870 JUMPI PUSH2 0x86F PUSH2 0x823 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x899 JUMPI DUP1 PUSH2 0x885 DUP9 DUP3 PUSH2 0x827 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x872 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8B7 JUMPI PUSH2 0x8B6 PUSH2 0x799 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x8C7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x83B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E5 JUMPI PUSH2 0x8E4 PUSH2 0x571 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x902 JUMPI PUSH2 0x901 PUSH2 0x575 JUMP JUMPDEST JUMPDEST PUSH2 0x90E DUP5 DUP3 DUP6 ADD PUSH2 0x8A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x92A PUSH0 DUP4 ADD DUP7 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x937 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x944 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x960 DUP2 PUSH2 0x94C JUMP JUMPDEST DUP2 EQ PUSH2 0x96A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x97B DUP2 PUSH2 0x957 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0x571 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A3 DUP5 DUP3 DUP6 ADD PUSH2 0x96D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9BF PUSH0 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x9CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9FF PUSH2 0x9FA PUSH2 0x9F5 DUP5 PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0F DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xA28 PUSH0 DUP4 ADD DUP10 PUSH2 0x607 JUMP JUMPDEST PUSH2 0xA35 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x689 JUMP JUMPDEST PUSH2 0xA42 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xA06 JUMP JUMPDEST PUSH2 0xA4F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xA06 JUMP JUMPDEST PUSH2 0xA5C PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0xA69 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA8B JUMPI PUSH2 0xA8A PUSH2 0x571 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA98 DUP7 DUP3 DUP8 ADD PUSH2 0x827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xAA9 DUP7 DUP3 DUP8 ADD PUSH2 0x827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xABA DUP7 DUP3 DUP8 ADD PUSH2 0x827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x4B 0xF8 PUSH5 0x9CB325CAAD PREVRANDAO 0x4D SWAP16 TIMESTAMP MUL 0x24 0xFC SAR 0xAC 0xC TIMESTAMP INVALID 0xBE SGT DUP8 EXTCODECOPY RETURN 0xD4 0xB2 ORIGIN JUMP NUMBER 0xE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "337:1087:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1127:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;454:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;399:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;650:443;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;427:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1127:291;1191:21;1229:1;1215:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1191:40;;1251:4;;;;;;;;;;;1241;1246:1;1241:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;1275:7;;;;;;;;;;1265:4;1270:1;1265:7;;;;;;;;:::i;:::-;;;;;;;:17;;;;;;;;;;;1312:6;;;;;;;;;;;1293:48;;;1350:9;1361:14;1377:4;1383:10;1395:15;1293:118;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1181:237;1127:291;:::o;454:19::-;;;;;;;;;;;;;:::o;399:22::-;;;;;;;;;;;;:::o;650:443::-;722:7;;;;;;;;;;715:28;;;744:10;764:4;770:11;715:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;799:7;;;;;;;;;;792:23;;;816:6;;;;;;;;;;;824:11;792:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;959:6;;;;;;;;;;;940:42;;;990:9;1001:7;;;;;;;;;;1010:11;1023:1;1026;1029:10;1041:15;940:117;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;650:443;:::o;427:21::-;;;;;;;;;;;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:180::-;1659:77;1656:1;1649:88;1756:4;1753:1;1746:15;1780:4;1777:1;1770:15;1797:180;1845:77;1842:1;1835:88;1942:4;1939:1;1932:15;1966:4;1963:1;1956:15;1983:118;2070:24;2088:5;2070:24;:::i;:::-;2065:3;2058:37;1983:118;;:::o;2107:114::-;2174:6;2208:5;2202:12;2192:22;;2107:114;;;:::o;2227:184::-;2326:11;2360:6;2355:3;2348:19;2400:4;2395:3;2391:14;2376:29;;2227:184;;;;:::o;2417:132::-;2484:4;2507:3;2499:11;;2537:4;2532:3;2528:14;2520:22;;2417:132;;;:::o;2555:108::-;2632:24;2650:5;2632:24;:::i;:::-;2627:3;2620:37;2555:108;;:::o;2669:179::-;2738:10;2759:46;2801:3;2793:6;2759:46;:::i;:::-;2837:4;2832:3;2828:14;2814:28;;2669:179;;;;:::o;2854:113::-;2924:4;2956;2951:3;2947:14;2939:22;;2854:113;;;:::o;3003:732::-;3122:3;3151:54;3199:5;3151:54;:::i;:::-;3221:86;3300:6;3295:3;3221:86;:::i;:::-;3214:93;;3331:56;3381:5;3331:56;:::i;:::-;3410:7;3441:1;3426:284;3451:6;3448:1;3445:13;3426:284;;;3527:6;3521:13;3554:63;3613:3;3598:13;3554:63;:::i;:::-;3547:70;;3640:60;3693:6;3640:60;:::i;:::-;3630:70;;3486:224;3473:1;3470;3466:9;3461:14;;3426:284;;;3430:14;3726:3;3719:10;;3127:608;;;3003:732;;;;:::o;3741:704::-;3968:4;4006:3;3995:9;3991:19;3983:27;;4020:71;4088:1;4077:9;4073:17;4064:6;4020:71;:::i;:::-;4138:9;4132:4;4128:20;4123:2;4112:9;4108:18;4101:48;4166:108;4269:4;4260:6;4166:108;:::i;:::-;4158:116;;4284:72;4352:2;4341:9;4337:18;4328:6;4284:72;:::i;:::-;4366;4434:2;4423:9;4419:18;4410:6;4366:72;:::i;:::-;3741:704;;;;;;;:::o;4451:117::-;4560:1;4557;4550:12;4574:102;4615:6;4666:2;4662:7;4657:2;4650:5;4646:14;4642:28;4632:38;;4574:102;;;:::o;4682:281::-;4765:27;4787:4;4765:27;:::i;:::-;4757:6;4753:40;4895:6;4883:10;4880:22;4859:18;4847:10;4844:34;4841:62;4838:88;;;4906:18;;:::i;:::-;4838:88;4946:10;4942:2;4935:22;4725:238;4682:281;;:::o;4969:129::-;5003:6;5030:20;;:::i;:::-;5020:30;;5059:33;5087:4;5079:6;5059:33;:::i;:::-;4969:129;;;:::o;5104:311::-;5181:4;5271:18;5263:6;5260:30;5257:56;;;5293:18;;:::i;:::-;5257:56;5343:4;5335:6;5331:17;5323:25;;5403:4;5397;5393:15;5385:23;;5104:311;;;:::o;5421:117::-;5530:1;5527;5520:12;5544:143;5601:5;5632:6;5626:13;5617:22;;5648:33;5675:5;5648:33;:::i;:::-;5544:143;;;;:::o;5710:732::-;5817:5;5842:81;5858:64;5915:6;5858:64;:::i;:::-;5842:81;:::i;:::-;5833:90;;5943:5;5972:6;5965:5;5958:21;6006:4;5999:5;5995:16;5988:23;;6059:4;6051:6;6047:17;6039:6;6035:30;6088:3;6080:6;6077:15;6074:122;;;6107:79;;:::i;:::-;6074:122;6222:6;6205:231;6239:6;6234:3;6231:15;6205:231;;;6314:3;6343:48;6387:3;6375:10;6343:48;:::i;:::-;6338:3;6331:61;6421:4;6416:3;6412:14;6405:21;;6281:155;6265:4;6260:3;6256:14;6249:21;;6205:231;;;6209:21;5823:619;;5710:732;;;;;:::o;6465:385::-;6547:5;6596:3;6589:4;6581:6;6577:17;6573:27;6563:122;;6604:79;;:::i;:::-;6563:122;6714:6;6708:13;6739:105;6840:3;6832:6;6825:4;6817:6;6813:17;6739:105;:::i;:::-;6730:114;;6553:297;6465:385;;;;:::o;6856:554::-;6951:6;7000:2;6988:9;6979:7;6975:23;6971:32;6968:119;;;7006:79;;:::i;:::-;6968:119;7147:1;7136:9;7132:17;7126:24;7177:18;7169:6;7166:30;7163:117;;;7199:79;;:::i;:::-;7163:117;7304:89;7385:7;7376:6;7365:9;7361:22;7304:89;:::i;:::-;7294:99;;7097:306;6856:554;;;;:::o;7416:442::-;7565:4;7603:2;7592:9;7588:18;7580:26;;7616:71;7684:1;7673:9;7669:17;7660:6;7616:71;:::i;:::-;7697:72;7765:2;7754:9;7750:18;7741:6;7697:72;:::i;:::-;7779;7847:2;7836:9;7832:18;7823:6;7779:72;:::i;:::-;7416:442;;;;;;:::o;7864:90::-;7898:7;7941:5;7934:13;7927:21;7916:32;;7864:90;;;:::o;7960:116::-;8030:21;8045:5;8030:21;:::i;:::-;8023:5;8020:32;8010:60;;8066:1;8063;8056:12;8010:60;7960:116;:::o;8082:137::-;8136:5;8167:6;8161:13;8152:22;;8183:30;8207:5;8183:30;:::i;:::-;8082:137;;;;:::o;8225:345::-;8292:6;8341:2;8329:9;8320:7;8316:23;8312:32;8309:119;;;8347:79;;:::i;:::-;8309:119;8467:1;8492:61;8545:7;8536:6;8525:9;8521:22;8492:61;:::i;:::-;8482:71;;8438:125;8225:345;;;;:::o;8576:332::-;8697:4;8735:2;8724:9;8720:18;8712:26;;8748:71;8816:1;8805:9;8801:17;8792:6;8748:71;:::i;:::-;8829:72;8897:2;8886:9;8882:18;8873:6;8829:72;:::i;:::-;8576:332;;;;;:::o;8914:85::-;8959:7;8988:5;8977:16;;8914:85;;;:::o;9005:60::-;9033:3;9054:5;9047:12;;9005:60;;;:::o;9071:158::-;9129:9;9162:61;9180:42;9189:32;9215:5;9189:32;:::i;:::-;9180:42;:::i;:::-;9162:61;:::i;:::-;9149:74;;9071:158;;;:::o;9235:147::-;9330:45;9369:5;9330:45;:::i;:::-;9325:3;9318:58;9235:147;;:::o;9388:807::-;9637:4;9675:3;9664:9;9660:19;9652:27;;9689:71;9757:1;9746:9;9742:17;9733:6;9689:71;:::i;:::-;9770:72;9838:2;9827:9;9823:18;9814:6;9770:72;:::i;:::-;9852:80;9928:2;9917:9;9913:18;9904:6;9852:80;:::i;:::-;9942;10018:2;10007:9;10003:18;9994:6;9942:80;:::i;:::-;10032:73;10100:3;10089:9;10085:19;10076:6;10032:73;:::i;:::-;10115;10183:3;10172:9;10168:19;10159:6;10115:73;:::i;:::-;9388:807;;;;;;;;;:::o;10201:663::-;10289:6;10297;10305;10354:2;10342:9;10333:7;10329:23;10325:32;10322:119;;;10360:79;;:::i;:::-;10322:119;10480:1;10505:64;10561:7;10552:6;10541:9;10537:22;10505:64;:::i;:::-;10495:74;;10451:128;10618:2;10644:64;10700:7;10691:6;10680:9;10676:22;10644:64;:::i;:::-;10634:74;;10589:129;10757:2;10783:64;10839:7;10830:6;10819:9;10815:22;10783:64;:::i;:::-;10773:74;;10728:129;10201:663;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "562000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AddLiquidity(uint256)": "infinite",
								"buyToken(uint256)": "infinite",
								"myToken()": "2527",
								"router()": "2574",
								"weth()": "2508"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 337,
									"end": 1424,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 480,
									"end": 621,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 480,
									"end": 621,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 480,
									"end": 621,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 480,
									"end": 621,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 480,
									"end": 621,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 480,
									"end": 621,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 480,
									"end": 621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 480,
									"end": 621,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 560,
									"end": 566,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 550,
									"end": 557,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 550,
									"end": 557,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 550,
									"end": 566,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 550,
									"end": 566,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 550,
									"end": 566,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 550,
									"end": 566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 585,
									"end": 592,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 576,
									"end": 582,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 576,
									"end": 582,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 576,
									"end": 592,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 576,
									"end": 592,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 576,
									"end": 592,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 576,
									"end": 592,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 576,
									"end": 592,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 609,
									"end": 614,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 602,
									"end": 606,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 602,
									"end": 606,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 602,
									"end": 614,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 602,
									"end": 614,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 602,
									"end": 614,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 480,
									"end": 621,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 1424,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e84bf8649cb325caad444d9f420224fc1dac0c42febe13873cf3d4b23256430e64736f6c634300081a0033",
									".code": [
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "2D296BF1"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "3FC8CEF3"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "B8FCF937"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "F53D9D58"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "F887EA40"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 1424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1127,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1127,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 454,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 454,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 399,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 399,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 650,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 650,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 427,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 427,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1230,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1215,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1241,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1265,
											"end": 1272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1341,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1341,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1341,
											"name": "PUSH",
											"source": 6,
											"value": "7FF36AB5"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1375,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1410,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1293,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1293,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 454,
											"end": 473,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 454,
											"end": 473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 399,
											"end": 421,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 399,
											"end": 421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 729,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 722,
											"end": 729,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 729,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 715,
											"end": 743,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 715,
											"end": 743,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 715,
											"end": 743,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 744,
											"end": 754,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 764,
											"end": 768,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 770,
											"end": 781,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 715,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 715,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 715,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 715,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 799,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 799,
											"end": 806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 799,
											"end": 806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 799,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 799,
											"end": 806,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 799,
											"end": 806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 799,
											"end": 806,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 799,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 799,
											"end": 806,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 792,
											"end": 815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 792,
											"end": 815,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 824,
											"end": 835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 792,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 792,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 792,
											"end": 836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 792,
											"end": 836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 940,
											"end": 982,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 940,
											"end": 982,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 940,
											"end": 982,
											"name": "PUSH",
											"source": 6,
											"value": "F305D719"
										},
										{
											"begin": 990,
											"end": 999,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1021,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1039,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1056,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 940,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 1093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 427,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1611,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1736,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1656,
											"end": 1657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1737,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1780,
											"end": 1784,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1977,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1797,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1922,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1842,
											"end": 1843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1946,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1966,
											"end": 1970,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2101,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1983,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2088,
											"end": 2093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2070,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2094,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2070,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2095,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2221,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2107,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2192,
											"end": 2214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2192,
											"end": 2214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2221,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2411,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2227,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2398,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2549,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2417,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2532,
											"end": 2535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2663,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2555,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2632,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2848,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2669,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2738,
											"end": 2748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2801,
											"end": 2804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2759,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2805,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2759,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2837,
											"end": 2841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2848,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2848,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2967,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2854,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 2954,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2961,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3735,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3003,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3199,
											"end": 3204,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3151,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3205,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3151,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3298,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3221,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3307,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3221,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3307,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3381,
											"end": 3386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3331,
											"end": 3387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3387,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3331,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3710,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3426,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3445,
											"end": 3458,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3710,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3426,
											"end": 3710,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3534,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3613,
											"end": 3616,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3554,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3617,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3554,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3617,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3640,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3700,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3640,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3700,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3473,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3426,
											"end": 3710,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3710,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3426,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3729,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3729,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3735,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 4445,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3741,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3968,
											"end": 3972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4009,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4088,
											"end": 4089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4070,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4020,
											"end": 4091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4091,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4020,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4148,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4101,
											"end": 4149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4260,
											"end": 4266,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 4166,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4274,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4166,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4352,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4341,
											"end": 4350,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4328,
											"end": 4334,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4284,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4284,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4366,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4423,
											"end": 4432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4410,
											"end": 4416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4366,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4366,
											"end": 4438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4366,
											"end": 4438,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4366,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 4445,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 4445,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 4445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 4445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 4445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 4445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 4445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 4445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4568,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4451,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4560,
											"end": 4561,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4558,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4562,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4676,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4574,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4662,
											"end": 4669,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4659,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4650,
											"end": 4655,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4670,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4676,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4963,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4682,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4787,
											"end": 4791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4765,
											"end": 4792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4792,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4765,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4880,
											"end": 4902,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4847,
											"end": 4857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4878,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4903,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4926,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 4838,
											"end": 4926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4906,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4926,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 4838,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4946,
											"end": 4956,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4944,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4957,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5098,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4969,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5009,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 5030,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5030,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5050,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 5030,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5087,
											"end": 5091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5059,
											"end": 5092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5092,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5059,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5098,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5415,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5104,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5263,
											"end": 5269,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5260,
											"end": 5290,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5313,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5257,
											"end": 5313,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5293,
											"end": 5311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5257,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5348,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5538,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5421,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5687,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5544,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5601,
											"end": 5606,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 5675,
											"end": 5680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5648,
											"end": 5681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5681,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 5648,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 6442,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 5710,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5817,
											"end": 5822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5858,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5858,
											"end": 5922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5922,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5858,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5842,
											"end": 5923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5923,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5842,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5978,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5979,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6010,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 6011,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5988,
											"end": 6011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5988,
											"end": 6011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6045,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6091,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6077,
											"end": 6092,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6074,
											"end": 6196,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6074,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6074,
											"end": 6196,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6107,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6107,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6107,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6107,
											"end": 6186,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6107,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6074,
											"end": 6196,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6074,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6228,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6436,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6205,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6231,
											"end": 6246,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6436,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6205,
											"end": 6436,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6314,
											"end": 6317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6387,
											"end": 6390,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6375,
											"end": 6385,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6343,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6391,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6343,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6341,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6331,
											"end": 6392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6416,
											"end": 6419,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6426,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6269,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6256,
											"end": 6270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6205,
											"end": 6436,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6436,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6205,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6209,
											"end": 6230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 6442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 6442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 6442,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 6442,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 6442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 6442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 6442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 6442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6850,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6465,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6593,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6581,
											"end": 6587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6600,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6563,
											"end": 6685,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 6604,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6685,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6563,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6721,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6840,
											"end": 6843,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6838,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6825,
											"end": 6829,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6823,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6830,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 6739,
											"end": 6844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6844,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6739,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6730,
											"end": 6844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6730,
											"end": 6844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6850,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7410,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6856,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7000,
											"end": 7002,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6988,
											"end": 6997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 6986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 6998,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6971,
											"end": 7003,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7087,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6968,
											"end": 7087,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7006,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 7006,
											"end": 7085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7085,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7006,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7087,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6968,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7147,
											"end": 7148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7149,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7150,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7169,
											"end": 7175,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7196,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 7163,
											"end": 7280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 7199,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 7199,
											"end": 7278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7278,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 7199,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7280,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 7163,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7385,
											"end": 7392,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7376,
											"end": 7382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 7374,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 7304,
											"end": 7393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7393,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7304,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7294,
											"end": 7393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7294,
											"end": 7393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 7410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7858,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7416,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 7569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7605,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7592,
											"end": 7601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7684,
											"end": 7685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7673,
											"end": 7682,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 7666,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 7616,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7687,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7616,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7765,
											"end": 7767,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7754,
											"end": 7763,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7750,
											"end": 7768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7741,
											"end": 7747,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 7697,
											"end": 7769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7769,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7697,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7779,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 7847,
											"end": 7849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7845,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7832,
											"end": 7850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7829,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7779,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 7779,
											"end": 7851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7779,
											"end": 7851,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 7779,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7858,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7858,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7954,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7864,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 7947,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7927,
											"end": 7948,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7954,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7954,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8076,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7960,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8045,
											"end": 8050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 8030,
											"end": 8051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8051,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8030,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8052,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8010,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8010,
											"end": 8070,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8063,
											"end": 8064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8056,
											"end": 8068,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8010,
											"end": 8070,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8010,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8219,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 8082,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8136,
											"end": 8141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8167,
											"end": 8173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8174,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 8207,
											"end": 8212,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 8183,
											"end": 8213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8213,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 8183,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8219,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8219,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8570,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 8225,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8292,
											"end": 8298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8341,
											"end": 8343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8320,
											"end": 8327,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8316,
											"end": 8339,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8428,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8309,
											"end": 8428,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8347,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 8347,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8426,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8347,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8428,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8309,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8467,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8545,
											"end": 8552,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8536,
											"end": 8542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8534,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8492,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 8492,
											"end": 8553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8492,
											"end": 8553,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8492,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8438,
											"end": 8563,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8570,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8570,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8576,
											"end": 8908,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8576,
											"end": 8908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8701,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8737,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8724,
											"end": 8733,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8712,
											"end": 8738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8712,
											"end": 8738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 8816,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8805,
											"end": 8814,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 8818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 8798,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 8748,
											"end": 8819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8819,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 8748,
											"end": 8819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8897,
											"end": 8899,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8886,
											"end": 8895,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8882,
											"end": 8900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8873,
											"end": 8879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 8829,
											"end": 8901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8901,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8829,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8576,
											"end": 8908,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8576,
											"end": 8908,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8576,
											"end": 8908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8576,
											"end": 8908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8576,
											"end": 8908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8576,
											"end": 8908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8914,
											"end": 8999,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 8914,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 8966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8988,
											"end": 8993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 8993,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 8993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8914,
											"end": 8999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8914,
											"end": 8999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8914,
											"end": 8999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8914,
											"end": 8999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9065,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 9005,
											"end": 9065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9047,
											"end": 9059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9047,
											"end": 9059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9065,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9229,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 9071,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9180,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 9189,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 9215,
											"end": 9220,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9189,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 9189,
											"end": 9221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9189,
											"end": 9221,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 9189,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 9180,
											"end": 9222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9222,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 9180,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9162,
											"end": 9223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9229,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9382,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 9235,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 9369,
											"end": 9374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 9330,
											"end": 9375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9375,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 9330,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9318,
											"end": 9376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9637,
											"end": 9641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9675,
											"end": 9678,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 9664,
											"end": 9673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9660,
											"end": 9679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9689,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 9757,
											"end": 9758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9742,
											"end": 9759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9733,
											"end": 9739,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9689,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 9689,
											"end": 9760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9689,
											"end": 9760,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 9689,
											"end": 9760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9770,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9838,
											"end": 9840,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9827,
											"end": 9836,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9823,
											"end": 9841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9770,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 9770,
											"end": 9842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9770,
											"end": 9842,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9770,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 9928,
											"end": 9930,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9917,
											"end": 9926,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9910,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 9852,
											"end": 9932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9932,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 9852,
											"end": 9932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 10018,
											"end": 10020,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10007,
											"end": 10016,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10003,
											"end": 10021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 9942,
											"end": 10022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 10022,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 9942,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10032,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10100,
											"end": 10103,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10089,
											"end": 10098,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10082,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10032,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 10032,
											"end": 10105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10032,
											"end": 10105,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10032,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 10183,
											"end": 10186,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 10172,
											"end": 10181,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 10115,
											"end": 10188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10188,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 10115,
											"end": 10188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 10195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10864,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10201,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10297,
											"end": 10303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10305,
											"end": 10311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10354,
											"end": 10356,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10342,
											"end": 10351,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10340,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10329,
											"end": 10352,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10325,
											"end": 10357,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10322,
											"end": 10441,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10322,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 10322,
											"end": 10441,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 10360,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 10360,
											"end": 10439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10439,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 10360,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10322,
											"end": 10441,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 10322,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10480,
											"end": 10481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10505,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10561,
											"end": 10568,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10505,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10505,
											"end": 10569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10505,
											"end": 10569,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10505,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10495,
											"end": 10569,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10495,
											"end": 10569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10451,
											"end": 10579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 10700,
											"end": 10707,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10680,
											"end": 10689,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10676,
											"end": 10698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10644,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10644,
											"end": 10708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10644,
											"end": 10708,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 10644,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10634,
											"end": 10708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10589,
											"end": 10718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10757,
											"end": 10759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10783,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 10839,
											"end": 10846,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10830,
											"end": 10836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10819,
											"end": 10828,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10815,
											"end": 10837,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10783,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10783,
											"end": 10847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10783,
											"end": 10847,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 10783,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10728,
											"end": 10857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10864,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10864,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10864,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/IMasterChef.sol",
								"src/IUniswapV2Router01.sol",
								"src/MyTokenMarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AddLiquidity(uint256)": "f53d9d58",
							"buyToken(uint256)": "2d296bf1",
							"myToken()": "b8fcf937",
							"router()": "f887ea40",
							"weth()": "3fc8cef3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTokenAmount\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MyTokenMarket.sol\":\"MyTokenMarket\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"src/IMasterChef.sol\":{\"keccak256\":\"0xfedbe0adf90715b605191a171642bc9b83f55f7f8188204feec6bb9ffc9aefaa\",\"urls\":[\"bzz-raw://ec7578688c821e0af441664f4d320b17c7ae6e10002bc58b9d2f3c2daf170ca3\",\"dweb:/ipfs/QmW9Lgh3UWCWS6rZRaWAWWbJ4koLZpExAQECaEnEeAieNg\"]},\"src/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"src/MyTokenMarket.sol\":{\"keccak256\":\"0x0aae4fce64544046d2f77815a89c3f03c394cafe1ce8d0de0d041c267e49d350\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://af20fcc063c874135b385b30da954edb9bb33d220a3ff4f41b8f2ac655613fc8\",\"dweb:/ipfs/QmQaRuPv9CWeNWTaEWddTVtptY5fN1DzHFnLwgGLHgcTXh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 993,
								"contract": "src/MyTokenMarket.sol:MyTokenMarket",
								"label": "myToken",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 995,
								"contract": "src/MyTokenMarket.sol:MyTokenMarket",
								"label": "router",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 997,
								"contract": "src/MyTokenMarket.sol:MyTokenMarket",
								"label": "weth",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/IMasterChef.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/IMasterChef.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"src/IMasterChef.sol": {
				"ast": {
					"absolutePath": "src/IMasterChef.sol",
					"exportedSymbols": {
						"IMasterChef": [
							673
						]
					},
					"id": 674,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMasterChef",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 673,
							"linearizedBaseContracts": [
								673
							],
							"name": "IMasterChef",
							"nameLocation": "36:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e2bbb158",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "63:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "79:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "71:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "93:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "85:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "85:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70:31:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:0:4"
									},
									"scope": 673,
									"src": "54:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "441a3e70",
									"id": 672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "125:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "142:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "134:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "156:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "148:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:31:4"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:0:4"
									},
									"scope": 673,
									"src": "116:58:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 674,
							"src": "26:150:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:177:4"
				},
				"id": 4
			},
			"src/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "src/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							981
						]
					},
					"id": 982,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 675,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 981,
							"linearizedBaseContracts": [
								981
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:5"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "103:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:5"
									},
									"scope": 981,
									"src": "61:51:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "156:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:5"
									},
									"scope": 981,
									"src": "117:48:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "202:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "226:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "250:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "279:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "308:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "333:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "358:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "378:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:5"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "416:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "430:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "444:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:5"
									},
									"scope": 981,
									"src": "171:289:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "499:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "522:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "555:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "584:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "611:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "631:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:5"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "677:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "695:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "711:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:5"
									},
									"scope": 981,
									"src": "465:262:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "790:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "814:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "838:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "863:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "888:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "908:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "946:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "960:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:5"
									},
									"scope": 981,
									"src": "732:242:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1039:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1063:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1092:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1119:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1139:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:5"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1177:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1195:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:5"
									},
									"scope": 981,
									"src": "979:232:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1260:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1284:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1308:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1357:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1382:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1402:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1425:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1442:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 788,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1451:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 790,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1462:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 792,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:5"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1496:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1510:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:5"
									},
									"scope": 981,
									"src": "1216:308:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1576:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1599:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1623:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1652:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1679:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1699:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1722:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1739:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 815,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1748:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1759:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 819,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1793:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1811:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:5"
									},
									"scope": 981,
									"src": "1529:298:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1875:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1898:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1925:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 832,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 833,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1958:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1978:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:5"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2016:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 840,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 841,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:5"
									},
									"scope": 981,
									"src": "1832:207:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2087:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2111:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2137:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 849,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 850,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2170:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2190:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2228:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 857,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 858,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:5"
									},
									"scope": 981,
									"src": "2044:207:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2287:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2306:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 864,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 865,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2331:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:5"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2408:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 872,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 873,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:5"
									},
									"scope": 981,
									"src": "2256:175:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2467:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2483:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2501:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 881,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 882,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2526:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2538:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2587:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 889,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 890,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:5"
									},
									"scope": 981,
									"src": "2436:174:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2646:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2661:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2680:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 898,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 899,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2705:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2717:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:5"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2766:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 906,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 907,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:5"
									},
									"scope": 981,
									"src": "2615:174:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2825:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2841:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 913,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 914,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2866:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2878:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:5"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2943:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 921,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 922,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:5"
									},
									"scope": 981,
									"src": "2794:172:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2987:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3001:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3054:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:5"
									},
									"scope": 981,
									"src": "2972:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "3095:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "3110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "3126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "3166:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:5"
									},
									"scope": 981,
									"src": "3073:109:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3208:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3224:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3240:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:5"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3280:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:5"
									},
									"scope": 981,
									"src": "3187:108:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3323:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3338:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 961,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 962,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:5"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3386:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 965,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 966,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:5"
									},
									"scope": 981,
									"src": "3300:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3436:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3452:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 972,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 973,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:5"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3500:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 976,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 977,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:5"
									},
									"scope": 981,
									"src": "3414:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 982,
							"src": "26:3499:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:3526:5"
				},
				"id": 5
			},
			"src/MyTokenMarket.sol": {
				"ast": {
					"absolutePath": "src/MyTokenMarket.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"IMasterChef": [
							673
						],
						"IUniswapV2Router01": [
							981
						],
						"MyTokenMarket": [
							1108
						],
						"SafeERC20": [
							403
						]
					},
					"id": 1109,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 983,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:6"
						},
						{
							"absolutePath": "src/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1109,
							"sourceUnit": 982,
							"src": "62:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/IMasterChef.sol",
							"file": "./IMasterChef.sol",
							"id": 985,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1109,
							"sourceUnit": 674,
							"src": "97:27:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 986,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1109,
							"sourceUnit": 78,
							"src": "213:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 987,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1109,
							"sourceUnit": 404,
							"src": "270:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyTokenMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "MyTokenMarket",
							"nameLocation": "346:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 991,
									"libraryName": {
										"id": 988,
										"name": "SafeERC20",
										"nameLocations": [
											"372:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "372:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "366:27:6",
									"typeName": {
										"id": 990,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 989,
											"name": "IERC20",
											"nameLocations": [
												"386:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "386:6:6"
										},
										"referencedDeclaration": 77,
										"src": "386:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b8fcf937",
									"id": 993,
									"mutability": "mutable",
									"name": "myToken",
									"nameLocation": "414:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "399:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 992,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "399:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f887ea40",
									"id": 995,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "442:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "427:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 994,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "427:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fc8cef3",
									"id": 997,
									"mutability": "mutable",
									"name": "weth",
									"nameLocation": "469:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "454:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 996,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "454:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "540:81:6",
										"statements": [
											{
												"expression": {
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1006,
														"name": "myToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "550:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1007,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "560:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "550:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "550:16:6"
											},
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1010,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "576:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1011,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "585:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "576:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "576:16:6"
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1014,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "602:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1015,
														"name": "_weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "609:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "602:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "602:12:6"
											}
										]
									},
									"id": 1019,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "500:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "492:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "516:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "508:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "533:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "525:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:48:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:0:6"
									},
									"scope": 1108,
									"src": "480:141:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "705:388:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1028,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "744:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "748:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "744:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1032,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "764:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyTokenMarket_$1108",
																		"typeString": "contract MyTokenMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyTokenMarket_$1108",
																		"typeString": "contract MyTokenMarket"
																	}
																],
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "756:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1030,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "756:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "756:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1034,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "770:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1025,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "722:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1024,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "715:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "715:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "731:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "715:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "715:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "816:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "824:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1038,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "799:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1037,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "792:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "792:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "808:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "792:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "792:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "792:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1052,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "1001:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "1010:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1023:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1026:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 1056,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1029:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1033:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1029:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1058,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1041:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1047:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1041:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1046,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "959:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1045,
																	"name": "IUniswapV2Router01",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "940:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$981_$",
																		"typeString": "type(contract IUniswapV2Router01)"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "940:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router01_$981",
																	"typeString": "contract IUniswapV2Router01"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "967:15:6",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 731,
															"src": "940:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1049,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "990:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "994:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "990:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "940:60:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:117:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "940:117:6"
											}
										]
									},
									"functionSelector": "f53d9d58",
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "AddLiquidity",
									"nameLocation": "659:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "677:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "672:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "672:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:18:6"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:0:6"
									},
									"scope": 1108,
									"src": "650:443:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "1181:237:6",
										"statements": [
											{
												"assignments": [
													1072
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "1208:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "1191:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1070,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1191:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1071,
															"nodeType": "ArrayTypeName",
															"src": "1191:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1215:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1073,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1219:7:6",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1074,
															"nodeType": "ArrayTypeName",
															"src": "1219:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1215:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1191:40:6"
											},
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1079,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "1241:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1081,
														"indexExpression": {
															"hexValue": "30",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1246:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1241:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1082,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "1251:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1241:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "1241:14:6"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1085,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "1265:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1087,
														"indexExpression": {
															"hexValue": "31",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1270:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1265:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1088,
														"name": "myToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "1275:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1265:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "1265:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1098,
															"name": "minTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "1361:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1099,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "1377:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1383:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1387:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1383:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1102,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1395:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1401:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1395:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1092,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "1312:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1091,
																	"name": "IUniswapV2Router01",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1293:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$981_$",
																		"typeString": "type(contract IUniswapV2Router01)"
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1293:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router01_$981",
																	"typeString": "contract IUniswapV2Router01"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1320:21:6",
															"memberName": "swapExactETHForTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 876,
															"src": "1293:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1095,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1350:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1354:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1350:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1293:67:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
															"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:118:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1293:118:6"
											}
										]
									},
									"functionSelector": "2d296bf1",
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "1136:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "minTokenAmount",
												"nameLocation": "1150:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1145:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:21:6"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:0:6"
									},
									"scope": 1108,
									"src": "1127:291:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1109,
							"src": "337:1087:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1387:6"
				},
				"id": 6
			}
		}
	}
}
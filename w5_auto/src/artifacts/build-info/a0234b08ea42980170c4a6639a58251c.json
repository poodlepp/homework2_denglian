{
	"id": "a0234b08ea42980170c4a6639a58251c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Bank.sol": {
				"content": "pragma solidity ^0.8.0;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n\ncontract Bank {\n    mapping(address => uint) public deposited;\n    address public immutable token;\n    address owner;\n\n\n    constructor(address _token) {\n        token = _token;\n        owner = msg.sender;\n    }\n\n\n    function deposit(address user, uint amount) public {\n        require(IERC20(token).transferFrom(msg.sender, address(this), amount), \"Transfer from error\");\n        deposited[user] += amount;\n    }\n\n\n    function permitDeposit(address user, uint amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n        IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s);\n        deposit(user, amount);\n    }\n\n    function withdraw() external {\n        uint amount = deposited[msg.sender];\n        SafeERC20.safeTransfer(IERC20(token), msg.sender, amount);\n        deposited[msg.sender] = 0;\n    }\n\n\n    function collect() external {\n        if(IERC20(token).balanceOf(address(this) )> 5e18) {\n            SafeERC20.safeTransfer(IERC20(token), owner, 5e18);    \n        }\n    }\n\n}\n\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Bank.sol": {
				"Bank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "collect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "deposited",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permitDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Bank.sol\":225:1251  contract Bank {... */\n  mstore(0x40, 0xa0)\n    /* \"src/Bank.sol\":349:436  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/Bank.sol\":395:401  _token */\n  dup1\n    /* \"src/Bank.sol\":387:401  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/Bank.sol\":419:429  msg.sender */\n  caller\n    /* \"src/Bank.sol\":411:416  owner */\n  0x01\n  0x00\n    /* \"src/Bank.sol\":411:429  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/Bank.sol\":349:436  constructor(address _token) {... */\n  pop\n    /* \"src/Bank.sol\":225:1251  contract Bank {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/Bank.sol\":225:1251  contract Bank {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/Bank.sol\":225:1251  contract Bank {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f7b1bca\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcb13cddb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe5225381\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/Bank.sol\":885:1068  function withdraw() external {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"src/Bank.sol\":443:639  function deposit(address user, uint amount) public {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"src/Bank.sol\":646:879  function permitDeposit(address user, uint amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"src/Bank.sol\":245:286  mapping(address => uint) public deposited */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Bank.sol\":1075:1248  function collect() external {... */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"src/Bank.sol\":292:322  address public immutable token */\n    tag_8:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Bank.sol\":885:1068  function withdraw() external {... */\n    tag_10:\n        /* \"src/Bank.sol\":924:935  uint amount */\n      0x00\n        /* \"src/Bank.sol\":938:947  deposited */\n      dup1\n        /* \"src/Bank.sol\":938:959  deposited[msg.sender] */\n      0x00\n        /* \"src/Bank.sol\":948:958  msg.sender */\n      caller\n        /* \"src/Bank.sol\":938:959  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Bank.sol\":924:959  uint amount = deposited[msg.sender] */\n      swap1\n      pop\n        /* \"src/Bank.sol\":969:1026  SafeERC20.safeTransfer(IERC20(token), msg.sender, amount) */\n      tag_32\n        /* \"src/Bank.sol\":999:1004  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"src/Bank.sol\":1007:1017  msg.sender */\n      caller\n        /* \"src/Bank.sol\":1019:1025  amount */\n      dup4\n        /* \"src/Bank.sol\":969:991  SafeERC20.safeTransfer */\n      tag_33\n        /* \"src/Bank.sol\":969:1026  SafeERC20.safeTransfer(IERC20(token), msg.sender, amount) */\n      jump\t// in\n    tag_32:\n        /* \"src/Bank.sol\":1060:1061  0 */\n      0x00\n        /* \"src/Bank.sol\":1036:1045  deposited */\n      dup1\n        /* \"src/Bank.sol\":1036:1057  deposited[msg.sender] */\n      0x00\n        /* \"src/Bank.sol\":1046:1056  msg.sender */\n      caller\n        /* \"src/Bank.sol\":1036:1057  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Bank.sol\":1036:1061  deposited[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Bank.sol\":914:1068  {... */\n      pop\n        /* \"src/Bank.sol\":885:1068  function withdraw() external {... */\n      jump\t// out\n        /* \"src/Bank.sol\":443:639  function deposit(address user, uint amount) public {... */\n    tag_14:\n        /* \"src/Bank.sol\":519:524  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"src/Bank.sol\":512:538  IERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/Bank.sol\":539:549  msg.sender */\n      caller\n        /* \"src/Bank.sol\":559:563  this */\n      address\n        /* \"src/Bank.sol\":566:572  amount */\n      dup5\n        /* \"src/Bank.sol\":512:573  IERC20(token).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"src/Bank.sol\":504:597  require(IERC20(token).transferFrom(msg.sender, address(this), amount), \"Transfer from error\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"src/Bank.sol\":626:632  amount */\n      dup1\n        /* \"src/Bank.sol\":607:616  deposited */\n      0x00\n        /* \"src/Bank.sol\":607:622  deposited[user] */\n      dup1\n        /* \"src/Bank.sol\":617:621  user */\n      dup5\n        /* \"src/Bank.sol\":607:622  deposited[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Bank.sol\":607:632  deposited[user] += amount */\n      dup3\n      dup3\n      sload\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Bank.sol\":443:639  function deposit(address user, uint amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Bank.sol\":646:879  function permitDeposit(address user, uint amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_18:\n        /* \"src/Bank.sol\":774:779  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"src/Bank.sol\":761:787  IERC20Permit(token).permit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd505accf\n        /* \"src/Bank.sol\":788:798  msg.sender */\n      caller\n        /* \"src/Bank.sol\":808:812  this */\n      address\n        /* \"src/Bank.sol\":815:821  amount */\n      dup9\n        /* \"src/Bank.sol\":823:831  deadline */\n      dup9\n        /* \"src/Bank.sol\":833:834  v */\n      dup9\n        /* \"src/Bank.sol\":836:837  r */\n      dup9\n        /* \"src/Bank.sol\":839:840  s */\n      dup9\n        /* \"src/Bank.sol\":761:841  IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Bank.sol\":851:872  deposit(user, amount) */\n      tag_52\n        /* \"src/Bank.sol\":859:863  user */\n      dup7\n        /* \"src/Bank.sol\":865:871  amount */\n      dup7\n        /* \"src/Bank.sol\":851:858  deposit */\n      tag_14\n        /* \"src/Bank.sol\":851:872  deposit(user, amount) */\n      jump\t// in\n    tag_52:\n        /* \"src/Bank.sol\":646:879  function permitDeposit(address user, uint amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Bank.sol\":245:286  mapping(address => uint) public deposited */\n    tag_22:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/Bank.sol\":1075:1248  function collect() external {... */\n    tag_26:\n        /* \"src/Bank.sol\":1157:1161  5e18 */\n      0x4563918244f40000\n        /* \"src/Bank.sol\":1123:1128  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"src/Bank.sol\":1116:1139  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/Bank.sol\":1148:1152  this */\n      address\n        /* \"src/Bank.sol\":1116:1155  IERC20(token).balanceOf(address(this) ) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"src/Bank.sol\":1116:1161  IERC20(token).balanceOf(address(this) )> 5e18 */\n      gt\n        /* \"src/Bank.sol\":1113:1242  if(IERC20(token).balanceOf(address(this) )> 5e18) {... */\n      iszero\n      tag_59\n      jumpi\n        /* \"src/Bank.sol\":1177:1227  SafeERC20.safeTransfer(IERC20(token), owner, 5e18) */\n      tag_60\n        /* \"src/Bank.sol\":1207:1212  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"src/Bank.sol\":1215:1220  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Bank.sol\":1222:1226  5e18 */\n      0x4563918244f40000\n        /* \"src/Bank.sol\":1177:1199  SafeERC20.safeTransfer */\n      tag_33\n        /* \"src/Bank.sol\":1177:1227  SafeERC20.safeTransfer(IERC20(token), owner, 5e18) */\n      jump\t// in\n    tag_60:\n        /* \"src/Bank.sol\":1113:1242  if(IERC20(token).balanceOf(address(this) )> 5e18) {... */\n    tag_59:\n        /* \"src/Bank.sol\":1075:1248  function collect() external {... */\n      jump\t// out\n        /* \"src/Bank.sol\":292:322  address public immutable token */\n    tag_28:\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_63\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_68\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_69\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_74\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_75\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_77\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_83\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_82)\n    tag_83:\n      0x60\n      swap2\n      pop\n    tag_82:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_85\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_88\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_89\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_90)\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_86)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_86:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_98:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_100:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_101:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_135\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_100\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_102:\n        /* \"#utility.yul\":641:665   */\n      tag_137\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_101\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_138:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_103:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_140\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_102\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_104:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_105:\n        /* \"#utility.yul\":997:1021   */\n      tag_143\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_104\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_144:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_106:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_146\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_105\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_13:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_149\n      tag_98\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1290:1409   */\n    tag_148:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_150\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_103\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_151\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_106\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1763   */\n    tag_107:\n        /* \"#utility.yul\":1712:1719   */\n      0x00\n        /* \"#utility.yul\":1752:1756   */\n      0xff\n        /* \"#utility.yul\":1745:1750   */\n      dup3\n        /* \"#utility.yul\":1741:1757   */\n      and\n        /* \"#utility.yul\":1730:1757   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1769:1887   */\n    tag_108:\n        /* \"#utility.yul\":1840:1862   */\n      tag_154\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1840:1862   */\n      tag_107\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1833:1838   */\n      dup2\n        /* \"#utility.yul\":1830:1863   */\n      eq\n        /* \"#utility.yul\":1820:1881   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1877:1878   */\n      0x00\n        /* \"#utility.yul\":1874:1875   */\n      dup1\n        /* \"#utility.yul\":1867:1879   */\n      revert\n        /* \"#utility.yul\":1820:1881   */\n    tag_155:\n        /* \"#utility.yul\":1769:1887   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1893:2028   */\n    tag_109:\n        /* \"#utility.yul\":1937:1942   */\n      0x00\n        /* \"#utility.yul\":1975:1981   */\n      dup2\n        /* \"#utility.yul\":1962:1982   */\n      calldataload\n        /* \"#utility.yul\":1953:1982   */\n      swap1\n      pop\n        /* \"#utility.yul\":1991:2022   */\n      tag_157\n        /* \"#utility.yul\":2016:2021   */\n      dup2\n        /* \"#utility.yul\":1991:2022   */\n      tag_108\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1893:2028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2034:2111   */\n    tag_110:\n        /* \"#utility.yul\":2071:2078   */\n      0x00\n        /* \"#utility.yul\":2100:2105   */\n      dup2\n        /* \"#utility.yul\":2089:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2034:2111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2117:2239   */\n    tag_111:\n        /* \"#utility.yul\":2190:2214   */\n      tag_160\n        /* \"#utility.yul\":2208:2213   */\n      dup2\n        /* \"#utility.yul\":2190:2214   */\n      tag_110\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2183:2188   */\n      dup2\n        /* \"#utility.yul\":2180:2215   */\n      eq\n        /* \"#utility.yul\":2170:2233   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2229:2230   */\n      0x00\n        /* \"#utility.yul\":2226:2227   */\n      dup1\n        /* \"#utility.yul\":2219:2231   */\n      revert\n        /* \"#utility.yul\":2170:2233   */\n    tag_161:\n        /* \"#utility.yul\":2117:2239   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2245:2384   */\n    tag_112:\n        /* \"#utility.yul\":2291:2296   */\n      0x00\n        /* \"#utility.yul\":2329:2335   */\n      dup2\n        /* \"#utility.yul\":2316:2336   */\n      calldataload\n        /* \"#utility.yul\":2307:2336   */\n      swap1\n      pop\n        /* \"#utility.yul\":2345:2378   */\n      tag_163\n        /* \"#utility.yul\":2372:2377   */\n      dup2\n        /* \"#utility.yul\":2345:2378   */\n      tag_111\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2245:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:3443   */\n    tag_17:\n        /* \"#utility.yul\":2492:2498   */\n      0x00\n        /* \"#utility.yul\":2500:2506   */\n      dup1\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2516:2522   */\n      dup1\n        /* \"#utility.yul\":2524:2530   */\n      0x00\n        /* \"#utility.yul\":2532:2538   */\n      dup1\n        /* \"#utility.yul\":2581:2584   */\n      0xc0\n        /* \"#utility.yul\":2569:2578   */\n      dup8\n        /* \"#utility.yul\":2560:2567   */\n      dup10\n        /* \"#utility.yul\":2556:2579   */\n      sub\n        /* \"#utility.yul\":2552:2585   */\n      slt\n        /* \"#utility.yul\":2549:2669   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2588:2667   */\n      tag_166\n      tag_98\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2549:2669   */\n    tag_165:\n        /* \"#utility.yul\":2708:2709   */\n      0x00\n        /* \"#utility.yul\":2733:2786   */\n      tag_167\n        /* \"#utility.yul\":2778:2785   */\n      dup10\n        /* \"#utility.yul\":2769:2775   */\n      dup3\n        /* \"#utility.yul\":2758:2767   */\n      dup11\n        /* \"#utility.yul\":2754:2776   */\n      add\n        /* \"#utility.yul\":2733:2786   */\n      tag_103\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2723:2786   */\n      swap7\n      pop\n        /* \"#utility.yul\":2679:2796   */\n      pop\n        /* \"#utility.yul\":2835:2837   */\n      0x20\n        /* \"#utility.yul\":2861:2914   */\n      tag_168\n        /* \"#utility.yul\":2906:2913   */\n      dup10\n        /* \"#utility.yul\":2897:2903   */\n      dup3\n        /* \"#utility.yul\":2886:2895   */\n      dup11\n        /* \"#utility.yul\":2882:2904   */\n      add\n        /* \"#utility.yul\":2861:2914   */\n      tag_106\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2851:2914   */\n      swap6\n      pop\n        /* \"#utility.yul\":2806:2924   */\n      pop\n        /* \"#utility.yul\":2963:2965   */\n      0x40\n        /* \"#utility.yul\":2989:3042   */\n      tag_169\n        /* \"#utility.yul\":3034:3041   */\n      dup10\n        /* \"#utility.yul\":3025:3031   */\n      dup3\n        /* \"#utility.yul\":3014:3023   */\n      dup11\n        /* \"#utility.yul\":3010:3032   */\n      add\n        /* \"#utility.yul\":2989:3042   */\n      tag_106\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2979:3042   */\n      swap5\n      pop\n        /* \"#utility.yul\":2934:3052   */\n      pop\n        /* \"#utility.yul\":3091:3093   */\n      0x60\n        /* \"#utility.yul\":3117:3168   */\n      tag_170\n        /* \"#utility.yul\":3160:3167   */\n      dup10\n        /* \"#utility.yul\":3151:3157   */\n      dup3\n        /* \"#utility.yul\":3140:3149   */\n      dup11\n        /* \"#utility.yul\":3136:3158   */\n      add\n        /* \"#utility.yul\":3117:3168   */\n      tag_109\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3107:3168   */\n      swap4\n      pop\n        /* \"#utility.yul\":3062:3178   */\n      pop\n        /* \"#utility.yul\":3217:3220   */\n      0x80\n        /* \"#utility.yul\":3244:3297   */\n      tag_171\n        /* \"#utility.yul\":3289:3296   */\n      dup10\n        /* \"#utility.yul\":3280:3286   */\n      dup3\n        /* \"#utility.yul\":3269:3278   */\n      dup11\n        /* \"#utility.yul\":3265:3287   */\n      add\n        /* \"#utility.yul\":3244:3297   */\n      tag_112\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3234:3297   */\n      swap3\n      pop\n        /* \"#utility.yul\":3188:3307   */\n      pop\n        /* \"#utility.yul\":3346:3349   */\n      0xa0\n        /* \"#utility.yul\":3373:3426   */\n      tag_172\n        /* \"#utility.yul\":3418:3425   */\n      dup10\n        /* \"#utility.yul\":3409:3415   */\n      dup3\n        /* \"#utility.yul\":3398:3407   */\n      dup11\n        /* \"#utility.yul\":3394:3416   */\n      add\n        /* \"#utility.yul\":3373:3426   */\n      tag_112\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3363:3426   */\n      swap2\n      pop\n        /* \"#utility.yul\":3317:3436   */\n      pop\n        /* \"#utility.yul\":2390:3443   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":3449:3778   */\n    tag_21:\n        /* \"#utility.yul\":3508:3514   */\n      0x00\n        /* \"#utility.yul\":3557:3559   */\n      0x20\n        /* \"#utility.yul\":3545:3554   */\n      dup3\n        /* \"#utility.yul\":3536:3543   */\n      dup5\n        /* \"#utility.yul\":3532:3555   */\n      sub\n        /* \"#utility.yul\":3528:3560   */\n      slt\n        /* \"#utility.yul\":3525:3644   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":3563:3642   */\n      tag_175\n      tag_98\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3525:3644   */\n    tag_174:\n        /* \"#utility.yul\":3683:3684   */\n      0x00\n        /* \"#utility.yul\":3708:3761   */\n      tag_176\n        /* \"#utility.yul\":3753:3760   */\n      dup5\n        /* \"#utility.yul\":3744:3750   */\n      dup3\n        /* \"#utility.yul\":3733:3742   */\n      dup6\n        /* \"#utility.yul\":3729:3751   */\n      add\n        /* \"#utility.yul\":3708:3761   */\n      tag_103\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3698:3761   */\n      swap2\n      pop\n        /* \"#utility.yul\":3654:3771   */\n      pop\n        /* \"#utility.yul\":3449:3778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3784:3902   */\n    tag_113:\n        /* \"#utility.yul\":3871:3895   */\n      tag_178\n        /* \"#utility.yul\":3889:3894   */\n      dup2\n        /* \"#utility.yul\":3871:3895   */\n      tag_104\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3866:3869   */\n      dup3\n        /* \"#utility.yul\":3859:3896   */\n      mstore\n        /* \"#utility.yul\":3784:3902   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3908:4130   */\n    tag_24:\n        /* \"#utility.yul\":4001:4005   */\n      0x00\n        /* \"#utility.yul\":4039:4041   */\n      0x20\n        /* \"#utility.yul\":4028:4037   */\n      dup3\n        /* \"#utility.yul\":4024:4042   */\n      add\n        /* \"#utility.yul\":4016:4042   */\n      swap1\n      pop\n        /* \"#utility.yul\":4052:4123   */\n      tag_180\n        /* \"#utility.yul\":4120:4121   */\n      0x00\n        /* \"#utility.yul\":4109:4118   */\n      dup4\n        /* \"#utility.yul\":4105:4122   */\n      add\n        /* \"#utility.yul\":4096:4102   */\n      dup5\n        /* \"#utility.yul\":4052:4123   */\n      tag_113\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3908:4130   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4136:4254   */\n    tag_114:\n        /* \"#utility.yul\":4223:4247   */\n      tag_182\n        /* \"#utility.yul\":4241:4246   */\n      dup2\n        /* \"#utility.yul\":4223:4247   */\n      tag_101\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4218:4221   */\n      dup3\n        /* \"#utility.yul\":4211:4248   */\n      mstore\n        /* \"#utility.yul\":4136:4254   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4260:4482   */\n    tag_30:\n        /* \"#utility.yul\":4353:4357   */\n      0x00\n        /* \"#utility.yul\":4391:4393   */\n      0x20\n        /* \"#utility.yul\":4380:4389   */\n      dup3\n        /* \"#utility.yul\":4376:4394   */\n      add\n        /* \"#utility.yul\":4368:4394   */\n      swap1\n      pop\n        /* \"#utility.yul\":4404:4475   */\n      tag_184\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4461:4470   */\n      dup4\n        /* \"#utility.yul\":4457:4474   */\n      add\n        /* \"#utility.yul\":4448:4454   */\n      dup5\n        /* \"#utility.yul\":4404:4475   */\n      tag_114\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4260:4482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4488:4930   */\n    tag_36:\n        /* \"#utility.yul\":4637:4641   */\n      0x00\n        /* \"#utility.yul\":4675:4677   */\n      0x60\n        /* \"#utility.yul\":4664:4673   */\n      dup3\n        /* \"#utility.yul\":4660:4678   */\n      add\n        /* \"#utility.yul\":4652:4678   */\n      swap1\n      pop\n        /* \"#utility.yul\":4688:4759   */\n      tag_186\n        /* \"#utility.yul\":4756:4757   */\n      0x00\n        /* \"#utility.yul\":4745:4754   */\n      dup4\n        /* \"#utility.yul\":4741:4758   */\n      add\n        /* \"#utility.yul\":4732:4738   */\n      dup7\n        /* \"#utility.yul\":4688:4759   */\n      tag_114\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4769:4841   */\n      tag_187\n        /* \"#utility.yul\":4837:4839   */\n      0x20\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4840   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup6\n        /* \"#utility.yul\":4769:4841   */\n      tag_114\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4851:4923   */\n      tag_188\n        /* \"#utility.yul\":4919:4921   */\n      0x40\n        /* \"#utility.yul\":4908:4917   */\n      dup4\n        /* \"#utility.yul\":4904:4922   */\n      add\n        /* \"#utility.yul\":4895:4901   */\n      dup5\n        /* \"#utility.yul\":4851:4923   */\n      tag_113\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4488:4930   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5026   */\n    tag_115:\n        /* \"#utility.yul\":4970:4977   */\n      0x00\n        /* \"#utility.yul\":5013:5018   */\n      dup2\n        /* \"#utility.yul\":5006:5019   */\n      iszero\n        /* \"#utility.yul\":4999:5020   */\n      iszero\n        /* \"#utility.yul\":4988:5020   */\n      swap1\n      pop\n        /* \"#utility.yul\":4936:5026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5032:5148   */\n    tag_116:\n        /* \"#utility.yul\":5102:5123   */\n      tag_191\n        /* \"#utility.yul\":5117:5122   */\n      dup2\n        /* \"#utility.yul\":5102:5123   */\n      tag_115\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5095:5100   */\n      dup2\n        /* \"#utility.yul\":5092:5124   */\n      eq\n        /* \"#utility.yul\":5082:5142   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":5138:5139   */\n      0x00\n        /* \"#utility.yul\":5135:5136   */\n      dup1\n        /* \"#utility.yul\":5128:5140   */\n      revert\n        /* \"#utility.yul\":5082:5142   */\n    tag_192:\n        /* \"#utility.yul\":5032:5148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5154:5291   */\n    tag_117:\n        /* \"#utility.yul\":5208:5213   */\n      0x00\n        /* \"#utility.yul\":5239:5245   */\n      dup2\n        /* \"#utility.yul\":5233:5246   */\n      mload\n        /* \"#utility.yul\":5224:5246   */\n      swap1\n      pop\n        /* \"#utility.yul\":5255:5285   */\n      tag_194\n        /* \"#utility.yul\":5279:5284   */\n      dup2\n        /* \"#utility.yul\":5255:5285   */\n      tag_116\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5154:5291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5297:5642   */\n    tag_40:\n        /* \"#utility.yul\":5364:5370   */\n      0x00\n        /* \"#utility.yul\":5413:5415   */\n      0x20\n        /* \"#utility.yul\":5401:5410   */\n      dup3\n        /* \"#utility.yul\":5392:5399   */\n      dup5\n        /* \"#utility.yul\":5388:5411   */\n      sub\n        /* \"#utility.yul\":5384:5416   */\n      slt\n        /* \"#utility.yul\":5381:5500   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":5419:5498   */\n      tag_197\n      tag_98\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5381:5500   */\n    tag_196:\n        /* \"#utility.yul\":5539:5540   */\n      0x00\n        /* \"#utility.yul\":5564:5625   */\n      tag_198\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5608:5614   */\n      dup3\n        /* \"#utility.yul\":5597:5606   */\n      dup6\n        /* \"#utility.yul\":5593:5615   */\n      add\n        /* \"#utility.yul\":5564:5625   */\n      tag_117\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5554:5625   */\n      swap2\n      pop\n        /* \"#utility.yul\":5510:5635   */\n      pop\n        /* \"#utility.yul\":5297:5642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5648:5817   */\n    tag_118:\n        /* \"#utility.yul\":5732:5743   */\n      0x00\n        /* \"#utility.yul\":5766:5772   */\n      dup3\n        /* \"#utility.yul\":5761:5764   */\n      dup3\n        /* \"#utility.yul\":5754:5773   */\n      mstore\n        /* \"#utility.yul\":5806:5810   */\n      0x20\n        /* \"#utility.yul\":5801:5804   */\n      dup3\n        /* \"#utility.yul\":5797:5811   */\n      add\n        /* \"#utility.yul\":5782:5811   */\n      swap1\n      pop\n        /* \"#utility.yul\":5648:5817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5823:5992   */\n    tag_119:\n        /* \"#utility.yul\":5963:5984   */\n      0x5472616e736665722066726f6d206572726f7200000000000000000000000000\n        /* \"#utility.yul\":5959:5960   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup3\n        /* \"#utility.yul\":5947:5961   */\n      add\n        /* \"#utility.yul\":5940:5985   */\n      mstore\n        /* \"#utility.yul\":5823:5992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5998:6364   */\n    tag_120:\n        /* \"#utility.yul\":6140:6143   */\n      0x00\n        /* \"#utility.yul\":6161:6228   */\n      tag_202\n        /* \"#utility.yul\":6225:6227   */\n      0x13\n        /* \"#utility.yul\":6220:6223   */\n      dup4\n        /* \"#utility.yul\":6161:6228   */\n      tag_118\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6154:6228   */\n      swap2\n      pop\n        /* \"#utility.yul\":6237:6330   */\n      tag_203\n        /* \"#utility.yul\":6326:6329   */\n      dup3\n        /* \"#utility.yul\":6237:6330   */\n      tag_119\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6355:6357   */\n      0x20\n        /* \"#utility.yul\":6350:6353   */\n      dup3\n        /* \"#utility.yul\":6346:6358   */\n      add\n        /* \"#utility.yul\":6339:6358   */\n      swap1\n      pop\n        /* \"#utility.yul\":5998:6364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6370:6789   */\n    tag_43:\n        /* \"#utility.yul\":6536:6540   */\n      0x00\n        /* \"#utility.yul\":6574:6576   */\n      0x20\n        /* \"#utility.yul\":6563:6572   */\n      dup3\n        /* \"#utility.yul\":6559:6577   */\n      add\n        /* \"#utility.yul\":6551:6577   */\n      swap1\n      pop\n        /* \"#utility.yul\":6623:6632   */\n      dup2\n        /* \"#utility.yul\":6617:6621   */\n      dup2\n        /* \"#utility.yul\":6613:6633   */\n      sub\n        /* \"#utility.yul\":6609:6610   */\n      0x00\n        /* \"#utility.yul\":6598:6607   */\n      dup4\n        /* \"#utility.yul\":6594:6611   */\n      add\n        /* \"#utility.yul\":6587:6634   */\n      mstore\n        /* \"#utility.yul\":6651:6782   */\n      tag_205\n        /* \"#utility.yul\":6777:6781   */\n      dup2\n        /* \"#utility.yul\":6651:6782   */\n      tag_120\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6643:6782   */\n      swap1\n      pop\n        /* \"#utility.yul\":6370:6789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6795:6975   */\n    tag_121:\n        /* \"#utility.yul\":6843:6920   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6840:6841   */\n      0x00\n        /* \"#utility.yul\":6833:6921   */\n      mstore\n        /* \"#utility.yul\":6940:6944   */\n      0x11\n        /* \"#utility.yul\":6937:6938   */\n      0x04\n        /* \"#utility.yul\":6930:6945   */\n      mstore\n        /* \"#utility.yul\":6964:6968   */\n      0x24\n        /* \"#utility.yul\":6961:6962   */\n      0x00\n        /* \"#utility.yul\":6954:6969   */\n      revert\n        /* \"#utility.yul\":6981:7172   */\n    tag_45:\n        /* \"#utility.yul\":7021:7024   */\n      0x00\n        /* \"#utility.yul\":7040:7060   */\n      tag_208\n        /* \"#utility.yul\":7058:7059   */\n      dup3\n        /* \"#utility.yul\":7040:7060   */\n      tag_104\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7035:7060   */\n      swap2\n      pop\n        /* \"#utility.yul\":7074:7094   */\n      tag_209\n        /* \"#utility.yul\":7092:7093   */\n      dup4\n        /* \"#utility.yul\":7074:7094   */\n      tag_104\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":7069:7094   */\n      swap3\n      pop\n        /* \"#utility.yul\":7117:7118   */\n      dup3\n        /* \"#utility.yul\":7114:7115   */\n      dup3\n        /* \"#utility.yul\":7110:7119   */\n      add\n        /* \"#utility.yul\":7103:7119   */\n      swap1\n      pop\n        /* \"#utility.yul\":7138:7141   */\n      dup1\n        /* \"#utility.yul\":7135:7136   */\n      dup3\n        /* \"#utility.yul\":7132:7142   */\n      gt\n        /* \"#utility.yul\":7129:7165   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":7145:7163   */\n      tag_211\n      tag_121\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":7129:7165   */\n    tag_210:\n        /* \"#utility.yul\":6981:7172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7178:7290   */\n    tag_122:\n        /* \"#utility.yul\":7261:7283   */\n      tag_213\n        /* \"#utility.yul\":7277:7282   */\n      dup2\n        /* \"#utility.yul\":7261:7283   */\n      tag_107\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":7256:7259   */\n      dup3\n        /* \"#utility.yul\":7249:7284   */\n      mstore\n        /* \"#utility.yul\":7178:7290   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7296:7414   */\n    tag_123:\n        /* \"#utility.yul\":7383:7407   */\n      tag_215\n        /* \"#utility.yul\":7401:7406   */\n      dup2\n        /* \"#utility.yul\":7383:7407   */\n      tag_110\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":7378:7381   */\n      dup3\n        /* \"#utility.yul\":7371:7408   */\n      mstore\n        /* \"#utility.yul\":7296:7414   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7420:8298   */\n    tag_48:\n        /* \"#utility.yul\":7677:7681   */\n      0x00\n        /* \"#utility.yul\":7715:7718   */\n      0xe0\n        /* \"#utility.yul\":7704:7713   */\n      dup3\n        /* \"#utility.yul\":7700:7719   */\n      add\n        /* \"#utility.yul\":7692:7719   */\n      swap1\n      pop\n        /* \"#utility.yul\":7729:7800   */\n      tag_217\n        /* \"#utility.yul\":7797:7798   */\n      0x00\n        /* \"#utility.yul\":7786:7795   */\n      dup4\n        /* \"#utility.yul\":7782:7799   */\n      add\n        /* \"#utility.yul\":7773:7779   */\n      dup11\n        /* \"#utility.yul\":7729:7800   */\n      tag_114\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7810:7882   */\n      tag_218\n        /* \"#utility.yul\":7878:7880   */\n      0x20\n        /* \"#utility.yul\":7867:7876   */\n      dup4\n        /* \"#utility.yul\":7863:7881   */\n      add\n        /* \"#utility.yul\":7854:7860   */\n      dup10\n        /* \"#utility.yul\":7810:7882   */\n      tag_114\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7892:7964   */\n      tag_219\n        /* \"#utility.yul\":7960:7962   */\n      0x40\n        /* \"#utility.yul\":7949:7958   */\n      dup4\n        /* \"#utility.yul\":7945:7963   */\n      add\n        /* \"#utility.yul\":7936:7942   */\n      dup9\n        /* \"#utility.yul\":7892:7964   */\n      tag_113\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7974:8046   */\n      tag_220\n        /* \"#utility.yul\":8042:8044   */\n      0x60\n        /* \"#utility.yul\":8031:8040   */\n      dup4\n        /* \"#utility.yul\":8027:8045   */\n      add\n        /* \"#utility.yul\":8018:8024   */\n      dup8\n        /* \"#utility.yul\":7974:8046   */\n      tag_113\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8056:8125   */\n      tag_221\n        /* \"#utility.yul\":8120:8123   */\n      0x80\n        /* \"#utility.yul\":8109:8118   */\n      dup4\n        /* \"#utility.yul\":8105:8124   */\n      add\n        /* \"#utility.yul\":8096:8102   */\n      dup7\n        /* \"#utility.yul\":8056:8125   */\n      tag_122\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":8135:8208   */\n      tag_222\n        /* \"#utility.yul\":8203:8206   */\n      0xa0\n        /* \"#utility.yul\":8192:8201   */\n      dup4\n        /* \"#utility.yul\":8188:8207   */\n      add\n        /* \"#utility.yul\":8179:8185   */\n      dup6\n        /* \"#utility.yul\":8135:8208   */\n      tag_123\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8218:8291   */\n      tag_223\n        /* \"#utility.yul\":8286:8289   */\n      0xc0\n        /* \"#utility.yul\":8275:8284   */\n      dup4\n        /* \"#utility.yul\":8271:8290   */\n      add\n        /* \"#utility.yul\":8262:8268   */\n      dup5\n        /* \"#utility.yul\":8218:8291   */\n      tag_123\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7420:8298   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8304:8447   */\n    tag_124:\n        /* \"#utility.yul\":8361:8366   */\n      0x00\n        /* \"#utility.yul\":8392:8398   */\n      dup2\n        /* \"#utility.yul\":8386:8399   */\n      mload\n        /* \"#utility.yul\":8377:8399   */\n      swap1\n      pop\n        /* \"#utility.yul\":8408:8441   */\n      tag_225\n        /* \"#utility.yul\":8435:8440   */\n      dup2\n        /* \"#utility.yul\":8408:8441   */\n      tag_105\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8304:8447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8453:8804   */\n    tag_58:\n        /* \"#utility.yul\":8523:8529   */\n      0x00\n        /* \"#utility.yul\":8572:8574   */\n      0x20\n        /* \"#utility.yul\":8560:8569   */\n      dup3\n        /* \"#utility.yul\":8551:8558   */\n      dup5\n        /* \"#utility.yul\":8547:8570   */\n      sub\n        /* \"#utility.yul\":8543:8575   */\n      slt\n        /* \"#utility.yul\":8540:8659   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":8578:8657   */\n      tag_228\n      tag_98\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":8540:8659   */\n    tag_227:\n        /* \"#utility.yul\":8698:8699   */\n      0x00\n        /* \"#utility.yul\":8723:8787   */\n      tag_229\n        /* \"#utility.yul\":8779:8786   */\n      dup5\n        /* \"#utility.yul\":8770:8776   */\n      dup3\n        /* \"#utility.yul\":8759:8768   */\n      dup6\n        /* \"#utility.yul\":8755:8777   */\n      add\n        /* \"#utility.yul\":8723:8787   */\n      tag_124\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":8713:8787   */\n      swap2\n      pop\n        /* \"#utility.yul\":8669:8797   */\n      pop\n        /* \"#utility.yul\":8453:8804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8810:9142   */\n    tag_64:\n        /* \"#utility.yul\":8931:8935   */\n      0x00\n        /* \"#utility.yul\":8969:8971   */\n      0x40\n        /* \"#utility.yul\":8958:8967   */\n      dup3\n        /* \"#utility.yul\":8954:8972   */\n      add\n        /* \"#utility.yul\":8946:8972   */\n      swap1\n      pop\n        /* \"#utility.yul\":8982:9053   */\n      tag_231\n        /* \"#utility.yul\":9050:9051   */\n      0x00\n        /* \"#utility.yul\":9039:9048   */\n      dup4\n        /* \"#utility.yul\":9035:9052   */\n      add\n        /* \"#utility.yul\":9026:9032   */\n      dup6\n        /* \"#utility.yul\":8982:9053   */\n      tag_114\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9063:9135   */\n      tag_232\n        /* \"#utility.yul\":9131:9133   */\n      0x20\n        /* \"#utility.yul\":9120:9129   */\n      dup4\n        /* \"#utility.yul\":9116:9134   */\n      add\n        /* \"#utility.yul\":9107:9113   */\n      dup5\n        /* \"#utility.yul\":9063:9135   */\n      tag_113\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":8810:9142   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9148:9246   */\n    tag_125:\n        /* \"#utility.yul\":9199:9205   */\n      0x00\n        /* \"#utility.yul\":9233:9238   */\n      dup2\n        /* \"#utility.yul\":9227:9239   */\n      mload\n        /* \"#utility.yul\":9217:9239   */\n      swap1\n      pop\n        /* \"#utility.yul\":9148:9246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9252:9399   */\n    tag_126:\n        /* \"#utility.yul\":9353:9364   */\n      0x00\n        /* \"#utility.yul\":9390:9393   */\n      dup2\n        /* \"#utility.yul\":9375:9393   */\n      swap1\n      pop\n        /* \"#utility.yul\":9252:9399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9405:9544   */\n    tag_127:\n        /* \"#utility.yul\":9494:9500   */\n      dup3\n        /* \"#utility.yul\":9489:9492   */\n      dup2\n        /* \"#utility.yul\":9484:9487   */\n      dup4\n        /* \"#utility.yul\":9478:9501   */\n      mcopy\n        /* \"#utility.yul\":9535:9536   */\n      0x00\n        /* \"#utility.yul\":9526:9532   */\n      dup4\n        /* \"#utility.yul\":9521:9524   */\n      dup4\n        /* \"#utility.yul\":9517:9533   */\n      add\n        /* \"#utility.yul\":9510:9537   */\n      mstore\n        /* \"#utility.yul\":9405:9544   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9550:9936   */\n    tag_128:\n        /* \"#utility.yul\":9654:9657   */\n      0x00\n        /* \"#utility.yul\":9682:9720   */\n      tag_237\n        /* \"#utility.yul\":9714:9719   */\n      dup3\n        /* \"#utility.yul\":9682:9720   */\n      tag_125\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9736:9824   */\n      tag_238\n        /* \"#utility.yul\":9817:9823   */\n      dup2\n        /* \"#utility.yul\":9812:9815   */\n      dup6\n        /* \"#utility.yul\":9736:9824   */\n      tag_126\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":9729:9824   */\n      swap4\n      pop\n        /* \"#utility.yul\":9833:9898   */\n      tag_239\n        /* \"#utility.yul\":9891:9897   */\n      dup2\n        /* \"#utility.yul\":9886:9889   */\n      dup6\n        /* \"#utility.yul\":9879:9883   */\n      0x20\n        /* \"#utility.yul\":9872:9877   */\n      dup7\n        /* \"#utility.yul\":9868:9884   */\n      add\n        /* \"#utility.yul\":9833:9898   */\n      tag_127\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9923:9929   */\n      dup1\n        /* \"#utility.yul\":9918:9921   */\n      dup5\n        /* \"#utility.yul\":9914:9930   */\n      add\n        /* \"#utility.yul\":9907:9930   */\n      swap2\n      pop\n        /* \"#utility.yul\":9658:9936   */\n      pop\n        /* \"#utility.yul\":9550:9936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9942:10213   */\n    tag_80:\n        /* \"#utility.yul\":10072:10075   */\n      0x00\n        /* \"#utility.yul\":10094:10187   */\n      tag_241\n        /* \"#utility.yul\":10183:10186   */\n      dup3\n        /* \"#utility.yul\":10174:10180   */\n      dup5\n        /* \"#utility.yul\":10094:10187   */\n      tag_128\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":10087:10187   */\n      swap2\n      pop\n        /* \"#utility.yul\":10204:10207   */\n      dup2\n        /* \"#utility.yul\":10197:10207   */\n      swap1\n      pop\n        /* \"#utility.yul\":9942:10213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220450fd2787f40d82c5e864edd7f813d54e5d49715baec457f027e670e5d64f6e864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_684": {
									"entryPoint": null,
									"id": 684,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:5",
										"nodeType": "YulBlock",
										"src": "0:1199:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051610e23380380610e2383398181016040528101906100319190610109565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610134565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100d8826100af565b9050919050565b6100e8816100ce565b81146100f2575f80fd5b50565b5f81519050610103816100df565b92915050565b5f6020828403121561011e5761011d6100ab565b5b5f61012b848285016100f5565b91505092915050565b608051610cb461016f5f395f8181610143015281816101af015281816102e1015281816103a20152818161044301526104970152610cb45ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80633ccfd60b1461006457806347e7ef241461006e5780638f7b1bca1461008a578063cb13cddb146100a6578063e5225381146100d6578063fc0c546a146100e0575b5f80fd5b61006c6100fe565b005b6100886004803603810190610083919061080d565b6101ad565b005b6100a4600480360381019061009f91906108b4565b6102df565b005b6100c060048036038101906100bb919061093d565b610383565b6040516100cd9190610977565b60405180910390f35b6100de610397565b005b6100e8610495565b6040516100f5919061099f565b60405180910390f35b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506101697f000000000000000000000000000000000000000000000000000000000000000033836104b9565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161020a939291906109b8565b6020604051808303815f875af1158015610226573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024a9190610a22565b610289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028090610aa7565b60405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102d49190610af2565b925050819055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d505accf333088888888886040518863ffffffff1660e01b81526004016103449796959493929190610b43565b5f604051808303815f87803b15801561035b575f80fd5b505af115801561036d573d5f803e3d5ffd5b5050505061037b86866101ad565b505050505050565b5f602052805f5260405f205f915090505481565b674563918244f400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103f9919061099f565b602060405180830381865afa158015610414573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104389190610bc4565b1115610493576104927f000000000000000000000000000000000000000000000000000000000000000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16674563918244f400006104b9565b5b565b7f000000000000000000000000000000000000000000000000000000000000000081565b610533838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016104ec929190610bef565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610538565b505050565b5f610562828473ffffffffffffffffffffffffffffffffffffffff166105cd90919063ffffffff16565b90505f8151141580156105865750808060200190518101906105849190610a22565b155b156105c857826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016105bf919061099f565b60405180910390fd5b505050565b60606105da83835f6105e2565b905092915050565b60608147101561062957306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610620919061099f565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516106519190610c68565b5f6040518083038185875af1925050503d805f811461068b576040519150601f19603f3d011682016040523d82523d5f602084013e610690565b606091505b50915091506106a08683836106ab565b925050509392505050565b6060826106c0576106bb82610738565b610730565b5f82511480156106e657505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561072857836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161071f919061099f565b60405180910390fd5b819050610731565b5b9392505050565b5f8151111561074a5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107a982610780565b9050919050565b6107b98161079f565b81146107c3575f80fd5b50565b5f813590506107d4816107b0565b92915050565b5f819050919050565b6107ec816107da565b81146107f6575f80fd5b50565b5f81359050610807816107e3565b92915050565b5f80604083850312156108235761082261077c565b5b5f610830858286016107c6565b9250506020610841858286016107f9565b9150509250929050565b5f60ff82169050919050565b6108608161084b565b811461086a575f80fd5b50565b5f8135905061087b81610857565b92915050565b5f819050919050565b61089381610881565b811461089d575f80fd5b50565b5f813590506108ae8161088a565b92915050565b5f805f805f8060c087890312156108ce576108cd61077c565b5b5f6108db89828a016107c6565b96505060206108ec89828a016107f9565b95505060406108fd89828a016107f9565b945050606061090e89828a0161086d565b935050608061091f89828a016108a0565b92505060a061093089828a016108a0565b9150509295509295509295565b5f602082840312156109525761095161077c565b5b5f61095f848285016107c6565b91505092915050565b610971816107da565b82525050565b5f60208201905061098a5f830184610968565b92915050565b6109998161079f565b82525050565b5f6020820190506109b25f830184610990565b92915050565b5f6060820190506109cb5f830186610990565b6109d86020830185610990565b6109e56040830184610968565b949350505050565b5f8115159050919050565b610a01816109ed565b8114610a0b575f80fd5b50565b5f81519050610a1c816109f8565b92915050565b5f60208284031215610a3757610a3661077c565b5b5f610a4484828501610a0e565b91505092915050565b5f82825260208201905092915050565b7f5472616e736665722066726f6d206572726f72000000000000000000000000005f82015250565b5f610a91601383610a4d565b9150610a9c82610a5d565b602082019050919050565b5f6020820190508181035f830152610abe81610a85565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610afc826107da565b9150610b07836107da565b9250828201905080821115610b1f57610b1e610ac5565b5b92915050565b610b2e8161084b565b82525050565b610b3d81610881565b82525050565b5f60e082019050610b565f83018a610990565b610b636020830189610990565b610b706040830188610968565b610b7d6060830187610968565b610b8a6080830186610b25565b610b9760a0830185610b34565b610ba460c0830184610b34565b98975050505050505050565b5f81519050610bbe816107e3565b92915050565b5f60208284031215610bd957610bd861077c565b5b5f610be684828501610bb0565b91505092915050565b5f604082019050610c025f830185610990565b610c0f6020830184610968565b9392505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610c4282610c16565b610c4c8185610c20565b9350610c5c818560208601610c2a565b80840191505092915050565b5f610c738284610c38565b91508190509291505056fea2646970667358221220450fd2787f40d82c5e864edd7f813d54e5d49715baec457f027e670e5d64f6e864736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE23 CODESIZE SUB DUP1 PUSH2 0xE23 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x134 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD8 DUP3 PUSH2 0xAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE8 DUP2 PUSH2 0xCE JUMP JUMPDEST DUP2 EQ PUSH2 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x103 DUP2 PUSH2 0xDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E JUMPI PUSH2 0x11D PUSH2 0xAB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12B DUP5 DUP3 DUP6 ADD PUSH2 0xF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xCB4 PUSH2 0x16F PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x143 ADD MSTORE DUP2 DUP2 PUSH2 0x1AF ADD MSTORE DUP2 DUP2 PUSH2 0x2E1 ADD MSTORE DUP2 DUP2 PUSH2 0x3A2 ADD MSTORE DUP2 DUP2 PUSH2 0x443 ADD MSTORE PUSH2 0x497 ADD MSTORE PUSH2 0xCB4 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x8F7B1BCA EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xCB13CDDB EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xE5225381 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH2 0x1AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x397 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x169 PUSH32 0x0 CALLER DUP4 PUSH2 0x4B9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP1 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB43 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x37B DUP7 DUP7 PUSH2 0x1AD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH8 0x4563918244F40000 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x414 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST GT ISZERO PUSH2 0x493 JUMPI PUSH2 0x492 PUSH32 0x0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0x4563918244F40000 PUSH2 0x4B9 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x533 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4EC SWAP3 SWAP2 SWAP1 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x538 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x562 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5CD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5C8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5DA DUP4 DUP4 PUSH0 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x629 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x690 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x6A0 DUP7 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x6C0 JUMPI PUSH2 0x6BB DUP3 PUSH2 0x738 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x6E6 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x728 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x731 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x74A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7A9 DUP3 PUSH2 0x780 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B9 DUP2 PUSH2 0x79F JUMP JUMPDEST DUP2 EQ PUSH2 0x7C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7D4 DUP2 PUSH2 0x7B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EC DUP2 PUSH2 0x7DA JUMP JUMPDEST DUP2 EQ PUSH2 0x7F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x807 DUP2 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x823 JUMPI PUSH2 0x822 PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x830 DUP6 DUP3 DUP7 ADD PUSH2 0x7C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x841 DUP6 DUP3 DUP7 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x860 DUP2 PUSH2 0x84B JUMP JUMPDEST DUP2 EQ PUSH2 0x86A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x87B DUP2 PUSH2 0x857 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x893 DUP2 PUSH2 0x881 JUMP JUMPDEST DUP2 EQ PUSH2 0x89D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8AE DUP2 PUSH2 0x88A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8DB DUP10 DUP3 DUP11 ADD PUSH2 0x7C6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x8EC DUP10 DUP3 DUP11 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x8FD DUP10 DUP3 DUP11 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x90E DUP10 DUP3 DUP11 ADD PUSH2 0x86D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x91F DUP10 DUP3 DUP11 ADD PUSH2 0x8A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x930 DUP10 DUP3 DUP11 ADD PUSH2 0x8A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x952 JUMPI PUSH2 0x951 PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x95F DUP5 DUP3 DUP6 ADD PUSH2 0x7C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x971 DUP2 PUSH2 0x7DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98A PUSH0 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x999 DUP2 PUSH2 0x79F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9CB PUSH0 DUP4 ADD DUP7 PUSH2 0x990 JUMP JUMPDEST PUSH2 0x9D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x990 JUMP JUMPDEST PUSH2 0x9E5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA01 DUP2 PUSH2 0x9ED JUMP JUMPDEST DUP2 EQ PUSH2 0xA0B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA1C DUP2 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA37 JUMPI PUSH2 0xA36 PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA44 DUP5 DUP3 DUP6 ADD PUSH2 0xA0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E736665722066726F6D206572726F7200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA91 PUSH1 0x13 DUP4 PUSH2 0xA4D JUMP JUMPDEST SWAP2 POP PUSH2 0xA9C DUP3 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xABE DUP2 PUSH2 0xA85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAFC DUP3 PUSH2 0x7DA JUMP JUMPDEST SWAP2 POP PUSH2 0xB07 DUP4 PUSH2 0x7DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB1F JUMPI PUSH2 0xB1E PUSH2 0xAC5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2E DUP2 PUSH2 0x84B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3D DUP2 PUSH2 0x881 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xB56 PUSH0 DUP4 ADD DUP11 PUSH2 0x990 JUMP JUMPDEST PUSH2 0xB63 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x990 JUMP JUMPDEST PUSH2 0xB70 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x968 JUMP JUMPDEST PUSH2 0xB7D PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x968 JUMP JUMPDEST PUSH2 0xB8A PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0xB97 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0xBA4 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xB34 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBBE DUP2 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD9 JUMPI PUSH2 0xBD8 PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE6 DUP5 DUP3 DUP6 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC02 PUSH0 DUP4 ADD DUP6 PUSH2 0x990 JUMP JUMPDEST PUSH2 0xC0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC42 DUP3 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0xC4C DUP2 DUP6 PUSH2 0xC20 JUMP JUMPDEST SWAP4 POP PUSH2 0xC5C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC2A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC73 DUP3 DUP5 PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xF 0xD2 PUSH25 0x7F40D82C5E864EDD7F813D54E5D49715BAEC457F027E670E5D PUSH5 0xF6E864736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "225:1026:4:-:0;;;349:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;395:6;387:14;;;;;;;;;;419:10;411:5;;:18;;;;;;;;;;;;;;;;;;349:87;225:1026;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;225:1026:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 1336,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 1848,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@collect_808": {
									"entryPoint": 919,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_714": {
									"entryPoint": 429,
									"id": 714,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposited_665": {
									"entryPoint": 899,
									"id": 665,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_523": {
									"entryPoint": 1506,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 1485,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@permitDeposit_752": {
									"entryPoint": 735,
									"id": 752,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@safeTransfer_163": {
									"entryPoint": 1209,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token_667": {
									"entryPoint": 1173,
									"id": 667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 1707,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_781": {
									"entryPoint": 254,
									"id": 781,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df": {
									"entryPoint": 2653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10216:5",
										"nodeType": "YulBlock",
										"src": "0:10216:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "886:32:5",
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nativeSrc": "896:16:5",
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:5",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:5",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:5",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nativeSrc": "967:79:5",
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:5",
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nativeSrc": "1026:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nativeSrc": "1026:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nativeSrc": "997:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nativeSrc": "987:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nativeSrc": "980:43:5",
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nativeSrc": "977:63:5",
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:5",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nativeSrc": "1104:87:5",
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nativeSrc": "1114:29:5",
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nativeSrc": "1123:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nativeSrc": "1152:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nativeSrc": "1152:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:5",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:5",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:5",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nativeSrc": "1280:391:5",
													"nodeType": "YulBlock",
													"src": "1280:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:5",
																"nodeType": "YulBlock",
																"src": "1326:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:5"
																			},
																			"nativeSrc": "1328:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:5"
																		},
																		"nativeSrc": "1328:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:5"
																		},
																		"nativeSrc": "1297:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:5"
																},
																"nativeSrc": "1293:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:5"
															},
															"nativeSrc": "1290:119:5",
															"nodeType": "YulIf",
															"src": "1290:119:5"
														},
														{
															"nativeSrc": "1419:117:5",
															"nodeType": "YulBlock",
															"src": "1419:117:5",
															"statements": [
																{
																	"nativeSrc": "1434:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:5"
																				},
																				"nativeSrc": "1494:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:5"
																		},
																		"nativeSrc": "1473:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:5",
															"nodeType": "YulBlock",
															"src": "1546:118:5",
															"statements": [
																{
																	"nativeSrc": "1561:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:5"
																				},
																				"nativeSrc": "1622:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:5"
																		},
																		"nativeSrc": "1601:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:5",
														"nodeType": "YulTypedName",
														"src": "1242:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:5",
														"nodeType": "YulTypedName",
														"src": "1253:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:5",
														"nodeType": "YulTypedName",
														"src": "1265:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:5",
														"nodeType": "YulTypedName",
														"src": "1273:6:5",
														"type": ""
													}
												],
												"src": "1197:474:5"
											},
											{
												"body": {
													"nativeSrc": "1720:43:5",
													"nodeType": "YulBlock",
													"src": "1720:43:5",
													"statements": [
														{
															"nativeSrc": "1730:27:5",
															"nodeType": "YulAssignment",
															"src": "1730:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1745:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1745:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1752:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1752:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1741:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1741:3:5"
																},
																"nativeSrc": "1741:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1741:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1730:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1730:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1677:86:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1702:5:5",
														"nodeType": "YulTypedName",
														"src": "1702:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1712:7:5",
														"nodeType": "YulTypedName",
														"src": "1712:7:5",
														"type": ""
													}
												],
												"src": "1677:86:5"
											},
											{
												"body": {
													"nativeSrc": "1810:77:5",
													"nodeType": "YulBlock",
													"src": "1810:77:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1865:16:5",
																"nodeType": "YulBlock",
																"src": "1865:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1874:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1874:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1877:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1877:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1867:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1867:6:5"
																			},
																			"nativeSrc": "1867:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1867:12:5"
																		},
																		"nativeSrc": "1867:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1867:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1833:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1833:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1856:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1856:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "1840:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "1840:15:5"
																				},
																				"nativeSrc": "1840:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1840:22:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1830:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1830:2:5"
																		},
																		"nativeSrc": "1830:33:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:33:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1823:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:5"
																},
																"nativeSrc": "1823:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1823:41:5"
															},
															"nativeSrc": "1820:61:5",
															"nodeType": "YulIf",
															"src": "1820:61:5"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "1769:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1803:5:5",
														"nodeType": "YulTypedName",
														"src": "1803:5:5",
														"type": ""
													}
												],
												"src": "1769:118:5"
											},
											{
												"body": {
													"nativeSrc": "1943:85:5",
													"nodeType": "YulBlock",
													"src": "1943:85:5",
													"statements": [
														{
															"nativeSrc": "1953:29:5",
															"nodeType": "YulAssignment",
															"src": "1953:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1975:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1962:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1962:12:5"
																},
																"nativeSrc": "1962:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1962:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1953:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1953:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2016:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2016:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "1991:24:5",
																	"nodeType": "YulIdentifier",
																	"src": "1991:24:5"
																},
																"nativeSrc": "1991:31:5",
																"nodeType": "YulFunctionCall",
																"src": "1991:31:5"
															},
															"nativeSrc": "1991:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "1991:31:5"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "1893:135:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1921:6:5",
														"nodeType": "YulTypedName",
														"src": "1921:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1929:3:5",
														"nodeType": "YulTypedName",
														"src": "1929:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1937:5:5",
														"nodeType": "YulTypedName",
														"src": "1937:5:5",
														"type": ""
													}
												],
												"src": "1893:135:5"
											},
											{
												"body": {
													"nativeSrc": "2079:32:5",
													"nodeType": "YulBlock",
													"src": "2079:32:5",
													"statements": [
														{
															"nativeSrc": "2089:16:5",
															"nodeType": "YulAssignment",
															"src": "2089:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "2100:5:5",
																"nodeType": "YulIdentifier",
																"src": "2100:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2089:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2089:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2034:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2061:5:5",
														"nodeType": "YulTypedName",
														"src": "2061:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2071:7:5",
														"nodeType": "YulTypedName",
														"src": "2071:7:5",
														"type": ""
													}
												],
												"src": "2034:77:5"
											},
											{
												"body": {
													"nativeSrc": "2160:79:5",
													"nodeType": "YulBlock",
													"src": "2160:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2217:16:5",
																"nodeType": "YulBlock",
																"src": "2217:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2226:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2226:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2229:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2229:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2219:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2219:6:5"
																			},
																			"nativeSrc": "2219:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2219:12:5"
																		},
																		"nativeSrc": "2219:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2219:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2183:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2183:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2208:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2208:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2190:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2190:17:5"
																				},
																				"nativeSrc": "2190:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2190:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2180:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2180:2:5"
																		},
																		"nativeSrc": "2180:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2173:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:5"
																},
																"nativeSrc": "2173:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2173:43:5"
															},
															"nativeSrc": "2170:63:5",
															"nodeType": "YulIf",
															"src": "2170:63:5"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2117:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2153:5:5",
														"nodeType": "YulTypedName",
														"src": "2153:5:5",
														"type": ""
													}
												],
												"src": "2117:122:5"
											},
											{
												"body": {
													"nativeSrc": "2297:87:5",
													"nodeType": "YulBlock",
													"src": "2297:87:5",
													"statements": [
														{
															"nativeSrc": "2307:29:5",
															"nodeType": "YulAssignment",
															"src": "2307:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2329:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2329:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2316:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2316:12:5"
																},
																"nativeSrc": "2316:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2316:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2307:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2307:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2372:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2372:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "2345:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2345:26:5"
																},
																"nativeSrc": "2345:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2345:33:5"
															},
															"nativeSrc": "2345:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2345:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "2245:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2275:6:5",
														"nodeType": "YulTypedName",
														"src": "2275:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2283:3:5",
														"nodeType": "YulTypedName",
														"src": "2283:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2291:5:5",
														"nodeType": "YulTypedName",
														"src": "2291:5:5",
														"type": ""
													}
												],
												"src": "2245:139:5"
											},
											{
												"body": {
													"nativeSrc": "2539:904:5",
													"nodeType": "YulBlock",
													"src": "2539:904:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2586:83:5",
																"nodeType": "YulBlock",
																"src": "2586:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2588:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2588:77:5"
																			},
																			"nativeSrc": "2588:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:79:5"
																		},
																		"nativeSrc": "2588:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2588:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2560:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2560:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2569:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2569:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2556:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2556:3:5"
																		},
																		"nativeSrc": "2556:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2556:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2581:3:5",
																		"nodeType": "YulLiteral",
																		"src": "2581:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2552:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2552:3:5"
																},
																"nativeSrc": "2552:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2552:33:5"
															},
															"nativeSrc": "2549:120:5",
															"nodeType": "YulIf",
															"src": "2549:120:5"
														},
														{
															"nativeSrc": "2679:117:5",
															"nodeType": "YulBlock",
															"src": "2679:117:5",
															"statements": [
																{
																	"nativeSrc": "2694:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2694:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2708:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2708:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2698:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2698:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2723:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2723:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2758:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2758:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2769:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2769:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2754:3:5"
																				},
																				"nativeSrc": "2754:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2754:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2778:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2778:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2733:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2733:20:5"
																		},
																		"nativeSrc": "2733:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2733:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2723:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2723:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2806:118:5",
															"nodeType": "YulBlock",
															"src": "2806:118:5",
															"statements": [
																{
																	"nativeSrc": "2821:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2821:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2835:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2835:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2825:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2825:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2851:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2851:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2886:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2886:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2897:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2897:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2882:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2882:3:5"
																				},
																				"nativeSrc": "2882:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2882:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2906:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2906:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2861:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2861:20:5"
																		},
																		"nativeSrc": "2861:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2861:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2851:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2851:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2934:118:5",
															"nodeType": "YulBlock",
															"src": "2934:118:5",
															"statements": [
																{
																	"nativeSrc": "2949:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2949:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2963:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2963:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2953:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2953:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2979:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2979:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3014:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3014:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3025:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3025:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3010:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3010:3:5"
																				},
																				"nativeSrc": "3010:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3010:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3034:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3034:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2989:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2989:20:5"
																		},
																		"nativeSrc": "2989:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2989:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2979:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2979:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3062:116:5",
															"nodeType": "YulBlock",
															"src": "3062:116:5",
															"statements": [
																{
																	"nativeSrc": "3077:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3077:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3091:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3091:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3081:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3081:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3107:61:5",
																	"nodeType": "YulAssignment",
																	"src": "3107:61:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3140:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3140:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3151:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3151:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3136:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3136:3:5"
																				},
																				"nativeSrc": "3136:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3136:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3160:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3160:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "3117:18:5",
																			"nodeType": "YulIdentifier",
																			"src": "3117:18:5"
																		},
																		"nativeSrc": "3117:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3117:51:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3107:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3107:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3188:119:5",
															"nodeType": "YulBlock",
															"src": "3188:119:5",
															"statements": [
																{
																	"nativeSrc": "3203:17:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3203:17:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3217:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3217:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3207:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3207:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3234:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3234:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3269:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3269:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3280:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3280:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3265:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3265:3:5"
																				},
																				"nativeSrc": "3265:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3265:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3289:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3289:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3244:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3244:20:5"
																		},
																		"nativeSrc": "3244:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "3234:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3234:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3317:119:5",
															"nodeType": "YulBlock",
															"src": "3317:119:5",
															"statements": [
																{
																	"nativeSrc": "3332:17:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3332:17:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3346:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3346:3:5",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3336:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3336:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3363:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3363:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3398:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3398:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3409:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3409:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3394:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3394:3:5"
																				},
																				"nativeSrc": "3394:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3394:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3418:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3418:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3373:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3373:20:5"
																		},
																		"nativeSrc": "3373:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3373:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "3363:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3363:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "2390:1053:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2469:9:5",
														"nodeType": "YulTypedName",
														"src": "2469:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2480:7:5",
														"nodeType": "YulTypedName",
														"src": "2480:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2492:6:5",
														"nodeType": "YulTypedName",
														"src": "2492:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2500:6:5",
														"nodeType": "YulTypedName",
														"src": "2500:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2508:6:5",
														"nodeType": "YulTypedName",
														"src": "2508:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2516:6:5",
														"nodeType": "YulTypedName",
														"src": "2516:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2524:6:5",
														"nodeType": "YulTypedName",
														"src": "2524:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2532:6:5",
														"nodeType": "YulTypedName",
														"src": "2532:6:5",
														"type": ""
													}
												],
												"src": "2390:1053:5"
											},
											{
												"body": {
													"nativeSrc": "3515:263:5",
													"nodeType": "YulBlock",
													"src": "3515:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3561:83:5",
																"nodeType": "YulBlock",
																"src": "3561:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3563:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3563:77:5"
																			},
																			"nativeSrc": "3563:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3563:79:5"
																		},
																		"nativeSrc": "3563:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3563:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3536:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3536:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3545:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3545:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3532:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3532:3:5"
																		},
																		"nativeSrc": "3532:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3532:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3557:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3557:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3528:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3528:3:5"
																},
																"nativeSrc": "3528:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3528:32:5"
															},
															"nativeSrc": "3525:119:5",
															"nodeType": "YulIf",
															"src": "3525:119:5"
														},
														{
															"nativeSrc": "3654:117:5",
															"nodeType": "YulBlock",
															"src": "3654:117:5",
															"statements": [
																{
																	"nativeSrc": "3669:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3669:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3683:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3683:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3673:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3673:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3698:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3698:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3733:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3733:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3744:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3744:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3729:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3729:3:5"
																				},
																				"nativeSrc": "3729:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3729:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3753:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3753:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3708:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3708:20:5"
																		},
																		"nativeSrc": "3708:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3708:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3698:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3698:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3449:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3485:9:5",
														"nodeType": "YulTypedName",
														"src": "3485:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3496:7:5",
														"nodeType": "YulTypedName",
														"src": "3496:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3508:6:5",
														"nodeType": "YulTypedName",
														"src": "3508:6:5",
														"type": ""
													}
												],
												"src": "3449:329:5"
											},
											{
												"body": {
													"nativeSrc": "3849:53:5",
													"nodeType": "YulBlock",
													"src": "3849:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3866:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3866:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3889:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3889:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3871:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3871:17:5"
																		},
																		"nativeSrc": "3871:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3871:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3859:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:5"
																},
																"nativeSrc": "3859:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3859:37:5"
															},
															"nativeSrc": "3859:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3859:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3784:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3837:5:5",
														"nodeType": "YulTypedName",
														"src": "3837:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3844:3:5",
														"nodeType": "YulTypedName",
														"src": "3844:3:5",
														"type": ""
													}
												],
												"src": "3784:118:5"
											},
											{
												"body": {
													"nativeSrc": "4006:124:5",
													"nodeType": "YulBlock",
													"src": "4006:124:5",
													"statements": [
														{
															"nativeSrc": "4016:26:5",
															"nodeType": "YulAssignment",
															"src": "4016:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4028:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4028:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4039:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4039:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4024:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4024:3:5"
																},
																"nativeSrc": "4024:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4024:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4016:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4016:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4096:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4109:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4109:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4120:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4120:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4105:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4105:3:5"
																		},
																		"nativeSrc": "4105:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4105:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4052:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4052:43:5"
																},
																"nativeSrc": "4052:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4052:71:5"
															},
															"nativeSrc": "4052:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4052:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3908:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3978:9:5",
														"nodeType": "YulTypedName",
														"src": "3978:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3990:6:5",
														"nodeType": "YulTypedName",
														"src": "3990:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4001:4:5",
														"nodeType": "YulTypedName",
														"src": "4001:4:5",
														"type": ""
													}
												],
												"src": "3908:222:5"
											},
											{
												"body": {
													"nativeSrc": "4201:53:5",
													"nodeType": "YulBlock",
													"src": "4201:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4218:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4218:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4241:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4241:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4223:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4223:17:5"
																		},
																		"nativeSrc": "4223:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4223:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:5"
																},
																"nativeSrc": "4211:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4211:37:5"
															},
															"nativeSrc": "4211:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "4211:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4136:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4189:5:5",
														"nodeType": "YulTypedName",
														"src": "4189:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4196:3:5",
														"nodeType": "YulTypedName",
														"src": "4196:3:5",
														"type": ""
													}
												],
												"src": "4136:118:5"
											},
											{
												"body": {
													"nativeSrc": "4358:124:5",
													"nodeType": "YulBlock",
													"src": "4358:124:5",
													"statements": [
														{
															"nativeSrc": "4368:26:5",
															"nodeType": "YulAssignment",
															"src": "4368:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4380:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4380:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4391:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4376:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:5"
																},
																"nativeSrc": "4376:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4376:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4368:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4368:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4448:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4448:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4461:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4461:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4472:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4472:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4457:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4457:3:5"
																		},
																		"nativeSrc": "4457:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4457:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4404:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4404:43:5"
																},
																"nativeSrc": "4404:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4404:71:5"
															},
															"nativeSrc": "4404:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4404:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4260:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4330:9:5",
														"nodeType": "YulTypedName",
														"src": "4330:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4342:6:5",
														"nodeType": "YulTypedName",
														"src": "4342:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4353:4:5",
														"nodeType": "YulTypedName",
														"src": "4353:4:5",
														"type": ""
													}
												],
												"src": "4260:222:5"
											},
											{
												"body": {
													"nativeSrc": "4642:288:5",
													"nodeType": "YulBlock",
													"src": "4642:288:5",
													"statements": [
														{
															"nativeSrc": "4652:26:5",
															"nodeType": "YulAssignment",
															"src": "4652:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4664:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4664:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4675:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4675:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4660:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4660:3:5"
																},
																"nativeSrc": "4660:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4660:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4652:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4652:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4732:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4732:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4745:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4756:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4756:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4741:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:5"
																		},
																		"nativeSrc": "4741:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4688:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4688:43:5"
																},
																"nativeSrc": "4688:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4688:71:5"
															},
															"nativeSrc": "4688:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4688:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4813:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4837:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:5"
																		},
																		"nativeSrc": "4822:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4769:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4769:43:5"
																},
																"nativeSrc": "4769:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4769:72:5"
															},
															"nativeSrc": "4769:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4769:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4895:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4895:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4908:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4908:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4919:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4919:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4904:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4904:3:5"
																		},
																		"nativeSrc": "4904:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4904:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4851:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4851:43:5"
																},
																"nativeSrc": "4851:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4851:72:5"
															},
															"nativeSrc": "4851:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4851:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4488:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4598:9:5",
														"nodeType": "YulTypedName",
														"src": "4598:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4610:6:5",
														"nodeType": "YulTypedName",
														"src": "4610:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4618:6:5",
														"nodeType": "YulTypedName",
														"src": "4618:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4626:6:5",
														"nodeType": "YulTypedName",
														"src": "4626:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4637:4:5",
														"nodeType": "YulTypedName",
														"src": "4637:4:5",
														"type": ""
													}
												],
												"src": "4488:442:5"
											},
											{
												"body": {
													"nativeSrc": "4978:48:5",
													"nodeType": "YulBlock",
													"src": "4978:48:5",
													"statements": [
														{
															"nativeSrc": "4988:32:5",
															"nodeType": "YulAssignment",
															"src": "4988:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5013:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5013:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5006:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5006:6:5"
																		},
																		"nativeSrc": "5006:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5006:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4999:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4999:6:5"
																},
																"nativeSrc": "4999:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4999:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4988:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4988:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4936:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4960:5:5",
														"nodeType": "YulTypedName",
														"src": "4960:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4970:7:5",
														"nodeType": "YulTypedName",
														"src": "4970:7:5",
														"type": ""
													}
												],
												"src": "4936:90:5"
											},
											{
												"body": {
													"nativeSrc": "5072:76:5",
													"nodeType": "YulBlock",
													"src": "5072:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5126:16:5",
																"nodeType": "YulBlock",
																"src": "5126:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5135:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5135:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5138:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5138:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5128:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5128:6:5"
																			},
																			"nativeSrc": "5128:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5128:12:5"
																		},
																		"nativeSrc": "5128:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5128:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5095:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5095:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5117:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5117:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5102:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "5102:14:5"
																				},
																				"nativeSrc": "5102:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5102:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5092:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5092:2:5"
																		},
																		"nativeSrc": "5092:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5092:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5085:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5085:6:5"
																},
																"nativeSrc": "5085:40:5",
																"nodeType": "YulFunctionCall",
																"src": "5085:40:5"
															},
															"nativeSrc": "5082:60:5",
															"nodeType": "YulIf",
															"src": "5082:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5032:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5065:5:5",
														"nodeType": "YulTypedName",
														"src": "5065:5:5",
														"type": ""
													}
												],
												"src": "5032:116:5"
											},
											{
												"body": {
													"nativeSrc": "5214:77:5",
													"nodeType": "YulBlock",
													"src": "5214:77:5",
													"statements": [
														{
															"nativeSrc": "5224:22:5",
															"nodeType": "YulAssignment",
															"src": "5224:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5239:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5233:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5233:5:5"
																},
																"nativeSrc": "5233:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5233:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5224:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5224:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5279:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5279:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5255:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "5255:23:5"
																},
																"nativeSrc": "5255:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5255:30:5"
															},
															"nativeSrc": "5255:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5255:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5154:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5192:6:5",
														"nodeType": "YulTypedName",
														"src": "5192:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5200:3:5",
														"nodeType": "YulTypedName",
														"src": "5200:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5208:5:5",
														"nodeType": "YulTypedName",
														"src": "5208:5:5",
														"type": ""
													}
												],
												"src": "5154:137:5"
											},
											{
												"body": {
													"nativeSrc": "5371:271:5",
													"nodeType": "YulBlock",
													"src": "5371:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5417:83:5",
																"nodeType": "YulBlock",
																"src": "5417:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5419:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5419:77:5"
																			},
																			"nativeSrc": "5419:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5419:79:5"
																		},
																		"nativeSrc": "5419:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5419:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5392:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5392:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5401:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5401:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5388:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5388:3:5"
																		},
																		"nativeSrc": "5388:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5388:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5413:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5384:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5384:3:5"
																},
																"nativeSrc": "5384:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5384:32:5"
															},
															"nativeSrc": "5381:119:5",
															"nodeType": "YulIf",
															"src": "5381:119:5"
														},
														{
															"nativeSrc": "5510:125:5",
															"nodeType": "YulBlock",
															"src": "5510:125:5",
															"statements": [
																{
																	"nativeSrc": "5525:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5525:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5539:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5539:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5529:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5529:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5554:71:5",
																	"nodeType": "YulAssignment",
																	"src": "5554:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5597:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5597:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5608:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5608:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5593:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5593:3:5"
																				},
																				"nativeSrc": "5593:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5593:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5617:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5564:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "5564:28:5"
																		},
																		"nativeSrc": "5564:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5564:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5554:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5554:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5297:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5341:9:5",
														"nodeType": "YulTypedName",
														"src": "5341:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5352:7:5",
														"nodeType": "YulTypedName",
														"src": "5352:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5364:6:5",
														"nodeType": "YulTypedName",
														"src": "5364:6:5",
														"type": ""
													}
												],
												"src": "5297:345:5"
											},
											{
												"body": {
													"nativeSrc": "5744:73:5",
													"nodeType": "YulBlock",
													"src": "5744:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5761:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5761:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5766:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5766:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5754:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5754:6:5"
																},
																"nativeSrc": "5754:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5754:19:5"
															},
															"nativeSrc": "5754:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "5754:19:5"
														},
														{
															"nativeSrc": "5782:29:5",
															"nodeType": "YulAssignment",
															"src": "5782:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5801:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5801:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5806:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5806:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5797:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5797:3:5"
																},
																"nativeSrc": "5797:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5797:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5782:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "5782:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5648:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5716:3:5",
														"nodeType": "YulTypedName",
														"src": "5716:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5721:6:5",
														"nodeType": "YulTypedName",
														"src": "5721:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5732:11:5",
														"nodeType": "YulTypedName",
														"src": "5732:11:5",
														"type": ""
													}
												],
												"src": "5648:169:5"
											},
											{
												"body": {
													"nativeSrc": "5929:63:5",
													"nodeType": "YulBlock",
													"src": "5929:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5951:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5951:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5959:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5959:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5947:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5947:3:5"
																		},
																		"nativeSrc": "5947:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5947:14:5"
																	},
																	{
																		"hexValue": "5472616e736665722066726f6d206572726f72",
																		"kind": "string",
																		"nativeSrc": "5963:21:5",
																		"nodeType": "YulLiteral",
																		"src": "5963:21:5",
																		"type": "",
																		"value": "Transfer from error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5940:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:5"
																},
																"nativeSrc": "5940:45:5",
																"nodeType": "YulFunctionCall",
																"src": "5940:45:5"
															},
															"nativeSrc": "5940:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "5940:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
												"nativeSrc": "5823:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5921:6:5",
														"nodeType": "YulTypedName",
														"src": "5921:6:5",
														"type": ""
													}
												],
												"src": "5823:169:5"
											},
											{
												"body": {
													"nativeSrc": "6144:220:5",
													"nodeType": "YulBlock",
													"src": "6144:220:5",
													"statements": [
														{
															"nativeSrc": "6154:74:5",
															"nodeType": "YulAssignment",
															"src": "6154:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6220:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6220:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6225:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6225:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6161:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6161:58:5"
																},
																"nativeSrc": "6161:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6161:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6154:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6154:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6326:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6326:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
																	"nativeSrc": "6237:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6237:88:5"
																},
																"nativeSrc": "6237:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6237:93:5"
															},
															"nativeSrc": "6237:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6237:93:5"
														},
														{
															"nativeSrc": "6339:19:5",
															"nodeType": "YulAssignment",
															"src": "6339:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6350:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6350:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6355:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6355:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6346:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6346:3:5"
																},
																"nativeSrc": "6346:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6346:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6339:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5998:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6132:3:5",
														"nodeType": "YulTypedName",
														"src": "6132:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6140:3:5",
														"nodeType": "YulTypedName",
														"src": "6140:3:5",
														"type": ""
													}
												],
												"src": "5998:366:5"
											},
											{
												"body": {
													"nativeSrc": "6541:248:5",
													"nodeType": "YulBlock",
													"src": "6541:248:5",
													"statements": [
														{
															"nativeSrc": "6551:26:5",
															"nodeType": "YulAssignment",
															"src": "6551:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6563:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6563:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6574:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6574:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6559:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6559:3:5"
																},
																"nativeSrc": "6559:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6559:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6551:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6551:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6598:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6598:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6609:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6609:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6594:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6594:3:5"
																		},
																		"nativeSrc": "6594:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6594:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6617:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6617:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6623:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6623:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6613:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6613:3:5"
																		},
																		"nativeSrc": "6613:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6613:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6587:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6587:6:5"
																},
																"nativeSrc": "6587:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6587:47:5"
															},
															"nativeSrc": "6587:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6587:47:5"
														},
														{
															"nativeSrc": "6643:139:5",
															"nodeType": "YulAssignment",
															"src": "6643:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6777:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6777:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6651:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6651:124:5"
																},
																"nativeSrc": "6651:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6651:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6643:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6643:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6370:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6521:9:5",
														"nodeType": "YulTypedName",
														"src": "6521:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6536:4:5",
														"nodeType": "YulTypedName",
														"src": "6536:4:5",
														"type": ""
													}
												],
												"src": "6370:419:5"
											},
											{
												"body": {
													"nativeSrc": "6823:152:5",
													"nodeType": "YulBlock",
													"src": "6823:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6840:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6840:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6843:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6843:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6833:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6833:6:5"
																},
																"nativeSrc": "6833:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6833:88:5"
															},
															"nativeSrc": "6833:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6833:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6937:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6937:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6940:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6940:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6930:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6930:6:5"
																},
																"nativeSrc": "6930:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6930:15:5"
															},
															"nativeSrc": "6930:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6930:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6961:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6961:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6964:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6964:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6954:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6954:6:5"
																},
																"nativeSrc": "6954:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6954:15:5"
															},
															"nativeSrc": "6954:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6954:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6795:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6795:180:5"
											},
											{
												"body": {
													"nativeSrc": "7025:147:5",
													"nodeType": "YulBlock",
													"src": "7025:147:5",
													"statements": [
														{
															"nativeSrc": "7035:25:5",
															"nodeType": "YulAssignment",
															"src": "7035:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7058:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7058:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7040:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7040:17:5"
																},
																"nativeSrc": "7040:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7040:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7035:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7035:1:5"
																}
															]
														},
														{
															"nativeSrc": "7069:25:5",
															"nodeType": "YulAssignment",
															"src": "7069:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7092:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7092:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7074:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7074:17:5"
																},
																"nativeSrc": "7074:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7074:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7069:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7069:1:5"
																}
															]
														},
														{
															"nativeSrc": "7103:16:5",
															"nodeType": "YulAssignment",
															"src": "7103:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7114:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7114:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7117:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7117:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7110:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7110:3:5"
																},
																"nativeSrc": "7110:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7110:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7103:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7103:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7143:22:5",
																"nodeType": "YulBlock",
																"src": "7143:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7145:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7145:16:5"
																			},
																			"nativeSrc": "7145:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7145:18:5"
																		},
																		"nativeSrc": "7145:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7145:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7135:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7135:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7138:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7138:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7132:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7132:2:5"
																},
																"nativeSrc": "7132:10:5",
																"nodeType": "YulFunctionCall",
																"src": "7132:10:5"
															},
															"nativeSrc": "7129:36:5",
															"nodeType": "YulIf",
															"src": "7129:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6981:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7012:1:5",
														"nodeType": "YulTypedName",
														"src": "7012:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7015:1:5",
														"nodeType": "YulTypedName",
														"src": "7015:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7021:3:5",
														"nodeType": "YulTypedName",
														"src": "7021:3:5",
														"type": ""
													}
												],
												"src": "6981:191:5"
											},
											{
												"body": {
													"nativeSrc": "7239:51:5",
													"nodeType": "YulBlock",
													"src": "7239:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7256:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7256:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7277:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7277:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7261:15:5",
																			"nodeType": "YulIdentifier",
																			"src": "7261:15:5"
																		},
																		"nativeSrc": "7261:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7261:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7249:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7249:6:5"
																},
																"nativeSrc": "7249:35:5",
																"nodeType": "YulFunctionCall",
																"src": "7249:35:5"
															},
															"nativeSrc": "7249:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "7249:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7178:112:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7227:5:5",
														"nodeType": "YulTypedName",
														"src": "7227:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7234:3:5",
														"nodeType": "YulTypedName",
														"src": "7234:3:5",
														"type": ""
													}
												],
												"src": "7178:112:5"
											},
											{
												"body": {
													"nativeSrc": "7361:53:5",
													"nodeType": "YulBlock",
													"src": "7361:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7378:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7378:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7401:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7401:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "7383:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "7383:17:5"
																		},
																		"nativeSrc": "7383:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7383:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7371:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7371:6:5"
																},
																"nativeSrc": "7371:37:5",
																"nodeType": "YulFunctionCall",
																"src": "7371:37:5"
															},
															"nativeSrc": "7371:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "7371:37:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "7296:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7349:5:5",
														"nodeType": "YulTypedName",
														"src": "7349:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7356:3:5",
														"nodeType": "YulTypedName",
														"src": "7356:3:5",
														"type": ""
													}
												],
												"src": "7296:118:5"
											},
											{
												"body": {
													"nativeSrc": "7682:616:5",
													"nodeType": "YulBlock",
													"src": "7682:616:5",
													"statements": [
														{
															"nativeSrc": "7692:27:5",
															"nodeType": "YulAssignment",
															"src": "7692:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7704:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7704:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7715:3:5",
																		"nodeType": "YulLiteral",
																		"src": "7715:3:5",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7700:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7700:3:5"
																},
																"nativeSrc": "7700:19:5",
																"nodeType": "YulFunctionCall",
																"src": "7700:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7692:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7692:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7773:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7773:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7786:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7786:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7797:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7797:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7782:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7782:3:5"
																		},
																		"nativeSrc": "7782:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7782:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7729:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7729:43:5"
																},
																"nativeSrc": "7729:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7729:71:5"
															},
															"nativeSrc": "7729:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7729:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7854:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7854:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7867:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7867:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7878:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7878:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7863:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7863:3:5"
																		},
																		"nativeSrc": "7863:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7863:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7810:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7810:43:5"
																},
																"nativeSrc": "7810:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7810:72:5"
															},
															"nativeSrc": "7810:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7810:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7936:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7936:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7949:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7949:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7960:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7960:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7945:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7945:3:5"
																		},
																		"nativeSrc": "7945:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7945:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7892:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7892:43:5"
																},
																"nativeSrc": "7892:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7892:72:5"
															},
															"nativeSrc": "7892:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7892:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8018:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8018:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8031:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8031:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8042:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8042:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8027:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8027:3:5"
																		},
																		"nativeSrc": "8027:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8027:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7974:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7974:43:5"
																},
																"nativeSrc": "7974:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7974:72:5"
															},
															"nativeSrc": "7974:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7974:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8096:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8096:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8109:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8109:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8120:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8120:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8105:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8105:3:5"
																		},
																		"nativeSrc": "8105:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8105:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "8056:39:5",
																	"nodeType": "YulIdentifier",
																	"src": "8056:39:5"
																},
																"nativeSrc": "8056:69:5",
																"nodeType": "YulFunctionCall",
																"src": "8056:69:5"
															},
															"nativeSrc": "8056:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "8056:69:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8179:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8179:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8192:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8192:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8203:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8203:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8188:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8188:3:5"
																		},
																		"nativeSrc": "8188:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8188:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8135:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8135:43:5"
																},
																"nativeSrc": "8135:73:5",
																"nodeType": "YulFunctionCall",
																"src": "8135:73:5"
															},
															"nativeSrc": "8135:73:5",
															"nodeType": "YulExpressionStatement",
															"src": "8135:73:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "8262:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8262:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8275:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8275:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8286:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8286:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8271:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8271:3:5"
																		},
																		"nativeSrc": "8271:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8271:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8218:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8218:43:5"
																},
																"nativeSrc": "8218:73:5",
																"nodeType": "YulFunctionCall",
																"src": "8218:73:5"
															},
															"nativeSrc": "8218:73:5",
															"nodeType": "YulExpressionStatement",
															"src": "8218:73:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "7420:878:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7606:9:5",
														"nodeType": "YulTypedName",
														"src": "7606:9:5",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7618:6:5",
														"nodeType": "YulTypedName",
														"src": "7618:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7626:6:5",
														"nodeType": "YulTypedName",
														"src": "7626:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7634:6:5",
														"nodeType": "YulTypedName",
														"src": "7634:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7642:6:5",
														"nodeType": "YulTypedName",
														"src": "7642:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7650:6:5",
														"nodeType": "YulTypedName",
														"src": "7650:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7658:6:5",
														"nodeType": "YulTypedName",
														"src": "7658:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7666:6:5",
														"nodeType": "YulTypedName",
														"src": "7666:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7677:4:5",
														"nodeType": "YulTypedName",
														"src": "7677:4:5",
														"type": ""
													}
												],
												"src": "7420:878:5"
											},
											{
												"body": {
													"nativeSrc": "8367:80:5",
													"nodeType": "YulBlock",
													"src": "8367:80:5",
													"statements": [
														{
															"nativeSrc": "8377:22:5",
															"nodeType": "YulAssignment",
															"src": "8377:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8392:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8392:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8386:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8386:5:5"
																},
																"nativeSrc": "8386:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8386:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8377:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8377:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8435:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8435:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8408:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "8408:26:5"
																},
																"nativeSrc": "8408:33:5",
																"nodeType": "YulFunctionCall",
																"src": "8408:33:5"
															},
															"nativeSrc": "8408:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "8408:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8304:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8345:6:5",
														"nodeType": "YulTypedName",
														"src": "8345:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8353:3:5",
														"nodeType": "YulTypedName",
														"src": "8353:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8361:5:5",
														"nodeType": "YulTypedName",
														"src": "8361:5:5",
														"type": ""
													}
												],
												"src": "8304:143:5"
											},
											{
												"body": {
													"nativeSrc": "8530:274:5",
													"nodeType": "YulBlock",
													"src": "8530:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8576:83:5",
																"nodeType": "YulBlock",
																"src": "8576:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8578:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8578:77:5"
																			},
																			"nativeSrc": "8578:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8578:79:5"
																		},
																		"nativeSrc": "8578:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8578:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8551:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8551:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8560:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8560:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8547:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8547:3:5"
																		},
																		"nativeSrc": "8547:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8547:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8572:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8572:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8543:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8543:3:5"
																},
																"nativeSrc": "8543:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8543:32:5"
															},
															"nativeSrc": "8540:119:5",
															"nodeType": "YulIf",
															"src": "8540:119:5"
														},
														{
															"nativeSrc": "8669:128:5",
															"nodeType": "YulBlock",
															"src": "8669:128:5",
															"statements": [
																{
																	"nativeSrc": "8684:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8684:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8698:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8698:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8688:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8688:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8713:74:5",
																	"nodeType": "YulAssignment",
																	"src": "8713:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8759:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8759:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8770:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8770:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8755:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8755:3:5"
																				},
																				"nativeSrc": "8755:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8755:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8779:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8779:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8723:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "8723:31:5"
																		},
																		"nativeSrc": "8723:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8723:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8713:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8713:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8453:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8500:9:5",
														"nodeType": "YulTypedName",
														"src": "8500:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8511:7:5",
														"nodeType": "YulTypedName",
														"src": "8511:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8523:6:5",
														"nodeType": "YulTypedName",
														"src": "8523:6:5",
														"type": ""
													}
												],
												"src": "8453:351:5"
											},
											{
												"body": {
													"nativeSrc": "8936:206:5",
													"nodeType": "YulBlock",
													"src": "8936:206:5",
													"statements": [
														{
															"nativeSrc": "8946:26:5",
															"nodeType": "YulAssignment",
															"src": "8946:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8958:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8958:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8969:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8969:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8954:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8954:3:5"
																},
																"nativeSrc": "8954:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8954:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8946:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8946:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9026:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9026:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9039:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9039:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9050:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9050:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9035:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9035:3:5"
																		},
																		"nativeSrc": "9035:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9035:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8982:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8982:43:5"
																},
																"nativeSrc": "8982:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8982:71:5"
															},
															"nativeSrc": "8982:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8982:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9107:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9107:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9120:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9120:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9131:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9131:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9116:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9116:3:5"
																		},
																		"nativeSrc": "9116:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9116:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9063:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9063:43:5"
																},
																"nativeSrc": "9063:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9063:72:5"
															},
															"nativeSrc": "9063:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9063:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8810:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8900:9:5",
														"nodeType": "YulTypedName",
														"src": "8900:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8912:6:5",
														"nodeType": "YulTypedName",
														"src": "8912:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8920:6:5",
														"nodeType": "YulTypedName",
														"src": "8920:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8931:4:5",
														"nodeType": "YulTypedName",
														"src": "8931:4:5",
														"type": ""
													}
												],
												"src": "8810:332:5"
											},
											{
												"body": {
													"nativeSrc": "9206:40:5",
													"nodeType": "YulBlock",
													"src": "9206:40:5",
													"statements": [
														{
															"nativeSrc": "9217:22:5",
															"nodeType": "YulAssignment",
															"src": "9217:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9233:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9233:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9227:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9227:5:5"
																},
																"nativeSrc": "9227:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9227:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9217:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9217:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9148:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9189:5:5",
														"nodeType": "YulTypedName",
														"src": "9189:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9199:6:5",
														"nodeType": "YulTypedName",
														"src": "9199:6:5",
														"type": ""
													}
												],
												"src": "9148:98:5"
											},
											{
												"body": {
													"nativeSrc": "9365:34:5",
													"nodeType": "YulBlock",
													"src": "9365:34:5",
													"statements": [
														{
															"nativeSrc": "9375:18:5",
															"nodeType": "YulAssignment",
															"src": "9375:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "9390:3:5",
																"nodeType": "YulIdentifier",
																"src": "9390:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9375:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9375:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9252:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9337:3:5",
														"nodeType": "YulTypedName",
														"src": "9337:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9342:6:5",
														"nodeType": "YulTypedName",
														"src": "9342:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9353:11:5",
														"nodeType": "YulTypedName",
														"src": "9353:11:5",
														"type": ""
													}
												],
												"src": "9252:147:5"
											},
											{
												"body": {
													"nativeSrc": "9467:77:5",
													"nodeType": "YulBlock",
													"src": "9467:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9484:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9484:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9489:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9489:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9494:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9494:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9478:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9478:5:5"
																},
																"nativeSrc": "9478:23:5",
																"nodeType": "YulFunctionCall",
																"src": "9478:23:5"
															},
															"nativeSrc": "9478:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "9478:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9521:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "9521:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9526:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9526:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9517:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9517:3:5"
																		},
																		"nativeSrc": "9517:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9517:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9535:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9535:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9510:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9510:6:5"
																},
																"nativeSrc": "9510:27:5",
																"nodeType": "YulFunctionCall",
																"src": "9510:27:5"
															},
															"nativeSrc": "9510:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "9510:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9405:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9449:3:5",
														"nodeType": "YulTypedName",
														"src": "9449:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9454:3:5",
														"nodeType": "YulTypedName",
														"src": "9454:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9459:6:5",
														"nodeType": "YulTypedName",
														"src": "9459:6:5",
														"type": ""
													}
												],
												"src": "9405:139:5"
											},
											{
												"body": {
													"nativeSrc": "9658:278:5",
													"nodeType": "YulBlock",
													"src": "9658:278:5",
													"statements": [
														{
															"nativeSrc": "9668:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9668:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9714:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9714:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "9682:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "9682:31:5"
																},
																"nativeSrc": "9682:38:5",
																"nodeType": "YulFunctionCall",
																"src": "9682:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9672:6:5",
																	"nodeType": "YulTypedName",
																	"src": "9672:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9729:95:5",
															"nodeType": "YulAssignment",
															"src": "9729:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9812:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9812:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9817:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9817:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9736:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "9736:75:5"
																},
																"nativeSrc": "9736:88:5",
																"nodeType": "YulFunctionCall",
																"src": "9736:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9729:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9729:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9872:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9872:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9879:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9879:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9868:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9868:3:5"
																		},
																		"nativeSrc": "9868:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9868:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9886:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9886:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9891:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9891:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9833:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "9833:34:5"
																},
																"nativeSrc": "9833:65:5",
																"nodeType": "YulFunctionCall",
																"src": "9833:65:5"
															},
															"nativeSrc": "9833:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "9833:65:5"
														},
														{
															"nativeSrc": "9907:23:5",
															"nodeType": "YulAssignment",
															"src": "9907:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9918:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9918:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9923:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9923:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9914:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9914:3:5"
																},
																"nativeSrc": "9914:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9914:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9907:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9550:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9639:5:5",
														"nodeType": "YulTypedName",
														"src": "9639:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9646:3:5",
														"nodeType": "YulTypedName",
														"src": "9646:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9654:3:5",
														"nodeType": "YulTypedName",
														"src": "9654:3:5",
														"type": ""
													}
												],
												"src": "9550:386:5"
											},
											{
												"body": {
													"nativeSrc": "10076:137:5",
													"nodeType": "YulBlock",
													"src": "10076:137:5",
													"statements": [
														{
															"nativeSrc": "10087:100:5",
															"nodeType": "YulAssignment",
															"src": "10087:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10174:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10174:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10183:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10183:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10094:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "10094:79:5"
																},
																"nativeSrc": "10094:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10094:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10087:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:5"
																}
															]
														},
														{
															"nativeSrc": "10197:10:5",
															"nodeType": "YulAssignment",
															"src": "10197:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "10204:3:5",
																"nodeType": "YulIdentifier",
																"src": "10204:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10197:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10197:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9942:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10055:3:5",
														"nodeType": "YulTypedName",
														"src": "10055:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10061:6:5",
														"nodeType": "YulTypedName",
														"src": "10061:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10072:3:5",
														"nodeType": "YulTypedName",
														"src": "10072:3:5",
														"type": ""
													}
												],
												"src": "9942:271:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer from error\")\n\n    }\n\n    function abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"667": [
									{
										"length": 32,
										"start": 323
									},
									{
										"length": 32,
										"start": 431
									},
									{
										"length": 32,
										"start": 737
									},
									{
										"length": 32,
										"start": 930
									},
									{
										"length": 32,
										"start": 1091
									},
									{
										"length": 32,
										"start": 1175
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80633ccfd60b1461006457806347e7ef241461006e5780638f7b1bca1461008a578063cb13cddb146100a6578063e5225381146100d6578063fc0c546a146100e0575b5f80fd5b61006c6100fe565b005b6100886004803603810190610083919061080d565b6101ad565b005b6100a4600480360381019061009f91906108b4565b6102df565b005b6100c060048036038101906100bb919061093d565b610383565b6040516100cd9190610977565b60405180910390f35b6100de610397565b005b6100e8610495565b6040516100f5919061099f565b60405180910390f35b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506101697f000000000000000000000000000000000000000000000000000000000000000033836104b9565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161020a939291906109b8565b6020604051808303815f875af1158015610226573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024a9190610a22565b610289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028090610aa7565b60405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102d49190610af2565b925050819055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d505accf333088888888886040518863ffffffff1660e01b81526004016103449796959493929190610b43565b5f604051808303815f87803b15801561035b575f80fd5b505af115801561036d573d5f803e3d5ffd5b5050505061037b86866101ad565b505050505050565b5f602052805f5260405f205f915090505481565b674563918244f400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103f9919061099f565b602060405180830381865afa158015610414573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104389190610bc4565b1115610493576104927f000000000000000000000000000000000000000000000000000000000000000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16674563918244f400006104b9565b5b565b7f000000000000000000000000000000000000000000000000000000000000000081565b610533838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016104ec929190610bef565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610538565b505050565b5f610562828473ffffffffffffffffffffffffffffffffffffffff166105cd90919063ffffffff16565b90505f8151141580156105865750808060200190518101906105849190610a22565b155b156105c857826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016105bf919061099f565b60405180910390fd5b505050565b60606105da83835f6105e2565b905092915050565b60608147101561062957306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610620919061099f565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516106519190610c68565b5f6040518083038185875af1925050503d805f811461068b576040519150601f19603f3d011682016040523d82523d5f602084013e610690565b606091505b50915091506106a08683836106ab565b925050509392505050565b6060826106c0576106bb82610738565b610730565b5f82511480156106e657505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561072857836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161071f919061099f565b60405180910390fd5b819050610731565b5b9392505050565b5f8151111561074a5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107a982610780565b9050919050565b6107b98161079f565b81146107c3575f80fd5b50565b5f813590506107d4816107b0565b92915050565b5f819050919050565b6107ec816107da565b81146107f6575f80fd5b50565b5f81359050610807816107e3565b92915050565b5f80604083850312156108235761082261077c565b5b5f610830858286016107c6565b9250506020610841858286016107f9565b9150509250929050565b5f60ff82169050919050565b6108608161084b565b811461086a575f80fd5b50565b5f8135905061087b81610857565b92915050565b5f819050919050565b61089381610881565b811461089d575f80fd5b50565b5f813590506108ae8161088a565b92915050565b5f805f805f8060c087890312156108ce576108cd61077c565b5b5f6108db89828a016107c6565b96505060206108ec89828a016107f9565b95505060406108fd89828a016107f9565b945050606061090e89828a0161086d565b935050608061091f89828a016108a0565b92505060a061093089828a016108a0565b9150509295509295509295565b5f602082840312156109525761095161077c565b5b5f61095f848285016107c6565b91505092915050565b610971816107da565b82525050565b5f60208201905061098a5f830184610968565b92915050565b6109998161079f565b82525050565b5f6020820190506109b25f830184610990565b92915050565b5f6060820190506109cb5f830186610990565b6109d86020830185610990565b6109e56040830184610968565b949350505050565b5f8115159050919050565b610a01816109ed565b8114610a0b575f80fd5b50565b5f81519050610a1c816109f8565b92915050565b5f60208284031215610a3757610a3661077c565b5b5f610a4484828501610a0e565b91505092915050565b5f82825260208201905092915050565b7f5472616e736665722066726f6d206572726f72000000000000000000000000005f82015250565b5f610a91601383610a4d565b9150610a9c82610a5d565b602082019050919050565b5f6020820190508181035f830152610abe81610a85565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610afc826107da565b9150610b07836107da565b9250828201905080821115610b1f57610b1e610ac5565b5b92915050565b610b2e8161084b565b82525050565b610b3d81610881565b82525050565b5f60e082019050610b565f83018a610990565b610b636020830189610990565b610b706040830188610968565b610b7d6060830187610968565b610b8a6080830186610b25565b610b9760a0830185610b34565b610ba460c0830184610b34565b98975050505050505050565b5f81519050610bbe816107e3565b92915050565b5f60208284031215610bd957610bd861077c565b5b5f610be684828501610bb0565b91505092915050565b5f604082019050610c025f830185610990565b610c0f6020830184610968565b9392505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610c4282610c16565b610c4c8185610c20565b9350610c5c818560208601610c2a565b80840191505092915050565b5f610c738284610c38565b91508190509291505056fea2646970667358221220450fd2787f40d82c5e864edd7f813d54e5d49715baec457f027e670e5d64f6e864736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x8F7B1BCA EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xCB13CDDB EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xE5225381 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH2 0x1AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x397 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x169 PUSH32 0x0 CALLER DUP4 PUSH2 0x4B9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP1 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB43 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x37B DUP7 DUP7 PUSH2 0x1AD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH8 0x4563918244F40000 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x414 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST GT ISZERO PUSH2 0x493 JUMPI PUSH2 0x492 PUSH32 0x0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0x4563918244F40000 PUSH2 0x4B9 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x533 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4EC SWAP3 SWAP2 SWAP1 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x538 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x562 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5CD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5C8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5DA DUP4 DUP4 PUSH0 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x629 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x690 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x6A0 DUP7 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x6C0 JUMPI PUSH2 0x6BB DUP3 PUSH2 0x738 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x6E6 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x728 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x731 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x74A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7A9 DUP3 PUSH2 0x780 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B9 DUP2 PUSH2 0x79F JUMP JUMPDEST DUP2 EQ PUSH2 0x7C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7D4 DUP2 PUSH2 0x7B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EC DUP2 PUSH2 0x7DA JUMP JUMPDEST DUP2 EQ PUSH2 0x7F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x807 DUP2 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x823 JUMPI PUSH2 0x822 PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x830 DUP6 DUP3 DUP7 ADD PUSH2 0x7C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x841 DUP6 DUP3 DUP7 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x860 DUP2 PUSH2 0x84B JUMP JUMPDEST DUP2 EQ PUSH2 0x86A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x87B DUP2 PUSH2 0x857 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x893 DUP2 PUSH2 0x881 JUMP JUMPDEST DUP2 EQ PUSH2 0x89D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8AE DUP2 PUSH2 0x88A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8DB DUP10 DUP3 DUP11 ADD PUSH2 0x7C6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x8EC DUP10 DUP3 DUP11 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x8FD DUP10 DUP3 DUP11 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x90E DUP10 DUP3 DUP11 ADD PUSH2 0x86D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x91F DUP10 DUP3 DUP11 ADD PUSH2 0x8A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x930 DUP10 DUP3 DUP11 ADD PUSH2 0x8A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x952 JUMPI PUSH2 0x951 PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x95F DUP5 DUP3 DUP6 ADD PUSH2 0x7C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x971 DUP2 PUSH2 0x7DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98A PUSH0 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x999 DUP2 PUSH2 0x79F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9CB PUSH0 DUP4 ADD DUP7 PUSH2 0x990 JUMP JUMPDEST PUSH2 0x9D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x990 JUMP JUMPDEST PUSH2 0x9E5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA01 DUP2 PUSH2 0x9ED JUMP JUMPDEST DUP2 EQ PUSH2 0xA0B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA1C DUP2 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA37 JUMPI PUSH2 0xA36 PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA44 DUP5 DUP3 DUP6 ADD PUSH2 0xA0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E736665722066726F6D206572726F7200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA91 PUSH1 0x13 DUP4 PUSH2 0xA4D JUMP JUMPDEST SWAP2 POP PUSH2 0xA9C DUP3 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xABE DUP2 PUSH2 0xA85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAFC DUP3 PUSH2 0x7DA JUMP JUMPDEST SWAP2 POP PUSH2 0xB07 DUP4 PUSH2 0x7DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB1F JUMPI PUSH2 0xB1E PUSH2 0xAC5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2E DUP2 PUSH2 0x84B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3D DUP2 PUSH2 0x881 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xB56 PUSH0 DUP4 ADD DUP11 PUSH2 0x990 JUMP JUMPDEST PUSH2 0xB63 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x990 JUMP JUMPDEST PUSH2 0xB70 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x968 JUMP JUMPDEST PUSH2 0xB7D PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x968 JUMP JUMPDEST PUSH2 0xB8A PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0xB97 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0xBA4 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xB34 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBBE DUP2 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD9 JUMPI PUSH2 0xBD8 PUSH2 0x77C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE6 DUP5 DUP3 DUP6 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC02 PUSH0 DUP4 ADD DUP6 PUSH2 0x990 JUMP JUMPDEST PUSH2 0xC0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC42 DUP3 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0xC4C DUP2 DUP6 PUSH2 0xC20 JUMP JUMPDEST SWAP4 POP PUSH2 0xC5C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC2A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC73 DUP3 DUP5 PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xF 0xD2 PUSH25 0x7F40D82C5E864EDD7F813D54E5D49715BAEC457F027E670E5D PUSH5 0xF6E864736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "225:1026:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:183;;;:::i;:::-;;443:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;646:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;245:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1075:173;;;:::i;:::-;;292:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;885:183;924:11;938:9;:21;948:10;938:21;;;;;;;;;;;;;;;;924:35;;969:57;999:5;1007:10;1019:6;969:22;:57::i;:::-;1060:1;1036:9;:21;1046:10;1036:21;;;;;;;;;;;;;;;:25;;;;914:154;885:183::o;443:196::-;519:5;512:26;;;539:10;559:4;566:6;512:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;504:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;626:6;607:9;:15;617:4;607:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;443:196;;:::o;646:233::-;774:5;761:26;;;788:10;808:4;815:6;823:8;833:1;836;839;761:80;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:21;859:4;865:6;851:7;:21::i;:::-;646:233;;;;;;:::o;245:41::-;;;;;;;;;;;;;;;;;:::o;1075:173::-;1157:4;1123:5;1116:23;;;1148:4;1116:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;1113:129;;;1177:50;1207:5;1215;;;;;;;;;;;1222:4;1177:22;:50::i;:::-;1113:129;1075:173::o;292:30::-;;;:::o;1303:160:2:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:86::-;1712:7;1752:4;1745:5;1741:16;1730:27;;1677:86;;;:::o;1769:118::-;1840:22;1856:5;1840:22;:::i;:::-;1833:5;1830:33;1820:61;;1877:1;1874;1867:12;1820:61;1769:118;:::o;1893:135::-;1937:5;1975:6;1962:20;1953:29;;1991:31;2016:5;1991:31;:::i;:::-;1893:135;;;;:::o;2034:77::-;2071:7;2100:5;2089:16;;2034:77;;;:::o;2117:122::-;2190:24;2208:5;2190:24;:::i;:::-;2183:5;2180:35;2170:63;;2229:1;2226;2219:12;2170:63;2117:122;:::o;2245:139::-;2291:5;2329:6;2316:20;2307:29;;2345:33;2372:5;2345:33;:::i;:::-;2245:139;;;;:::o;2390:1053::-;2492:6;2500;2508;2516;2524;2532;2581:3;2569:9;2560:7;2556:23;2552:33;2549:120;;;2588:79;;:::i;:::-;2549:120;2708:1;2733:53;2778:7;2769:6;2758:9;2754:22;2733:53;:::i;:::-;2723:63;;2679:117;2835:2;2861:53;2906:7;2897:6;2886:9;2882:22;2861:53;:::i;:::-;2851:63;;2806:118;2963:2;2989:53;3034:7;3025:6;3014:9;3010:22;2989:53;:::i;:::-;2979:63;;2934:118;3091:2;3117:51;3160:7;3151:6;3140:9;3136:22;3117:51;:::i;:::-;3107:61;;3062:116;3217:3;3244:53;3289:7;3280:6;3269:9;3265:22;3244:53;:::i;:::-;3234:63;;3188:119;3346:3;3373:53;3418:7;3409:6;3398:9;3394:22;3373:53;:::i;:::-;3363:63;;3317:119;2390:1053;;;;;;;;:::o;3449:329::-;3508:6;3557:2;3545:9;3536:7;3532:23;3528:32;3525:119;;;3563:79;;:::i;:::-;3525:119;3683:1;3708:53;3753:7;3744:6;3733:9;3729:22;3708:53;:::i;:::-;3698:63;;3654:117;3449:329;;;;:::o;3784:118::-;3871:24;3889:5;3871:24;:::i;:::-;3866:3;3859:37;3784:118;;:::o;3908:222::-;4001:4;4039:2;4028:9;4024:18;4016:26;;4052:71;4120:1;4109:9;4105:17;4096:6;4052:71;:::i;:::-;3908:222;;;;:::o;4136:118::-;4223:24;4241:5;4223:24;:::i;:::-;4218:3;4211:37;4136:118;;:::o;4260:222::-;4353:4;4391:2;4380:9;4376:18;4368:26;;4404:71;4472:1;4461:9;4457:17;4448:6;4404:71;:::i;:::-;4260:222;;;;:::o;4488:442::-;4637:4;4675:2;4664:9;4660:18;4652:26;;4688:71;4756:1;4745:9;4741:17;4732:6;4688:71;:::i;:::-;4769:72;4837:2;4826:9;4822:18;4813:6;4769:72;:::i;:::-;4851;4919:2;4908:9;4904:18;4895:6;4851:72;:::i;:::-;4488:442;;;;;;:::o;4936:90::-;4970:7;5013:5;5006:13;4999:21;4988:32;;4936:90;;;:::o;5032:116::-;5102:21;5117:5;5102:21;:::i;:::-;5095:5;5092:32;5082:60;;5138:1;5135;5128:12;5082:60;5032:116;:::o;5154:137::-;5208:5;5239:6;5233:13;5224:22;;5255:30;5279:5;5255:30;:::i;:::-;5154:137;;;;:::o;5297:345::-;5364:6;5413:2;5401:9;5392:7;5388:23;5384:32;5381:119;;;5419:79;;:::i;:::-;5381:119;5539:1;5564:61;5617:7;5608:6;5597:9;5593:22;5564:61;:::i;:::-;5554:71;;5510:125;5297:345;;;;:::o;5648:169::-;5732:11;5766:6;5761:3;5754:19;5806:4;5801:3;5797:14;5782:29;;5648:169;;;;:::o;5823:::-;5963:21;5959:1;5951:6;5947:14;5940:45;5823:169;:::o;5998:366::-;6140:3;6161:67;6225:2;6220:3;6161:67;:::i;:::-;6154:74;;6237:93;6326:3;6237:93;:::i;:::-;6355:2;6350:3;6346:12;6339:19;;5998:366;;;:::o;6370:419::-;6536:4;6574:2;6563:9;6559:18;6551:26;;6623:9;6617:4;6613:20;6609:1;6598:9;6594:17;6587:47;6651:131;6777:4;6651:131;:::i;:::-;6643:139;;6370:419;;;:::o;6795:180::-;6843:77;6840:1;6833:88;6940:4;6937:1;6930:15;6964:4;6961:1;6954:15;6981:191;7021:3;7040:20;7058:1;7040:20;:::i;:::-;7035:25;;7074:20;7092:1;7074:20;:::i;:::-;7069:25;;7117:1;7114;7110:9;7103:16;;7138:3;7135:1;7132:10;7129:36;;;7145:18;;:::i;:::-;7129:36;6981:191;;;;:::o;7178:112::-;7261:22;7277:5;7261:22;:::i;:::-;7256:3;7249:35;7178:112;;:::o;7296:118::-;7383:24;7401:5;7383:24;:::i;:::-;7378:3;7371:37;7296:118;;:::o;7420:878::-;7677:4;7715:3;7704:9;7700:19;7692:27;;7729:71;7797:1;7786:9;7782:17;7773:6;7729:71;:::i;:::-;7810:72;7878:2;7867:9;7863:18;7854:6;7810:72;:::i;:::-;7892;7960:2;7949:9;7945:18;7936:6;7892:72;:::i;:::-;7974;8042:2;8031:9;8027:18;8018:6;7974:72;:::i;:::-;8056:69;8120:3;8109:9;8105:19;8096:6;8056:69;:::i;:::-;8135:73;8203:3;8192:9;8188:19;8179:6;8135:73;:::i;:::-;8218;8286:3;8275:9;8271:19;8262:6;8218:73;:::i;:::-;7420:878;;;;;;;;;;:::o;8304:143::-;8361:5;8392:6;8386:13;8377:22;;8408:33;8435:5;8408:33;:::i;:::-;8304:143;;;;:::o;8453:351::-;8523:6;8572:2;8560:9;8551:7;8547:23;8543:32;8540:119;;;8578:79;;:::i;:::-;8540:119;8698:1;8723:64;8779:7;8770:6;8759:9;8755:22;8723:64;:::i;:::-;8713:74;;8669:128;8453:351;;;;:::o;8810:332::-;8931:4;8969:2;8958:9;8954:18;8946:26;;8982:71;9050:1;9039:9;9035:17;9026:6;8982:71;:::i;:::-;9063:72;9131:2;9120:9;9116:18;9107:6;9063:72;:::i;:::-;8810:332;;;;;:::o;9148:98::-;9199:6;9233:5;9227:12;9217:22;;9148:98;;;:::o;9252:147::-;9353:11;9390:3;9375:18;;9252:147;;;;:::o;9405:139::-;9494:6;9489:3;9484;9478:23;9535:1;9526:6;9521:3;9517:16;9510:27;9405:139;;;:::o;9550:386::-;9654:3;9682:38;9714:5;9682:38;:::i;:::-;9736:88;9817:6;9812:3;9736:88;:::i;:::-;9729:95;;9833:65;9891:6;9886:3;9879:4;9872:5;9868:16;9833:65;:::i;:::-;9923:6;9918:3;9914:16;9907:23;;9658:278;9550:386;;;;:::o;9942:271::-;10072:3;10094:93;10183:3;10174:6;10094:93;:::i;:::-;10087:100;;10204:3;10197:10;;9942:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "650400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"collect()": "infinite",
								"deposit(address,uint256)": "infinite",
								"deposited(address)": "2845",
								"permitDeposit(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"token()": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 436,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 436,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 436,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 349,
									"end": 436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 436,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 395,
									"end": 401,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 387,
									"end": 401,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 401,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 387,
									"end": 401,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 387,
									"end": 401,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 387,
									"end": 401,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 401,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 387,
									"end": 401,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 387,
									"end": 401,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 387,
									"end": 401,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 387,
									"end": 401,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 419,
									"end": 429,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 411,
									"end": 416,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 416,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 429,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 411,
									"end": 429,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 411,
									"end": 429,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 411,
									"end": 429,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 411,
									"end": 429,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 349,
									"end": 436,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "667"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 1251,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220450fd2787f40d82c5e864edd7f813d54e5d49715baec457f027e670e5d64f6e864736f6c63430008190033",
									".code": [
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "3CCFD60B"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "47E7EF24"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "8F7B1BCA"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "CB13CDDB"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "E5225381"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "FC0C546A"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1251,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 885,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 885,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 885,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 885,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1068,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 443,
											"end": 639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 443,
											"end": 639,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 443,
											"end": 639,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 443,
											"end": 639,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 443,
											"end": 639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 443,
											"end": 639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 646,
											"end": 879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 646,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 646,
											"end": 879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 646,
											"end": 879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 646,
											"end": 879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 646,
											"end": 879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 646,
											"end": 879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 245,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 245,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 245,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1248,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1075,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1075,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1075,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1248,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1075,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1248,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 292,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 292,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 885,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 947,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 958,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 959,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 959,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 959,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 938,
											"end": 959,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 924,
											"end": 959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 924,
											"end": 959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 969,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 999,
											"end": 1004,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 1007,
											"end": 1017,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 969,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 969,
											"end": 1026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 969,
											"end": 1026,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 969,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1045,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1056,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 914,
											"end": 1068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 512,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 512,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 539,
											"end": 549,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 559,
											"end": 563,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 566,
											"end": 572,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 512,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 512,
											"end": 573,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 504,
											"end": 597,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 597,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 504,
											"end": 597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 504,
											"end": 597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 504,
											"end": 597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 504,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 504,
											"end": 597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 597,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 504,
											"end": 597,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 504,
											"end": 597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 626,
											"end": 632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 617,
											"end": 621,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 607,
											"end": 622,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 607,
											"end": 622,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 622,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 607,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 632,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 607,
											"end": 632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 607,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 607,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 607,
											"end": 632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 443,
											"end": 639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 646,
											"end": 879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 774,
											"end": 779,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "D505ACCF"
										},
										{
											"begin": 788,
											"end": 798,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 808,
											"end": 812,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 815,
											"end": 821,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 823,
											"end": 831,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 833,
											"end": 834,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 836,
											"end": 837,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 839,
											"end": 840,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 761,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 761,
											"end": 841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 761,
											"end": 841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 851,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 851,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 851,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 851,
											"end": 872,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 851,
											"end": 872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 245,
											"end": 286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1248,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1075,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1161,
											"name": "PUSH",
											"source": 4,
											"value": "4563918244F40000"
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 1116,
											"end": 1139,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1139,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1139,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1148,
											"end": 1152,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1116,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1116,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1161,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1242,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1113,
											"end": 1242,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1177,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 1212,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1226,
											"name": "PUSH",
											"source": 4,
											"value": "4563918244F40000"
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1177,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1177,
											"end": 1227,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1177,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1242,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1113,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1757,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1887,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1769,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1840,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1863,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1820,
											"end": 1881,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1881,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1820,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1887,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2028,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1893,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 1982,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2016,
											"end": 2021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1991,
											"end": 2022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2022,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1991,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2028,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2111,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2034,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2117,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2208,
											"end": 2213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2190,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2214,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2190,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2215,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2170,
											"end": 2233,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2227,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2233,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2170,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2384,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2245,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2372,
											"end": 2377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2345,
											"end": 2378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2378,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2345,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2384,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2384,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2584,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2569,
											"end": 2578,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2579,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2585,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2669,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2549,
											"end": 2669,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2588,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2588,
											"end": 2667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2667,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2588,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2669,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2549,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2778,
											"end": 2785,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2775,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2767,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2733,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2786,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2733,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2786,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 2796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2906,
											"end": 2913,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2904,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2861,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2914,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2861,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2914,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 2965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2989,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3042,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2989,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3042,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2934,
											"end": 3052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3091,
											"end": 3093,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3117,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3160,
											"end": 3167,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3158,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3117,
											"end": 3168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3168,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3117,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3168,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3220,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3244,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3289,
											"end": 3296,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3278,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3265,
											"end": 3287,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3244,
											"end": 3297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3297,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3244,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3297,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3349,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3373,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3418,
											"end": 3425,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3407,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3373,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3426,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3373,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 3443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3778,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3449,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3559,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3543,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3555,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3560,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3644,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3525,
											"end": 3644,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3563,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3563,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3563,
											"end": 3642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3563,
											"end": 3642,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3563,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3644,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3525,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3753,
											"end": 3760,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3708,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3761,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3708,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3778,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3778,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3902,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3784,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3889,
											"end": 3894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3871,
											"end": 3895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4130,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3908,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4024,
											"end": 4042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4118,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4096,
											"end": 4102,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4052,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4123,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4052,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4254,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4136,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4241,
											"end": 4246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4223,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4247,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4223,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4221,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4380,
											"end": 4389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4470,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4457,
											"end": 4474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4448,
											"end": 4454,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4404,
											"end": 4475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4930,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 4488,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4637,
											"end": 4641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4756,
											"end": 4757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4741,
											"end": 4758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4738,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4688,
											"end": 4759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4759,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4688,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4837,
											"end": 4839,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4769,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4841,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4769,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4917,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4901,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4851,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4923,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4851,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4930,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4930,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4970,
											"end": 4977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5018,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5019,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4999,
											"end": 5020,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 5026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 5026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5148,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5032,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5117,
											"end": 5122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5102,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5082,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5082,
											"end": 5142,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5082,
											"end": 5142,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5082,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5239,
											"end": 5245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5233,
											"end": 5246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5279,
											"end": 5284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5255,
											"end": 5285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5401,
											"end": 5410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5399,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5411,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5384,
											"end": 5416,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5419,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5419,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5419,
											"end": 5498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5419,
											"end": 5498,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5419,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5381,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5593,
											"end": 5615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5564,
											"end": 5625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5625,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5564,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5510,
											"end": 5635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 5817,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5648,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5732,
											"end": 5743,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5772,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5801,
											"end": 5804,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5797,
											"end": 5811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 5817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 5817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 5817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 5817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5992,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5823,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 5984,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E736665722066726F6D206572726F7200000000000000000000000000"
										},
										{
											"begin": 5959,
											"end": 5960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 5985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6364,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5998,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 6225,
											"end": 6227,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 6220,
											"end": 6223,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6161,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 6161,
											"end": 6228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6161,
											"end": 6228,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 6161,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6154,
											"end": 6228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6154,
											"end": 6228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6237,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6326,
											"end": 6329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6237,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 6237,
											"end": 6330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6237,
											"end": 6330,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6237,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6350,
											"end": 6353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6789,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 6370,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6536,
											"end": 6540,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6576,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6563,
											"end": 6572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6559,
											"end": 6577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6632,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6633,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6634,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6777,
											"end": 6781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6651,
											"end": 6782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6782,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6651,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 6782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 6782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6795,
											"end": 6975,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6795,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6843,
											"end": 6920,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6840,
											"end": 6841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 6944,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6937,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6968,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6954,
											"end": 6969,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7172,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 6981,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 7058,
											"end": 7059,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7040,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 7040,
											"end": 7060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7040,
											"end": 7060,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 7040,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7060,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7060,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7074,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7074,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 7074,
											"end": 7094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7074,
											"end": 7094,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 7074,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7094,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7114,
											"end": 7115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7110,
											"end": 7119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7138,
											"end": 7141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7135,
											"end": 7136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7132,
											"end": 7142,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7165,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 7129,
											"end": 7165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7145,
											"end": 7163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7165,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 7129,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7172,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7172,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7178,
											"end": 7290,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7178,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7261,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 7277,
											"end": 7282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7261,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 7261,
											"end": 7283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7261,
											"end": 7283,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 7261,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7256,
											"end": 7259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7249,
											"end": 7284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7178,
											"end": 7290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7178,
											"end": 7290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7178,
											"end": 7290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7296,
											"end": 7414,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7296,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 7401,
											"end": 7406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7383,
											"end": 7407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7407,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 7383,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7296,
											"end": 7414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7296,
											"end": 7414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7296,
											"end": 7414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 7681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7718,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7704,
											"end": 7713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7700,
											"end": 7719,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7692,
											"end": 7719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7692,
											"end": 7719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7729,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7797,
											"end": 7798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7782,
											"end": 7799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 7729,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 7729,
											"end": 7800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7729,
											"end": 7800,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7729,
											"end": 7800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7878,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 7881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7854,
											"end": 7860,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 7810,
											"end": 7882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 7882,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7810,
											"end": 7882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7892,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7960,
											"end": 7962,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7949,
											"end": 7958,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7936,
											"end": 7942,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7892,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7892,
											"end": 7964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7892,
											"end": 7964,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7892,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7974,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8042,
											"end": 8044,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8031,
											"end": 8040,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8018,
											"end": 8024,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7974,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7974,
											"end": 8046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7974,
											"end": 8046,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7974,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8056,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 8120,
											"end": 8123,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8109,
											"end": 8118,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8056,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 8056,
											"end": 8125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8056,
											"end": 8125,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 8056,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8135,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 8203,
											"end": 8206,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 8192,
											"end": 8201,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8188,
											"end": 8207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8185,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8135,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 8135,
											"end": 8208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8135,
											"end": 8208,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 8135,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8218,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 8286,
											"end": 8289,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 8275,
											"end": 8284,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8262,
											"end": 8268,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8218,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 8218,
											"end": 8291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8218,
											"end": 8291,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 8218,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 8298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8447,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 8304,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8361,
											"end": 8366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8392,
											"end": 8398,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8386,
											"end": 8399,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8408,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 8435,
											"end": 8440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8408,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 8408,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8408,
											"end": 8441,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 8408,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8453,
											"end": 8804,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 8453,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8523,
											"end": 8529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8572,
											"end": 8574,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8560,
											"end": 8569,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8551,
											"end": 8558,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8570,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8543,
											"end": 8575,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8659,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 8540,
											"end": 8659,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8578,
											"end": 8657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8578,
											"end": 8657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 8578,
											"end": 8657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8578,
											"end": 8657,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8578,
											"end": 8657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8659,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 8540,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 8699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 8779,
											"end": 8786,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8770,
											"end": 8776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8768,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8755,
											"end": 8777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8723,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 8723,
											"end": 8787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8723,
											"end": 8787,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 8723,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8713,
											"end": 8787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8713,
											"end": 8787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8453,
											"end": 8804,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8453,
											"end": 8804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8453,
											"end": 8804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8453,
											"end": 8804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8453,
											"end": 8804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 9142,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8810,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8958,
											"end": 8967,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8946,
											"end": 8972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8946,
											"end": 8972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8982,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9050,
											"end": 9051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9039,
											"end": 9048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9032,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8982,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8982,
											"end": 9053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8982,
											"end": 9053,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 8982,
											"end": 9053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9063,
											"end": 9135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9131,
											"end": 9133,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9120,
											"end": 9129,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9116,
											"end": 9134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9107,
											"end": 9113,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9063,
											"end": 9135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 9063,
											"end": 9135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9063,
											"end": 9135,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9063,
											"end": 9135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 9142,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 9142,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 9142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 9142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 9142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 9142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9148,
											"end": 9246,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 9148,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9199,
											"end": 9205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9217,
											"end": 9239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9217,
											"end": 9239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9148,
											"end": 9246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9148,
											"end": 9246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9148,
											"end": 9246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9148,
											"end": 9246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9399,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 9252,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9390,
											"end": 9393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9544,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 9405,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9494,
											"end": 9500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9484,
											"end": 9487,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9501,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 9535,
											"end": 9536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9521,
											"end": 9524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9517,
											"end": 9533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9510,
											"end": 9537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9550,
											"end": 9936,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 9550,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9654,
											"end": 9657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9714,
											"end": 9719,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 9682,
											"end": 9720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 9720,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9682,
											"end": 9720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9736,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9817,
											"end": 9823,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9812,
											"end": 9815,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9736,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 9736,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9736,
											"end": 9824,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9736,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9729,
											"end": 9824,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9729,
											"end": 9824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9833,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9891,
											"end": 9897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9886,
											"end": 9889,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9879,
											"end": 9883,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9877,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9833,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 9833,
											"end": 9898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9833,
											"end": 9898,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9833,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9923,
											"end": 9929,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9918,
											"end": 9921,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9914,
											"end": 9930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9658,
											"end": 9936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9550,
											"end": 9936,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9550,
											"end": 9936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9550,
											"end": 9936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9550,
											"end": 9936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9550,
											"end": 9936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9942,
											"end": 10213,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9942,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10072,
											"end": 10075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10094,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 10183,
											"end": 10186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10174,
											"end": 10180,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 10094,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10187,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 10094,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10087,
											"end": 10187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10087,
											"end": 10187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10204,
											"end": 10207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10197,
											"end": 10207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10197,
											"end": 10207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9942,
											"end": 10213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9942,
											"end": 10213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9942,
											"end": 10213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9942,
											"end": 10213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9942,
											"end": 10213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"collect()": "e5225381",
							"deposit(address,uint256)": "47e7ef24",
							"deposited(address)": "cb13cddb",
							"permitDeposit(address,uint256,uint256,uint8,bytes32,bytes32)": "8f7b1bca",
							"token()": "fc0c546a",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Bank.sol\":\"Bank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"src/Bank.sol\":{\"keccak256\":\"0xd0c30ab3628db2608f36479df11af539bed5794453d81e5474aba17531d3a7c6\",\"urls\":[\"bzz-raw://1daed34dc5d03c2952074c738701c15a5fded0e3ee8b8fb7651bf3f4550b2c73\",\"dweb:/ipfs/QmNccQ5f7m72tyuPhM5x8vMsdxBxKfPCxviKEbX5NpVBMJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 665,
								"contract": "src/Bank.sol:Bank",
								"label": "deposited",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 669,
								"contract": "src/Bank.sol:Bank",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/Bank.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/Bank.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"src/Bank.sol": {
				"ast": {
					"absolutePath": "src/Bank.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"Bank": [
							809
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 810,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 810,
							"sourceUnit": 114,
							"src": "26:73:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 810,
							"sourceUnit": 78,
							"src": "100:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 661,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 810,
							"sourceUnit": 404,
							"src": "157:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Bank",
							"nameLocation": "234:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cb13cddb",
									"id": 665,
									"mutability": "mutable",
									"name": "deposited",
									"nameLocation": "277:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 809,
									"src": "245:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 664,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 662,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "245:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 663,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "264:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 667,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "317:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 809,
									"src": "292:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 666,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "292:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 669,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "336:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 809,
									"src": "328:13:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 668,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "377:59:4",
										"statements": [
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 674,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "387:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 675,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "395:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "387:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "387:14:4"
											},
											{
												"expression": {
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 678,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "411:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 679,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "419:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "423:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "419:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "411:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "411:18:4"
											}
										]
									},
									"id": 684,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "369:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "361:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:16:4"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "377:0:4"
									},
									"scope": 809,
									"src": "349:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "494:145:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 696,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "539:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "543:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "539:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 700,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "559:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Bank_$809",
																				"typeString": "contract Bank"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Bank_$809",
																				"typeString": "contract Bank"
																			}
																		],
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "551:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 698,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "551:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "551:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "566:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 693,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "519:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 692,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "512:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "512:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "526:12:4",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "512:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "512:61:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722066726f6d206572726f72",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "575:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
																"typeString": "literal_string \"Transfer from error\""
															},
															"value": "Transfer from error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
																"typeString": "literal_string \"Transfer from error\""
															}
														],
														"id": 691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "504:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "504:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "504:93:4"
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 707,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "607:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 709,
														"indexExpression": {
															"id": 708,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "617:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "607:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 710,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "626:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "607:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "607:25:4"
											}
										]
									},
									"functionSelector": "47e7ef24",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "452:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "468:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "460:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "479:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "474:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "474:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:27:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:0:4"
									},
									"scope": 809,
									"src": "443:196:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "751:128:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 733,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "788:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "792:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "788:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 737,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "808:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bank_$809",
																		"typeString": "contract Bank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bank_$809",
																		"typeString": "contract Bank"
																	}
																],
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "800:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 735,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "800:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "800:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "815:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 740,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "823:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 741,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "833:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 742,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "836:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 743,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "839:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 730,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "774:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 729,
																"name": "IERC20Permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "761:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Permit_$113_$",
																	"typeString": "type(contract IERC20Permit)"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "761:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "781:6:4",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "761:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "761:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 747,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "859:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "865:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 746,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "851:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "851:21:4"
											}
										]
									},
									"functionSelector": "8f7b1bca",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitDeposit",
									"nameLocation": "655:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "677:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "669:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "688:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "683:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "683:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "701:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "696:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "696:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "717:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "711:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 721,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "711:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "728:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "720:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 723,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "739:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "731:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 725,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:73:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:0:4"
									},
									"scope": 809,
									"src": "646:233:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "914:154:4",
										"statements": [
											{
												"assignments": [
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "929:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "924:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 755,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "924:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"baseExpression": {
														"id": 757,
														"name": "deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "938:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 760,
													"indexExpression": {
														"expression": {
															"id": 758,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "948:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "952:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "948:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "938:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "924:35:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 766,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "999:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 765,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "992:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "992:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 768,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1007:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1011:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1007:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "1019:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 762,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "969:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$403_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "979:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "969:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "969:57:4"
											},
											{
												"expression": {
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 773,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1036:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 776,
														"indexExpression": {
															"expression": {
																"id": 774,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1046:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1050:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1046:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1036:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1060:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1036:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "1036:25:4"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "894:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "902:2:4"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:0:4"
									},
									"scope": 809,
									"src": "885:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "1103:145:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 790,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1148:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Bank_$809",
																			"typeString": "contract Bank"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Bank_$809",
																			"typeString": "contract Bank"
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1140:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 788,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1140:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1140:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "1123:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 784,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "1116:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1116:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1130:9:4",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "1116:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1116:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "35653138",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1157:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000"
														},
														"value": "5e18"
													},
													"src": "1116:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 806,
												"nodeType": "IfStatement",
												"src": "1113:129:4",
												"trueBody": {
													"id": 805,
													"nodeType": "Block",
													"src": "1163:79:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 799,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "1207:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 798,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1200:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1200:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 801,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "1215:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "35653138",
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1222:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5000000000000000000_by_1",
																			"typeString": "int_const 5000000000000000000"
																		},
																		"value": "5e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_5000000000000000000_by_1",
																			"typeString": "int_const 5000000000000000000"
																		}
																	],
																	"expression": {
																		"id": 795,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "1177:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$403_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1187:12:4",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 163,
																	"src": "1177:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1177:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 804,
															"nodeType": "ExpressionStatement",
															"src": "1177:50:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "e5225381",
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "1084:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1091:2:4"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1103:0:4"
									},
									"scope": 809,
									"src": "1075:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 810,
							"src": "225:1026:4",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "0:1253:4"
				},
				"id": 4
			}
		}
	}
}
{
	"id": "7ab2e228f4817bf125aa4138c43ff9f8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/AutoCollectUpKeep.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./automation/AutomationCompatible.sol\";\n\n\ninterface IBank {\n    function collect() external;\n}\n\ncontract AutoCollectUpKeep is AutomationCompatible {\n  address public immutable token;\n  address public immutable bank;\n\n  constructor(address _token, address _bank) {\n        token = _token;\n        bank = _bank;\n\n  }\n\n  function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {\n    // upkeepNeeded = (block.timestamp - lastTimeStamp) > interval;\n    \n    if(IERC20(token).balanceOf(bank) > 5e18) {\n      upkeepNeeded = true;\n    }\n\n    // performData = abi.decode();\n  }\n\n\n  function performUpkeep(bytes calldata performData) external override {\n    if(IERC20(token).balanceOf(bank) > 5e18) {\n      IBank(bank).collect();\n    }\n  }\n\n}"
			},
			"src/automation/AutomationCompatible.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"./AutomationBase.sol\";\nimport \"./AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"src/automation/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}"
			},
			"src/automation/AutomationBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function preventExecution() internal view {\n    if (tx.origin != address(0)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    preventExecution();\n    _;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/AutoCollectUpKeep.sol": {
				"AutoCollectUpKeep": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_bank",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "bank",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/AutoCollectUpKeep.sol\":186:890  contract AutoCollectUpKeep is AutomationCompatible {... */\n  mstore(0x40, 0xc0)\n    /* \"src/AutoCollectUpKeep.sol\":309:404  constructor(address _token, address _bank) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/AutoCollectUpKeep.sol\":370:376  _token */\n  dup2\n    /* \"src/AutoCollectUpKeep.sol\":362:376  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/AutoCollectUpKeep.sol\":393:398  _bank */\n  dup1\n    /* \"src/AutoCollectUpKeep.sol\":386:398  bank = _bank */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/AutoCollectUpKeep.sol\":309:404  constructor(address _token, address _bank) {... */\n  pop\n  pop\n    /* \"src/AutoCollectUpKeep.sol\":186:890  contract AutoCollectUpKeep is AutomationCompatible {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"src/AutoCollectUpKeep.sol\":186:890  contract AutoCollectUpKeep is AutomationCompatible {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4393e7114eb674248a1480712950c28cb06e118e040859a2eafa3ca8a6dfbd69\")\n  0x00\n  assignImmutable(\"0x5ad0f966e4dd8863f27c0e6ee7d684c0c8f4319efed210fe15662a0d29bcd615\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/AutoCollectUpKeep.sol\":186:890  contract AutoCollectUpKeep is AutomationCompatible {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4585e33b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6e04ff0d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x76cdb03b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/AutoCollectUpKeep.sol\":731:887  function performUpkeep(bytes calldata performData) external override {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"src/AutoCollectUpKeep.sol\":408:726  function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/AutoCollectUpKeep.sol\":275:304  address public immutable bank */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/AutoCollectUpKeep.sol\":241:271  address public immutable token */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/AutoCollectUpKeep.sol\":731:887  function performUpkeep(bytes calldata performData) external override {... */\n    tag_10:\n        /* \"src/AutoCollectUpKeep.sol\":841:845  5e18 */\n      0x4563918244f40000\n        /* \"src/AutoCollectUpKeep.sol\":816:821  token */\n      immutable(\"0x5ad0f966e4dd8863f27c0e6ee7d684c0c8f4319efed210fe15662a0d29bcd615\")\n        /* \"src/AutoCollectUpKeep.sol\":809:832  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/AutoCollectUpKeep.sol\":833:837  bank */\n      immutable(\"0x4393e7114eb674248a1480712950c28cb06e118e040859a2eafa3ca8a6dfbd69\")\n        /* \"src/AutoCollectUpKeep.sol\":809:838  IERC20(token).balanceOf(bank) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_24:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"src/AutoCollectUpKeep.sol\":809:845  IERC20(token).balanceOf(bank) > 5e18 */\n      gt\n        /* \"src/AutoCollectUpKeep.sol\":806:883  if(IERC20(token).balanceOf(bank) > 5e18) {... */\n      iszero\n      tag_29\n      jumpi\n        /* \"src/AutoCollectUpKeep.sol\":861:865  bank */\n      immutable(\"0x4393e7114eb674248a1480712950c28cb06e118e040859a2eafa3ca8a6dfbd69\")\n        /* \"src/AutoCollectUpKeep.sol\":855:874  IBank(bank).collect */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe5225381\n        /* \"src/AutoCollectUpKeep.sol\":855:876  IBank(bank).collect() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/AutoCollectUpKeep.sol\":806:883  if(IERC20(token).balanceOf(bank) > 5e18) {... */\n    tag_29:\n        /* \"src/AutoCollectUpKeep.sol\":731:887  function performUpkeep(bytes calldata performData) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/AutoCollectUpKeep.sol\":408:726  function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {... */\n    tag_13:\n        /* \"src/AutoCollectUpKeep.sol\":487:504  bool upkeepNeeded */\n      0x00\n        /* \"src/AutoCollectUpKeep.sol\":506:530  bytes memory performData */\n      0x60\n        /* \"src/AutoCollectUpKeep.sol\":646:650  5e18 */\n      0x4563918244f40000\n        /* \"src/AutoCollectUpKeep.sol\":621:626  token */\n      immutable(\"0x5ad0f966e4dd8863f27c0e6ee7d684c0c8f4319efed210fe15662a0d29bcd615\")\n        /* \"src/AutoCollectUpKeep.sol\":614:637  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/AutoCollectUpKeep.sol\":638:642  bank */\n      immutable(\"0x4393e7114eb674248a1480712950c28cb06e118e040859a2eafa3ca8a6dfbd69\")\n        /* \"src/AutoCollectUpKeep.sol\":614:643  IERC20(token).balanceOf(bank) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_37:\n        /* \"src/AutoCollectUpKeep.sol\":614:650  IERC20(token).balanceOf(bank) > 5e18 */\n      gt\n        /* \"src/AutoCollectUpKeep.sol\":611:686  if(IERC20(token).balanceOf(bank) > 5e18) {... */\n      iszero\n      tag_38\n      jumpi\n        /* \"src/AutoCollectUpKeep.sol\":675:679  true */\n      0x01\n        /* \"src/AutoCollectUpKeep.sol\":660:679  upkeepNeeded = true */\n      swap2\n      pop\n        /* \"src/AutoCollectUpKeep.sol\":611:686  if(IERC20(token).balanceOf(bank) > 5e18) {... */\n    tag_38:\n        /* \"src/AutoCollectUpKeep.sol\":408:726  function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"src/AutoCollectUpKeep.sol\":275:304  address public immutable bank */\n    tag_17:\n      immutable(\"0x4393e7114eb674248a1480712950c28cb06e118e040859a2eafa3ca8a6dfbd69\")\n      dup2\n      jump\t// out\n        /* \"src/AutoCollectUpKeep.sol\":241:271  address public immutable token */\n    tag_21:\n      immutable(\"0x5ad0f966e4dd8863f27c0e6ee7d684c0c8f4319efed210fe15662a0d29bcd615\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_40:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_41:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_42:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_43:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_44:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":716:1268   */\n    tag_45:\n        /* \"#utility.yul\":773:781   */\n      0x00\n        /* \"#utility.yul\":783:789   */\n      dup1\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":826:830   */\n      0x1f\n        /* \"#utility.yul\":818:824   */\n      dup5\n        /* \"#utility.yul\":814:831   */\n      add\n        /* \"#utility.yul\":810:837   */\n      slt\n        /* \"#utility.yul\":800:922   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":841:920   */\n      tag_68\n      tag_42\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":800:922   */\n    tag_67:\n        /* \"#utility.yul\":954:960   */\n      dup3\n        /* \"#utility.yul\":941:961   */\n      calldataload\n        /* \"#utility.yul\":931:961   */\n      swap1\n      pop\n        /* \"#utility.yul\":984:1002   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":976:982   */\n      dup2\n        /* \"#utility.yul\":973:1003   */\n      gt\n        /* \"#utility.yul\":970:1087   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1006:1085   */\n      tag_70\n      tag_43\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":970:1087   */\n    tag_69:\n        /* \"#utility.yul\":1120:1124   */\n      0x20\n        /* \"#utility.yul\":1112:1118   */\n      dup4\n        /* \"#utility.yul\":1108:1125   */\n      add\n        /* \"#utility.yul\":1096:1125   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1177   */\n      dup4\n        /* \"#utility.yul\":1166:1170   */\n      0x01\n        /* \"#utility.yul\":1158:1164   */\n      dup3\n        /* \"#utility.yul\":1154:1171   */\n      mul\n        /* \"#utility.yul\":1144:1152   */\n      dup4\n        /* \"#utility.yul\":1140:1172   */\n      add\n        /* \"#utility.yul\":1137:1178   */\n      gt\n        /* \"#utility.yul\":1134:1262   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1181:1260   */\n      tag_72\n      tag_44\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1134:1262   */\n    tag_71:\n        /* \"#utility.yul\":716:1268   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1274:1801   */\n    tag_9:\n        /* \"#utility.yul\":1344:1350   */\n      0x00\n        /* \"#utility.yul\":1352:1358   */\n      dup1\n        /* \"#utility.yul\":1401:1403   */\n      0x20\n        /* \"#utility.yul\":1389:1398   */\n      dup4\n        /* \"#utility.yul\":1380:1387   */\n      dup6\n        /* \"#utility.yul\":1376:1399   */\n      sub\n        /* \"#utility.yul\":1372:1404   */\n      slt\n        /* \"#utility.yul\":1369:1488   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1407:1486   */\n      tag_75\n      tag_40\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1369:1488   */\n    tag_74:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1544:1553   */\n      dup4\n        /* \"#utility.yul\":1540:1557   */\n      add\n        /* \"#utility.yul\":1527:1558   */\n      calldataload\n        /* \"#utility.yul\":1585:1603   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1577:1583   */\n      dup2\n        /* \"#utility.yul\":1574:1604   */\n      gt\n        /* \"#utility.yul\":1571:1688   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1607:1686   */\n      tag_77\n      tag_41\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1571:1688   */\n    tag_76:\n        /* \"#utility.yul\":1720:1784   */\n      tag_78\n        /* \"#utility.yul\":1776:1783   */\n      dup6\n        /* \"#utility.yul\":1767:1773   */\n      dup3\n        /* \"#utility.yul\":1756:1765   */\n      dup7\n        /* \"#utility.yul\":1752:1774   */\n      add\n        /* \"#utility.yul\":1720:1784   */\n      tag_45\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1702:1784   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1498:1794   */\n      pop\n        /* \"#utility.yul\":1274:1801   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1807:1897   */\n    tag_46:\n        /* \"#utility.yul\":1841:1848   */\n      0x00\n        /* \"#utility.yul\":1884:1889   */\n      dup2\n        /* \"#utility.yul\":1877:1890   */\n      iszero\n        /* \"#utility.yul\":1870:1891   */\n      iszero\n        /* \"#utility.yul\":1859:1891   */\n      swap1\n      pop\n        /* \"#utility.yul\":1807:1897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1903:2012   */\n    tag_47:\n        /* \"#utility.yul\":1984:2005   */\n      tag_81\n        /* \"#utility.yul\":1999:2004   */\n      dup2\n        /* \"#utility.yul\":1984:2005   */\n      tag_46\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1979:1982   */\n      dup3\n        /* \"#utility.yul\":1972:2006   */\n      mstore\n        /* \"#utility.yul\":1903:2012   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2018:2116   */\n    tag_48:\n        /* \"#utility.yul\":2069:2075   */\n      0x00\n        /* \"#utility.yul\":2103:2108   */\n      dup2\n        /* \"#utility.yul\":2097:2109   */\n      mload\n        /* \"#utility.yul\":2087:2109   */\n      swap1\n      pop\n        /* \"#utility.yul\":2018:2116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2122:2290   */\n    tag_49:\n        /* \"#utility.yul\":2205:2216   */\n      0x00\n        /* \"#utility.yul\":2239:2245   */\n      dup3\n        /* \"#utility.yul\":2234:2237   */\n      dup3\n        /* \"#utility.yul\":2227:2246   */\n      mstore\n        /* \"#utility.yul\":2279:2283   */\n      0x20\n        /* \"#utility.yul\":2274:2277   */\n      dup3\n        /* \"#utility.yul\":2270:2284   */\n      add\n        /* \"#utility.yul\":2255:2284   */\n      swap1\n      pop\n        /* \"#utility.yul\":2122:2290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2296:2435   */\n    tag_50:\n        /* \"#utility.yul\":2385:2391   */\n      dup3\n        /* \"#utility.yul\":2380:2383   */\n      dup2\n        /* \"#utility.yul\":2375:2378   */\n      dup4\n        /* \"#utility.yul\":2369:2392   */\n      mcopy\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2417:2423   */\n      dup4\n        /* \"#utility.yul\":2412:2415   */\n      dup4\n        /* \"#utility.yul\":2408:2424   */\n      add\n        /* \"#utility.yul\":2401:2428   */\n      mstore\n        /* \"#utility.yul\":2296:2435   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2441:2543   */\n    tag_51:\n        /* \"#utility.yul\":2482:2488   */\n      0x00\n        /* \"#utility.yul\":2533:2535   */\n      0x1f\n        /* \"#utility.yul\":2529:2536   */\n      not\n        /* \"#utility.yul\":2524:2526   */\n      0x1f\n        /* \"#utility.yul\":2517:2522   */\n      dup4\n        /* \"#utility.yul\":2513:2527   */\n      add\n        /* \"#utility.yul\":2509:2537   */\n      and\n        /* \"#utility.yul\":2499:2537   */\n      swap1\n      pop\n        /* \"#utility.yul\":2441:2543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2549:2922   */\n    tag_52:\n        /* \"#utility.yul\":2635:2638   */\n      0x00\n        /* \"#utility.yul\":2663:2701   */\n      tag_87\n        /* \"#utility.yul\":2695:2700   */\n      dup3\n        /* \"#utility.yul\":2663:2701   */\n      tag_48\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2717:2787   */\n      tag_88\n        /* \"#utility.yul\":2780:2786   */\n      dup2\n        /* \"#utility.yul\":2775:2778   */\n      dup6\n        /* \"#utility.yul\":2717:2787   */\n      tag_49\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2710:2787   */\n      swap4\n      pop\n        /* \"#utility.yul\":2796:2861   */\n      tag_89\n        /* \"#utility.yul\":2854:2860   */\n      dup2\n        /* \"#utility.yul\":2849:2852   */\n      dup6\n        /* \"#utility.yul\":2842:2846   */\n      0x20\n        /* \"#utility.yul\":2835:2840   */\n      dup7\n        /* \"#utility.yul\":2831:2847   */\n      add\n        /* \"#utility.yul\":2796:2861   */\n      tag_50\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2886:2915   */\n      tag_90\n        /* \"#utility.yul\":2908:2914   */\n      dup2\n        /* \"#utility.yul\":2886:2915   */\n      tag_51\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2881:2884   */\n      dup5\n        /* \"#utility.yul\":2877:2916   */\n      add\n        /* \"#utility.yul\":2870:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2639:2922   */\n      pop\n        /* \"#utility.yul\":2549:2922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2928:3335   */\n    tag_15:\n        /* \"#utility.yul\":3061:3065   */\n      0x00\n        /* \"#utility.yul\":3099:3101   */\n      0x40\n        /* \"#utility.yul\":3088:3097   */\n      dup3\n        /* \"#utility.yul\":3084:3102   */\n      add\n        /* \"#utility.yul\":3076:3102   */\n      swap1\n      pop\n        /* \"#utility.yul\":3112:3177   */\n      tag_92\n        /* \"#utility.yul\":3174:3175   */\n      0x00\n        /* \"#utility.yul\":3163:3172   */\n      dup4\n        /* \"#utility.yul\":3159:3176   */\n      add\n        /* \"#utility.yul\":3150:3156   */\n      dup6\n        /* \"#utility.yul\":3112:3177   */\n      tag_47\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3224:3233   */\n      dup2\n        /* \"#utility.yul\":3218:3222   */\n      dup2\n        /* \"#utility.yul\":3214:3234   */\n      sub\n        /* \"#utility.yul\":3209:3211   */\n      0x20\n        /* \"#utility.yul\":3198:3207   */\n      dup4\n        /* \"#utility.yul\":3194:3212   */\n      add\n        /* \"#utility.yul\":3187:3235   */\n      mstore\n        /* \"#utility.yul\":3252:3328   */\n      tag_93\n        /* \"#utility.yul\":3323:3327   */\n      dup2\n        /* \"#utility.yul\":3314:3320   */\n      dup5\n        /* \"#utility.yul\":3252:3328   */\n      tag_52\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3244:3328   */\n      swap1\n      pop\n        /* \"#utility.yul\":2928:3335   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3341:3467   */\n    tag_53:\n        /* \"#utility.yul\":3378:3385   */\n      0x00\n        /* \"#utility.yul\":3418:3460   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3411:3416   */\n      dup3\n        /* \"#utility.yul\":3407:3461   */\n      and\n        /* \"#utility.yul\":3396:3461   */\n      swap1\n      pop\n        /* \"#utility.yul\":3341:3467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3473:3569   */\n    tag_54:\n        /* \"#utility.yul\":3510:3517   */\n      0x00\n        /* \"#utility.yul\":3539:3563   */\n      tag_96\n        /* \"#utility.yul\":3557:3562   */\n      dup3\n        /* \"#utility.yul\":3539:3563   */\n      tag_53\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3528:3563   */\n      swap1\n      pop\n        /* \"#utility.yul\":3473:3569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3575:3693   */\n    tag_55:\n        /* \"#utility.yul\":3662:3686   */\n      tag_98\n        /* \"#utility.yul\":3680:3685   */\n      dup2\n        /* \"#utility.yul\":3662:3686   */\n      tag_54\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3657:3660   */\n      dup3\n        /* \"#utility.yul\":3650:3687   */\n      mstore\n        /* \"#utility.yul\":3575:3693   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3699:3921   */\n    tag_19:\n        /* \"#utility.yul\":3792:3796   */\n      0x00\n        /* \"#utility.yul\":3830:3832   */\n      0x20\n        /* \"#utility.yul\":3819:3828   */\n      dup3\n        /* \"#utility.yul\":3815:3833   */\n      add\n        /* \"#utility.yul\":3807:3833   */\n      swap1\n      pop\n        /* \"#utility.yul\":3843:3914   */\n      tag_100\n        /* \"#utility.yul\":3911:3912   */\n      0x00\n        /* \"#utility.yul\":3900:3909   */\n      dup4\n        /* \"#utility.yul\":3896:3913   */\n      add\n        /* \"#utility.yul\":3887:3893   */\n      dup5\n        /* \"#utility.yul\":3843:3914   */\n      tag_55\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3699:3921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3927:4004   */\n    tag_56:\n        /* \"#utility.yul\":3964:3971   */\n      0x00\n        /* \"#utility.yul\":3993:3998   */\n      dup2\n        /* \"#utility.yul\":3982:3998   */\n      swap1\n      pop\n        /* \"#utility.yul\":3927:4004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4010:4132   */\n    tag_57:\n        /* \"#utility.yul\":4083:4107   */\n      tag_103\n        /* \"#utility.yul\":4101:4106   */\n      dup2\n        /* \"#utility.yul\":4083:4107   */\n      tag_56\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4076:4081   */\n      dup2\n        /* \"#utility.yul\":4073:4108   */\n      eq\n        /* \"#utility.yul\":4063:4126   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4119:4120   */\n      dup1\n        /* \"#utility.yul\":4112:4124   */\n      revert\n        /* \"#utility.yul\":4063:4126   */\n    tag_104:\n        /* \"#utility.yul\":4010:4132   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4138:4281   */\n    tag_58:\n        /* \"#utility.yul\":4195:4200   */\n      0x00\n        /* \"#utility.yul\":4226:4232   */\n      dup2\n        /* \"#utility.yul\":4220:4233   */\n      mload\n        /* \"#utility.yul\":4211:4233   */\n      swap1\n      pop\n        /* \"#utility.yul\":4242:4275   */\n      tag_106\n        /* \"#utility.yul\":4269:4274   */\n      dup2\n        /* \"#utility.yul\":4242:4275   */\n      tag_57\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4138:4281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4287:4638   */\n    tag_28:\n        /* \"#utility.yul\":4357:4363   */\n      0x00\n        /* \"#utility.yul\":4406:4408   */\n      0x20\n        /* \"#utility.yul\":4394:4403   */\n      dup3\n        /* \"#utility.yul\":4385:4392   */\n      dup5\n        /* \"#utility.yul\":4381:4404   */\n      sub\n        /* \"#utility.yul\":4377:4409   */\n      slt\n        /* \"#utility.yul\":4374:4493   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":4412:4491   */\n      tag_109\n      tag_40\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":4374:4493   */\n    tag_108:\n        /* \"#utility.yul\":4532:4533   */\n      0x00\n        /* \"#utility.yul\":4557:4621   */\n      tag_110\n        /* \"#utility.yul\":4613:4620   */\n      dup5\n        /* \"#utility.yul\":4604:4610   */\n      dup3\n        /* \"#utility.yul\":4593:4602   */\n      dup6\n        /* \"#utility.yul\":4589:4611   */\n      add\n        /* \"#utility.yul\":4557:4621   */\n      tag_58\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4547:4621   */\n      swap2\n      pop\n        /* \"#utility.yul\":4503:4631   */\n      pop\n        /* \"#utility.yul\":4287:4638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e65970b56d93186dc28fea8388d53c303766fcac4fdafb8c168666c8b5372f0d64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_107": {
									"entryPoint": null,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:5",
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "939:413:5",
													"nodeType": "YulBlock",
													"src": "939:413:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:5",
																"nodeType": "YulBlock",
																"src": "985:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:5"
																			},
																			"nativeSrc": "987:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:5"
																		},
																		"nativeSrc": "987:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:5"
																		},
																		"nativeSrc": "956:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:5",
																		"nodeType": "YulLiteral",
																		"src": "981:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:5"
																},
																"nativeSrc": "952:32:5",
																"nodeType": "YulFunctionCall",
																"src": "952:32:5"
															},
															"nativeSrc": "949:119:5",
															"nodeType": "YulIf",
															"src": "949:119:5"
														},
														{
															"nativeSrc": "1078:128:5",
															"nodeType": "YulBlock",
															"src": "1078:128:5",
															"statements": [
																{
																	"nativeSrc": "1093:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:5"
																				},
																				"nativeSrc": "1164:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:5"
																		},
																		"nativeSrc": "1132:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:5",
															"nodeType": "YulBlock",
															"src": "1216:129:5",
															"statements": [
																{
																	"nativeSrc": "1231:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:5"
																				},
																				"nativeSrc": "1303:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:5"
																		},
																		"nativeSrc": "1271:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:5",
														"nodeType": "YulTypedName",
														"src": "901:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:5",
														"nodeType": "YulTypedName",
														"src": "912:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:5",
														"nodeType": "YulTypedName",
														"src": "924:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:5",
														"nodeType": "YulTypedName",
														"src": "932:6:5",
														"type": ""
													}
												],
												"src": "845:507:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051610713380380610713833981810160405281019061003191906100fe565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505061013c565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100cd826100a4565b9050919050565b6100dd816100c3565b81146100e7575f80fd5b50565b5f815190506100f8816100d4565b92915050565b5f8060408385031215610114576101136100a0565b5b5f610121858286016100ea565b9250506020610132858286016100ea565b9150509250929050565b60805160a05161059461017f5f395f818161011e015281816101a00152818161026801526102f601525f818160e20152818161022c015261031a01526105945ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80634585e33b1461004e5780636e04ff0d1461006a57806376cdb03b1461009b578063fc0c546a146100b9575b5f80fd5b610068600480360381019061006391906103a5565b6100d7565b005b610084600480360381019061007f91906103a5565b61021e565b60405161009292919061047a565b60405180910390f35b6100a36102f4565b6040516100b091906104e7565b60405180910390f35b6100c1610318565b6040516100ce91906104e7565b60405180910390f35b674563918244f400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a082317f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161015991906104e7565b602060405180830381865afa158015610174573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101989190610533565b111561021a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e52253816040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610203575f80fd5b505af1158015610215573d5f803e3d5ffd5b505050505b5050565b5f6060674563918244f400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a082317f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016102a391906104e7565b602060405180830381865afa1580156102be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102e29190610533565b11156102ed57600191505b9250929050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261036557610364610344565b5b8235905067ffffffffffffffff81111561038257610381610348565b5b60208301915083600182028301111561039e5761039d61034c565b5b9250929050565b5f80602083850312156103bb576103ba61033c565b5b5f83013567ffffffffffffffff8111156103d8576103d7610340565b5b6103e485828601610350565b92509250509250929050565b5f8115159050919050565b610404816103f0565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61044c8261040a565b6104568185610414565b9350610466818560208601610424565b61046f81610432565b840191505092915050565b5f60408201905061048d5f8301856103fb565b818103602083015261049f8184610442565b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104d1826104a8565b9050919050565b6104e1816104c7565b82525050565b5f6020820190506104fa5f8301846104d8565b92915050565b5f819050919050565b61051281610500565b811461051c575f80fd5b50565b5f8151905061052d81610509565b92915050565b5f602082840312156105485761054761033c565b5b5f6105558482850161051f565b9150509291505056fea2646970667358221220e65970b56d93186dc28fea8388d53c303766fcac4fdafb8c168666c8b5372f0d64736f6c63430008190033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x713 CODESIZE SUB DUP1 PUSH2 0x713 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x13C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD DUP3 PUSH2 0xA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD DUP2 PUSH2 0xC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF8 DUP2 PUSH2 0xD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0xA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x121 DUP6 DUP3 DUP7 ADD PUSH2 0xEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x132 DUP6 DUP3 DUP7 ADD PUSH2 0xEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x594 PUSH2 0x17F PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x11E ADD MSTORE DUP2 DUP2 PUSH2 0x1A0 ADD MSTORE DUP2 DUP2 PUSH2 0x268 ADD MSTORE PUSH2 0x2F6 ADD MSTORE PUSH0 DUP2 DUP2 PUSH1 0xE2 ADD MSTORE DUP2 DUP2 PUSH2 0x22C ADD MSTORE PUSH2 0x31A ADD MSTORE PUSH2 0x594 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4585E33B EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP3 SWAP2 SWAP1 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH8 0x4563918244F40000 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x174 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST GT ISZERO PUSH2 0x21A JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE5225381 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH8 0x4563918244F40000 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST GT ISZERO PUSH2 0x2ED JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x365 JUMPI PUSH2 0x364 PUSH2 0x344 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x348 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0x34C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x33C JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D7 PUSH2 0x340 JUMP JUMPDEST JUMPDEST PUSH2 0x3E4 DUP6 DUP3 DUP7 ADD PUSH2 0x350 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x404 DUP2 PUSH2 0x3F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x44C DUP3 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x456 DUP2 DUP6 PUSH2 0x414 JUMP JUMPDEST SWAP4 POP PUSH2 0x466 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0x46F DUP2 PUSH2 0x432 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x48D PUSH0 DUP4 ADD DUP6 PUSH2 0x3FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x49F DUP2 DUP5 PUSH2 0x442 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D1 DUP3 PUSH2 0x4A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E1 DUP2 PUSH2 0x4C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4FA PUSH0 DUP4 ADD DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x512 DUP2 PUSH2 0x500 JUMP JUMPDEST DUP2 EQ PUSH2 0x51C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x52D DUP2 PUSH2 0x509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x548 JUMPI PUSH2 0x547 PUSH2 0x33C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x555 DUP5 DUP3 DUP6 ADD PUSH2 0x51F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 MSIZE PUSH17 0xB56D93186DC28FEA8388D53C303766FCAC 0x4F 0xDA 0xFB DUP13 AND DUP7 PUSH7 0xC8B5372F0D6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "186:704:1:-:0;;;309:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;370:6;362:14;;;;;;;;;;393:5;386:12;;;;;;;;;;309:95;;186:704;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;186:704:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@bank_91": {
									"entryPoint": 756,
									"id": 91,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkUpkeep_132": {
									"entryPoint": 542,
									"id": 132,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@performUpkeep_155": {
									"entryPoint": 215,
									"id": 155,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@token_89": {
									"entryPoint": 792,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4641:5",
										"nodeType": "YulBlock",
										"src": "0:4641:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "423:28:5",
													"nodeType": "YulBlock",
													"src": "423:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:5",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:5",
																		"nodeType": "YulLiteral",
																		"src": "443:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nativeSrc": "433:12:5",
																"nodeType": "YulFunctionCall",
																"src": "433:12:5"
															},
															"nativeSrc": "433:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:5"
											},
											{
												"body": {
													"nativeSrc": "546:28:5",
													"nodeType": "YulBlock",
													"src": "546:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:5",
																		"nodeType": "YulLiteral",
																		"src": "563:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:5",
																		"nodeType": "YulLiteral",
																		"src": "566:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:5"
																},
																"nativeSrc": "556:12:5",
																"nodeType": "YulFunctionCall",
																"src": "556:12:5"
															},
															"nativeSrc": "556:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:5"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "457:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:5"
											},
											{
												"body": {
													"nativeSrc": "669:28:5",
													"nodeType": "YulBlock",
													"src": "669:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "686:1:5",
																		"nodeType": "YulLiteral",
																		"src": "686:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:1:5",
																		"nodeType": "YulLiteral",
																		"src": "689:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "679:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:5"
																},
																"nativeSrc": "679:12:5",
																"nodeType": "YulFunctionCall",
																"src": "679:12:5"
															},
															"nativeSrc": "679:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "679:12:5"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "580:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:5"
											},
											{
												"body": {
													"nativeSrc": "790:478:5",
													"nodeType": "YulBlock",
													"src": "790:478:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "839:83:5",
																"nodeType": "YulBlock",
																"src": "839:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "841:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "841:77:5"
																			},
																			"nativeSrc": "841:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "841:79:5"
																		},
																		"nativeSrc": "841:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "818:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "818:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "826:4:5",
																						"nodeType": "YulLiteral",
																						"src": "826:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "814:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "814:3:5"
																				},
																				"nativeSrc": "814:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "814:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "833:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "833:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "810:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:5"
																		},
																		"nativeSrc": "810:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "810:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "803:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "803:6:5"
																},
																"nativeSrc": "803:35:5",
																"nodeType": "YulFunctionCall",
																"src": "803:35:5"
															},
															"nativeSrc": "800:122:5",
															"nodeType": "YulIf",
															"src": "800:122:5"
														},
														{
															"nativeSrc": "931:30:5",
															"nodeType": "YulAssignment",
															"src": "931:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "954:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "941:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "941:12:5"
																},
																"nativeSrc": "941:20:5",
																"nodeType": "YulFunctionCall",
																"src": "941:20:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "931:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "931:6:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1004:83:5",
																"nodeType": "YulBlock",
																"src": "1004:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1006:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1006:77:5"
																			},
																			"nativeSrc": "1006:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1006:79:5"
																		},
																		"nativeSrc": "1006:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1006:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "976:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "984:18:5",
																		"nodeType": "YulLiteral",
																		"src": "984:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "973:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "973:2:5"
																},
																"nativeSrc": "973:30:5",
																"nodeType": "YulFunctionCall",
																"src": "973:30:5"
															},
															"nativeSrc": "970:117:5",
															"nodeType": "YulIf",
															"src": "970:117:5"
														},
														{
															"nativeSrc": "1096:29:5",
															"nodeType": "YulAssignment",
															"src": "1096:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1112:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1112:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1120:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1120:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:5"
																},
																"nativeSrc": "1108:17:5",
																"nodeType": "YulFunctionCall",
																"src": "1108:17:5"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1096:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "1096:8:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1179:83:5",
																"nodeType": "YulBlock",
																"src": "1179:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1181:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1181:77:5"
																			},
																			"nativeSrc": "1181:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1181:79:5"
																		},
																		"nativeSrc": "1181:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1181:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1144:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1144:8:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1158:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1158:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1166:4:5",
																						"nodeType": "YulLiteral",
																						"src": "1166:4:5",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1154:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1154:3:5"
																				},
																				"nativeSrc": "1154:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1154:17:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1140:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:5"
																		},
																		"nativeSrc": "1140:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1140:32:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1174:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1174:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1137:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1137:2:5"
																},
																"nativeSrc": "1137:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1137:41:5"
															},
															"nativeSrc": "1134:128:5",
															"nodeType": "YulIf",
															"src": "1134:128:5"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "716:552:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "757:6:5",
														"nodeType": "YulTypedName",
														"src": "757:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "765:3:5",
														"nodeType": "YulTypedName",
														"src": "765:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "773:8:5",
														"nodeType": "YulTypedName",
														"src": "773:8:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "783:6:5",
														"nodeType": "YulTypedName",
														"src": "783:6:5",
														"type": ""
													}
												],
												"src": "716:552:5"
											},
											{
												"body": {
													"nativeSrc": "1359:442:5",
													"nodeType": "YulBlock",
													"src": "1359:442:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1405:83:5",
																"nodeType": "YulBlock",
																"src": "1405:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1407:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1407:77:5"
																			},
																			"nativeSrc": "1407:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1407:79:5"
																		},
																		"nativeSrc": "1407:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1407:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1380:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1380:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1389:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1389:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1376:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1376:3:5"
																		},
																		"nativeSrc": "1376:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1376:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1401:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1372:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1372:3:5"
																},
																"nativeSrc": "1372:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1372:32:5"
															},
															"nativeSrc": "1369:119:5",
															"nodeType": "YulIf",
															"src": "1369:119:5"
														},
														{
															"nativeSrc": "1498:296:5",
															"nodeType": "YulBlock",
															"src": "1498:296:5",
															"statements": [
																{
																	"nativeSrc": "1513:45:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1513:45:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1544:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1544:9:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1555:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1555:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1540:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1540:3:5"
																				},
																				"nativeSrc": "1540:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1540:17:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1527:12:5",
																			"nodeType": "YulIdentifier",
																			"src": "1527:12:5"
																		},
																		"nativeSrc": "1527:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:31:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1517:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1517:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "1605:83:5",
																		"nodeType": "YulBlock",
																		"src": "1605:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "1607:77:5",
																						"nodeType": "YulIdentifier",
																						"src": "1607:77:5"
																					},
																					"nativeSrc": "1607:79:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1607:79:5"
																				},
																				"nativeSrc": "1607:79:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "1607:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1577:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1577:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1585:18:5",
																				"nodeType": "YulLiteral",
																				"src": "1585:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1574:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1574:2:5"
																		},
																		"nativeSrc": "1574:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1574:30:5"
																	},
																	"nativeSrc": "1571:117:5",
																	"nodeType": "YulIf",
																	"src": "1571:117:5"
																},
																{
																	"nativeSrc": "1702:82:5",
																	"nodeType": "YulAssignment",
																	"src": "1702:82:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1756:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1756:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1767:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1767:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1752:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1752:3:5"
																				},
																				"nativeSrc": "1752:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1752:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1776:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1776:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "1720:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1720:31:5"
																		},
																		"nativeSrc": "1720:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1720:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1702:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1702:6:5"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "1710:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1710:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "1274:527:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1321:9:5",
														"nodeType": "YulTypedName",
														"src": "1321:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1332:7:5",
														"nodeType": "YulTypedName",
														"src": "1332:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1344:6:5",
														"nodeType": "YulTypedName",
														"src": "1344:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1352:6:5",
														"nodeType": "YulTypedName",
														"src": "1352:6:5",
														"type": ""
													}
												],
												"src": "1274:527:5"
											},
											{
												"body": {
													"nativeSrc": "1849:48:5",
													"nodeType": "YulBlock",
													"src": "1849:48:5",
													"statements": [
														{
															"nativeSrc": "1859:32:5",
															"nodeType": "YulAssignment",
															"src": "1859:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1884:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1884:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1877:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:5"
																		},
																		"nativeSrc": "1877:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1877:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1870:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:5"
																},
																"nativeSrc": "1870:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1870:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1859:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1859:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1807:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1831:5:5",
														"nodeType": "YulTypedName",
														"src": "1831:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1841:7:5",
														"nodeType": "YulTypedName",
														"src": "1841:7:5",
														"type": ""
													}
												],
												"src": "1807:90:5"
											},
											{
												"body": {
													"nativeSrc": "1962:50:5",
													"nodeType": "YulBlock",
													"src": "1962:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1979:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1979:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1999:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1999:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1984:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "1984:14:5"
																		},
																		"nativeSrc": "1984:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1972:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:5"
																},
																"nativeSrc": "1972:34:5",
																"nodeType": "YulFunctionCall",
																"src": "1972:34:5"
															},
															"nativeSrc": "1972:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "1972:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1903:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1950:5:5",
														"nodeType": "YulTypedName",
														"src": "1950:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1957:3:5",
														"nodeType": "YulTypedName",
														"src": "1957:3:5",
														"type": ""
													}
												],
												"src": "1903:109:5"
											},
											{
												"body": {
													"nativeSrc": "2076:40:5",
													"nodeType": "YulBlock",
													"src": "2076:40:5",
													"statements": [
														{
															"nativeSrc": "2087:22:5",
															"nodeType": "YulAssignment",
															"src": "2087:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2103:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2103:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2097:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2097:5:5"
																},
																"nativeSrc": "2097:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2097:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2087:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "2018:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2059:5:5",
														"nodeType": "YulTypedName",
														"src": "2059:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2069:6:5",
														"nodeType": "YulTypedName",
														"src": "2069:6:5",
														"type": ""
													}
												],
												"src": "2018:98:5"
											},
											{
												"body": {
													"nativeSrc": "2217:73:5",
													"nodeType": "YulBlock",
													"src": "2217:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2234:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2234:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2239:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2239:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2227:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2227:6:5"
																},
																"nativeSrc": "2227:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2227:19:5"
															},
															"nativeSrc": "2227:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2227:19:5"
														},
														{
															"nativeSrc": "2255:29:5",
															"nodeType": "YulAssignment",
															"src": "2255:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2274:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2274:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2279:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2279:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2270:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2270:3:5"
																},
																"nativeSrc": "2270:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2270:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2255:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "2255:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "2122:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2189:3:5",
														"nodeType": "YulTypedName",
														"src": "2189:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2194:6:5",
														"nodeType": "YulTypedName",
														"src": "2194:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2205:11:5",
														"nodeType": "YulTypedName",
														"src": "2205:11:5",
														"type": ""
													}
												],
												"src": "2122:168:5"
											},
											{
												"body": {
													"nativeSrc": "2358:77:5",
													"nodeType": "YulBlock",
													"src": "2358:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2375:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2375:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2380:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2380:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2385:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2385:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2369:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2369:5:5"
																},
																"nativeSrc": "2369:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2369:23:5"
															},
															"nativeSrc": "2369:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "2369:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2412:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2412:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2417:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2417:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2408:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:5"
																		},
																		"nativeSrc": "2408:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2426:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2426:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2401:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:5"
																},
																"nativeSrc": "2401:27:5",
																"nodeType": "YulFunctionCall",
																"src": "2401:27:5"
															},
															"nativeSrc": "2401:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "2401:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2296:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2340:3:5",
														"nodeType": "YulTypedName",
														"src": "2340:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2345:3:5",
														"nodeType": "YulTypedName",
														"src": "2345:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2350:6:5",
														"nodeType": "YulTypedName",
														"src": "2350:6:5",
														"type": ""
													}
												],
												"src": "2296:139:5"
											},
											{
												"body": {
													"nativeSrc": "2489:54:5",
													"nodeType": "YulBlock",
													"src": "2489:54:5",
													"statements": [
														{
															"nativeSrc": "2499:38:5",
															"nodeType": "YulAssignment",
															"src": "2499:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2517:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2517:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2524:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2513:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2513:3:5"
																		},
																		"nativeSrc": "2513:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2513:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2533:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2533:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2529:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2529:3:5"
																		},
																		"nativeSrc": "2529:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2529:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2509:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2509:3:5"
																},
																"nativeSrc": "2509:28:5",
																"nodeType": "YulFunctionCall",
																"src": "2509:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2499:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2441:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2472:5:5",
														"nodeType": "YulTypedName",
														"src": "2472:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2482:6:5",
														"nodeType": "YulTypedName",
														"src": "2482:6:5",
														"type": ""
													}
												],
												"src": "2441:102:5"
											},
											{
												"body": {
													"nativeSrc": "2639:283:5",
													"nodeType": "YulBlock",
													"src": "2639:283:5",
													"statements": [
														{
															"nativeSrc": "2649:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2649:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2695:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2695:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "2663:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "2663:31:5"
																},
																"nativeSrc": "2663:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2663:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2653:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2653:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2710:77:5",
															"nodeType": "YulAssignment",
															"src": "2710:77:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2775:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2775:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2780:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "2717:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "2717:57:5"
																},
																"nativeSrc": "2717:70:5",
																"nodeType": "YulFunctionCall",
																"src": "2717:70:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2710:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2710:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2835:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2835:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2842:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2842:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2831:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2831:3:5"
																		},
																		"nativeSrc": "2831:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2831:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2849:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2849:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2854:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2854:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2796:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "2796:34:5"
																},
																"nativeSrc": "2796:65:5",
																"nodeType": "YulFunctionCall",
																"src": "2796:65:5"
															},
															"nativeSrc": "2796:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "2796:65:5"
														},
														{
															"nativeSrc": "2870:46:5",
															"nodeType": "YulAssignment",
															"src": "2870:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2881:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2881:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2908:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2908:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2886:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "2886:21:5"
																		},
																		"nativeSrc": "2886:29:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2886:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2877:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2877:3:5"
																},
																"nativeSrc": "2877:39:5",
																"nodeType": "YulFunctionCall",
																"src": "2877:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2870:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "2549:373:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2620:5:5",
														"nodeType": "YulTypedName",
														"src": "2620:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2627:3:5",
														"nodeType": "YulTypedName",
														"src": "2627:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2635:3:5",
														"nodeType": "YulTypedName",
														"src": "2635:3:5",
														"type": ""
													}
												],
												"src": "2549:373:5"
											},
											{
												"body": {
													"nativeSrc": "3066:269:5",
													"nodeType": "YulBlock",
													"src": "3066:269:5",
													"statements": [
														{
															"nativeSrc": "3076:26:5",
															"nodeType": "YulAssignment",
															"src": "3076:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3088:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3088:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3099:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3099:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3084:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3084:3:5"
																},
																"nativeSrc": "3084:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3084:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3076:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3076:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3150:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3150:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3163:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3174:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3174:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3159:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3159:3:5"
																		},
																		"nativeSrc": "3159:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3159:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3112:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "3112:37:5"
																},
																"nativeSrc": "3112:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3112:65:5"
															},
															"nativeSrc": "3112:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3112:65:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3198:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3209:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3209:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3194:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3194:3:5"
																		},
																		"nativeSrc": "3194:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3218:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3218:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3224:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3224:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3214:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3214:3:5"
																		},
																		"nativeSrc": "3214:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3214:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3187:6:5"
																},
																"nativeSrc": "3187:48:5",
																"nodeType": "YulFunctionCall",
																"src": "3187:48:5"
															},
															"nativeSrc": "3187:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "3187:48:5"
														},
														{
															"nativeSrc": "3244:84:5",
															"nodeType": "YulAssignment",
															"src": "3244:84:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3314:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3314:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3323:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3323:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "3252:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "3252:61:5"
																},
																"nativeSrc": "3252:76:5",
																"nodeType": "YulFunctionCall",
																"src": "3252:76:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3244:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3244:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "2928:407:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3030:9:5",
														"nodeType": "YulTypedName",
														"src": "3030:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3042:6:5",
														"nodeType": "YulTypedName",
														"src": "3042:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3050:6:5",
														"nodeType": "YulTypedName",
														"src": "3050:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3061:4:5",
														"nodeType": "YulTypedName",
														"src": "3061:4:5",
														"type": ""
													}
												],
												"src": "2928:407:5"
											},
											{
												"body": {
													"nativeSrc": "3386:81:5",
													"nodeType": "YulBlock",
													"src": "3386:81:5",
													"statements": [
														{
															"nativeSrc": "3396:65:5",
															"nodeType": "YulAssignment",
															"src": "3396:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3411:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3411:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3418:42:5",
																		"nodeType": "YulLiteral",
																		"src": "3418:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3407:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3407:3:5"
																},
																"nativeSrc": "3407:54:5",
																"nodeType": "YulFunctionCall",
																"src": "3407:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3396:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3396:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3341:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3368:5:5",
														"nodeType": "YulTypedName",
														"src": "3368:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3378:7:5",
														"nodeType": "YulTypedName",
														"src": "3378:7:5",
														"type": ""
													}
												],
												"src": "3341:126:5"
											},
											{
												"body": {
													"nativeSrc": "3518:51:5",
													"nodeType": "YulBlock",
													"src": "3518:51:5",
													"statements": [
														{
															"nativeSrc": "3528:35:5",
															"nodeType": "YulAssignment",
															"src": "3528:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3557:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3557:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3539:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3539:17:5"
																},
																"nativeSrc": "3539:24:5",
																"nodeType": "YulFunctionCall",
																"src": "3539:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3528:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3528:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3473:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3500:5:5",
														"nodeType": "YulTypedName",
														"src": "3500:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3510:7:5",
														"nodeType": "YulTypedName",
														"src": "3510:7:5",
														"type": ""
													}
												],
												"src": "3473:96:5"
											},
											{
												"body": {
													"nativeSrc": "3640:53:5",
													"nodeType": "YulBlock",
													"src": "3640:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3657:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3657:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3680:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3680:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3662:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3662:17:5"
																		},
																		"nativeSrc": "3662:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3662:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3650:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3650:6:5"
																},
																"nativeSrc": "3650:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3650:37:5"
															},
															"nativeSrc": "3650:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3650:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3575:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3628:5:5",
														"nodeType": "YulTypedName",
														"src": "3628:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3635:3:5",
														"nodeType": "YulTypedName",
														"src": "3635:3:5",
														"type": ""
													}
												],
												"src": "3575:118:5"
											},
											{
												"body": {
													"nativeSrc": "3797:124:5",
													"nodeType": "YulBlock",
													"src": "3797:124:5",
													"statements": [
														{
															"nativeSrc": "3807:26:5",
															"nodeType": "YulAssignment",
															"src": "3807:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3819:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3819:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3830:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3830:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3815:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3815:3:5"
																},
																"nativeSrc": "3815:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3815:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3807:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3807:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3887:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3887:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3900:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3900:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3911:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3911:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3896:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:5"
																		},
																		"nativeSrc": "3896:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3896:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3843:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3843:43:5"
																},
																"nativeSrc": "3843:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3843:71:5"
															},
															"nativeSrc": "3843:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3843:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3699:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3769:9:5",
														"nodeType": "YulTypedName",
														"src": "3769:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3781:6:5",
														"nodeType": "YulTypedName",
														"src": "3781:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3792:4:5",
														"nodeType": "YulTypedName",
														"src": "3792:4:5",
														"type": ""
													}
												],
												"src": "3699:222:5"
											},
											{
												"body": {
													"nativeSrc": "3972:32:5",
													"nodeType": "YulBlock",
													"src": "3972:32:5",
													"statements": [
														{
															"nativeSrc": "3982:16:5",
															"nodeType": "YulAssignment",
															"src": "3982:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "3993:5:5",
																"nodeType": "YulIdentifier",
																"src": "3993:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3982:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3982:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3927:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3954:5:5",
														"nodeType": "YulTypedName",
														"src": "3954:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3964:7:5",
														"nodeType": "YulTypedName",
														"src": "3964:7:5",
														"type": ""
													}
												],
												"src": "3927:77:5"
											},
											{
												"body": {
													"nativeSrc": "4053:79:5",
													"nodeType": "YulBlock",
													"src": "4053:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4110:16:5",
																"nodeType": "YulBlock",
																"src": "4110:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4119:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4119:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4122:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4122:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4112:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4112:6:5"
																			},
																			"nativeSrc": "4112:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4112:12:5"
																		},
																		"nativeSrc": "4112:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4112:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4076:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4076:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4101:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4101:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4083:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "4083:17:5"
																				},
																				"nativeSrc": "4083:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4083:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4073:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4073:2:5"
																		},
																		"nativeSrc": "4073:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4073:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4066:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4066:6:5"
																},
																"nativeSrc": "4066:43:5",
																"nodeType": "YulFunctionCall",
																"src": "4066:43:5"
															},
															"nativeSrc": "4063:63:5",
															"nodeType": "YulIf",
															"src": "4063:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4010:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4046:5:5",
														"nodeType": "YulTypedName",
														"src": "4046:5:5",
														"type": ""
													}
												],
												"src": "4010:122:5"
											},
											{
												"body": {
													"nativeSrc": "4201:80:5",
													"nodeType": "YulBlock",
													"src": "4201:80:5",
													"statements": [
														{
															"nativeSrc": "4211:22:5",
															"nodeType": "YulAssignment",
															"src": "4211:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4226:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4226:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4220:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:5"
																},
																"nativeSrc": "4220:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4220:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4211:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4211:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4269:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4269:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4242:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4242:26:5"
																},
																"nativeSrc": "4242:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4242:33:5"
															},
															"nativeSrc": "4242:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4242:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4138:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4179:6:5",
														"nodeType": "YulTypedName",
														"src": "4179:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4187:3:5",
														"nodeType": "YulTypedName",
														"src": "4187:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4195:5:5",
														"nodeType": "YulTypedName",
														"src": "4195:5:5",
														"type": ""
													}
												],
												"src": "4138:143:5"
											},
											{
												"body": {
													"nativeSrc": "4364:274:5",
													"nodeType": "YulBlock",
													"src": "4364:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4410:83:5",
																"nodeType": "YulBlock",
																"src": "4410:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4412:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4412:77:5"
																			},
																			"nativeSrc": "4412:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4412:79:5"
																		},
																		"nativeSrc": "4412:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4412:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4385:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4385:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4394:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4394:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4381:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4381:3:5"
																		},
																		"nativeSrc": "4381:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4381:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4406:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4377:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4377:3:5"
																},
																"nativeSrc": "4377:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4377:32:5"
															},
															"nativeSrc": "4374:119:5",
															"nodeType": "YulIf",
															"src": "4374:119:5"
														},
														{
															"nativeSrc": "4503:128:5",
															"nodeType": "YulBlock",
															"src": "4503:128:5",
															"statements": [
																{
																	"nativeSrc": "4518:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4518:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4532:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4532:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4522:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4522:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4547:74:5",
																	"nodeType": "YulAssignment",
																	"src": "4547:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4593:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4593:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4604:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4604:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4589:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4589:3:5"
																				},
																				"nativeSrc": "4589:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4589:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4613:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4613:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4557:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4557:31:5"
																		},
																		"nativeSrc": "4557:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4557:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4547:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4547:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4287:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4334:9:5",
														"nodeType": "YulTypedName",
														"src": "4334:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4345:7:5",
														"nodeType": "YulTypedName",
														"src": "4345:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4357:6:5",
														"nodeType": "YulTypedName",
														"src": "4357:6:5",
														"type": ""
													}
												],
												"src": "4287:351:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"89": [
									{
										"length": 32,
										"start": 226
									},
									{
										"length": 32,
										"start": 556
									},
									{
										"length": 32,
										"start": 794
									}
								],
								"91": [
									{
										"length": 32,
										"start": 286
									},
									{
										"length": 32,
										"start": 416
									},
									{
										"length": 32,
										"start": 616
									},
									{
										"length": 32,
										"start": 758
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80634585e33b1461004e5780636e04ff0d1461006a57806376cdb03b1461009b578063fc0c546a146100b9575b5f80fd5b610068600480360381019061006391906103a5565b6100d7565b005b610084600480360381019061007f91906103a5565b61021e565b60405161009292919061047a565b60405180910390f35b6100a36102f4565b6040516100b091906104e7565b60405180910390f35b6100c1610318565b6040516100ce91906104e7565b60405180910390f35b674563918244f400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a082317f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161015991906104e7565b602060405180830381865afa158015610174573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101989190610533565b111561021a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e52253816040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610203575f80fd5b505af1158015610215573d5f803e3d5ffd5b505050505b5050565b5f6060674563918244f400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a082317f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016102a391906104e7565b602060405180830381865afa1580156102be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102e29190610533565b11156102ed57600191505b9250929050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261036557610364610344565b5b8235905067ffffffffffffffff81111561038257610381610348565b5b60208301915083600182028301111561039e5761039d61034c565b5b9250929050565b5f80602083850312156103bb576103ba61033c565b5b5f83013567ffffffffffffffff8111156103d8576103d7610340565b5b6103e485828601610350565b92509250509250929050565b5f8115159050919050565b610404816103f0565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61044c8261040a565b6104568185610414565b9350610466818560208601610424565b61046f81610432565b840191505092915050565b5f60408201905061048d5f8301856103fb565b818103602083015261049f8184610442565b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104d1826104a8565b9050919050565b6104e1816104c7565b82525050565b5f6020820190506104fa5f8301846104d8565b92915050565b5f819050919050565b61051281610500565b811461051c575f80fd5b50565b5f8151905061052d81610509565b92915050565b5f602082840312156105485761054761033c565b5b5f6105558482850161051f565b9150509291505056fea2646970667358221220e65970b56d93186dc28fea8388d53c303766fcac4fdafb8c168666c8b5372f0d64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4585E33B EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP3 SWAP2 SWAP1 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH8 0x4563918244F40000 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x174 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST GT ISZERO PUSH2 0x21A JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE5225381 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH8 0x4563918244F40000 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST GT ISZERO PUSH2 0x2ED JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x365 JUMPI PUSH2 0x364 PUSH2 0x344 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x348 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0x34C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x33C JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D7 PUSH2 0x340 JUMP JUMPDEST JUMPDEST PUSH2 0x3E4 DUP6 DUP3 DUP7 ADD PUSH2 0x350 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x404 DUP2 PUSH2 0x3F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x44C DUP3 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x456 DUP2 DUP6 PUSH2 0x414 JUMP JUMPDEST SWAP4 POP PUSH2 0x466 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0x46F DUP2 PUSH2 0x432 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x48D PUSH0 DUP4 ADD DUP6 PUSH2 0x3FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x49F DUP2 DUP5 PUSH2 0x442 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D1 DUP3 PUSH2 0x4A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E1 DUP2 PUSH2 0x4C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4FA PUSH0 DUP4 ADD DUP5 PUSH2 0x4D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x512 DUP2 PUSH2 0x500 JUMP JUMPDEST DUP2 EQ PUSH2 0x51C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x52D DUP2 PUSH2 0x509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x548 JUMPI PUSH2 0x547 PUSH2 0x33C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x555 DUP5 DUP3 DUP6 ADD PUSH2 0x51F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 MSIZE PUSH17 0xB56D93186DC28FEA8388D53C303766FCAC 0x4F 0xDA 0xFB DUP13 AND DUP7 PUSH7 0xC8B5372F0D6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "186:704:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;408:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;275:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;241:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;731:156;841:4;816:5;809:23;;;833:4;809:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;806:77;;;861:4;855:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:77;731:156;;:::o;408:318::-;487:17;506:24;646:4;621:5;614:23;;;638:4;614:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;611:75;;;675:4;660:19;;611:75;408:318;;;;;:::o;275:29::-;;;:::o;241:30::-;;;:::o;88:117:5:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;716:552;773:8;783:6;833:3;826:4;818:6;814:17;810:27;800:122;;841:79;;:::i;:::-;800:122;954:6;941:20;931:30;;984:18;976:6;973:30;970:117;;;1006:79;;:::i;:::-;970:117;1120:4;1112:6;1108:17;1096:29;;1174:3;1166:4;1158:6;1154:17;1144:8;1140:32;1137:41;1134:128;;;1181:79;;:::i;:::-;1134:128;716:552;;;;;:::o;1274:527::-;1344:6;1352;1401:2;1389:9;1380:7;1376:23;1372:32;1369:119;;;1407:79;;:::i;:::-;1369:119;1555:1;1544:9;1540:17;1527:31;1585:18;1577:6;1574:30;1571:117;;;1607:79;;:::i;:::-;1571:117;1720:64;1776:7;1767:6;1756:9;1752:22;1720:64;:::i;:::-;1702:82;;;;1498:296;1274:527;;;;;:::o;1807:90::-;1841:7;1884:5;1877:13;1870:21;1859:32;;1807:90;;;:::o;1903:109::-;1984:21;1999:5;1984:21;:::i;:::-;1979:3;1972:34;1903:109;;:::o;2018:98::-;2069:6;2103:5;2097:12;2087:22;;2018:98;;;:::o;2122:168::-;2205:11;2239:6;2234:3;2227:19;2279:4;2274:3;2270:14;2255:29;;2122:168;;;;:::o;2296:139::-;2385:6;2380:3;2375;2369:23;2426:1;2417:6;2412:3;2408:16;2401:27;2296:139;;;:::o;2441:102::-;2482:6;2533:2;2529:7;2524:2;2517:5;2513:14;2509:28;2499:38;;2441:102;;;:::o;2549:373::-;2635:3;2663:38;2695:5;2663:38;:::i;:::-;2717:70;2780:6;2775:3;2717:70;:::i;:::-;2710:77;;2796:65;2854:6;2849:3;2842:4;2835:5;2831:16;2796:65;:::i;:::-;2886:29;2908:6;2886:29;:::i;:::-;2881:3;2877:39;2870:46;;2639:283;2549:373;;;;:::o;2928:407::-;3061:4;3099:2;3088:9;3084:18;3076:26;;3112:65;3174:1;3163:9;3159:17;3150:6;3112:65;:::i;:::-;3224:9;3218:4;3214:20;3209:2;3198:9;3194:18;3187:48;3252:76;3323:4;3314:6;3252:76;:::i;:::-;3244:84;;2928:407;;;;;:::o;3341:126::-;3378:7;3418:42;3411:5;3407:54;3396:65;;3341:126;;;:::o;3473:96::-;3510:7;3539:24;3557:5;3539:24;:::i;:::-;3528:35;;3473:96;;;:::o;3575:118::-;3662:24;3680:5;3662:24;:::i;:::-;3657:3;3650:37;3575:118;;:::o;3699:222::-;3792:4;3830:2;3819:9;3815:18;3807:26;;3843:71;3911:1;3900:9;3896:17;3887:6;3843:71;:::i;:::-;3699:222;;;;:::o;3927:77::-;3964:7;3993:5;3982:16;;3927:77;;;:::o;4010:122::-;4083:24;4101:5;4083:24;:::i;:::-;4076:5;4073:35;4063:63;;4122:1;4119;4112:12;4063:63;4010:122;:::o;4138:143::-;4195:5;4226:6;4220:13;4211:22;;4242:33;4269:5;4242:33;:::i;:::-;4138:143;;;;:::o;4287:351::-;4357:6;4406:2;4394:9;4385:7;4381:23;4377:32;4374:119;;;4412:79;;:::i;:::-;4374:119;4532:1;4557:64;4613:7;4604:6;4593:9;4589:22;4557:64;:::i;:::-;4547:74;;4503:128;4287:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "285600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bank()": "infinite",
								"checkUpkeep(bytes)": "infinite",
								"performUpkeep(bytes)": "infinite",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 404,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 404,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 404,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 309,
									"end": 404,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 309,
									"end": 404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 309,
									"end": 404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 376,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 362,
									"end": 376,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 362,
									"end": 376,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 362,
									"end": 376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 376,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 362,
									"end": 376,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 362,
									"end": 376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 376,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 362,
									"end": 376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 362,
									"end": 376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 393,
									"end": 398,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 386,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 386,
									"end": 398,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 386,
									"end": 398,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 386,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 386,
									"end": 398,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 398,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 386,
									"end": 398,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 386,
									"end": 398,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 386,
									"end": 398,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 404,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 186,
									"end": 890,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 890,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e65970b56d93186dc28fea8388d53c303766fcac4fdafb8c168666c8b5372f0d64736f6c63430008190033",
									".code": [
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "4585E33B"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "6E04FF0D"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "76CDB03B"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "FC0C546A"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 186,
											"end": 890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 731,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 731,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 731,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 731,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 731,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 731,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 731,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 731,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 408,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 408,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 408,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 275,
											"end": 304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 275,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 275,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 275,
											"end": 304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 275,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 241,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 271,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 271,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 271,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 731,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 841,
											"end": 845,
											"name": "PUSH",
											"source": 1,
											"value": "4563918244F40000"
										},
										{
											"begin": 816,
											"end": 821,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 809,
											"end": 832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 809,
											"end": 832,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 809,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 809,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 809,
											"end": 845,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 806,
											"end": 883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 806,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 806,
											"end": 883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 861,
											"end": 865,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 855,
											"end": 874,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 855,
											"end": 874,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 855,
											"end": 874,
											"name": "PUSH",
											"source": 1,
											"value": "E5225381"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 855,
											"end": 876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 806,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 731,
											"end": 887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 408,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 646,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "4563918244F40000"
										},
										{
											"begin": 621,
											"end": 626,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 614,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 614,
											"end": 637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 614,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 638,
											"end": 642,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 614,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 614,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 614,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 650,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 611,
											"end": 686,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 611,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 611,
											"end": 686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 675,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 660,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 686,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 611,
											"end": 686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 408,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 275,
											"end": 304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 275,
											"end": 304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 275,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 241,
											"end": 271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 241,
											"end": 271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 773,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 824,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 814,
											"end": 831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 810,
											"end": 837,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 800,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 800,
											"end": 922,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 841,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 841,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 920,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 922,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 800,
											"end": 922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 941,
											"end": 961,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 931,
											"end": 961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 982,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1006,
											"end": 1085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1125,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1177,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1170,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1171,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1181,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 716,
											"end": 1268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1801,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1274,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1344,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1387,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1404,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1369,
											"end": 1488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1407,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1486,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1407,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1369,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1558,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1603,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1577,
											"end": 1583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1688,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1571,
											"end": 1688,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1607,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1607,
											"end": 1686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1686,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1607,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1688,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1571,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1756,
											"end": 1765,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1720,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1784,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1720,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1784,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1784,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1801,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1801,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1897,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1807,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1890,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1903,
											"end": 2012,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1903,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1984,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1903,
											"end": 2012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1903,
											"end": 2012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1903,
											"end": 2012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2116,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2018,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2109,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2290,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2122,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2245,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2283,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2270,
											"end": 2284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2290,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2290,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2435,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2296,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2378,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2392,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2424,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2543,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2441,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2529,
											"end": 2536,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2526,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2517,
											"end": 2522,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2537,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2543,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2922,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2549,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2663,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2778,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2717,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2787,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2717,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2787,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2854,
											"end": 2860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2852,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 2847,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2796,
											"end": 2861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2861,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2796,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2908,
											"end": 2914,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2886,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2915,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2886,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 2884,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 2916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 2916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2922,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2922,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 3335,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2928,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3065,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3101,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3084,
											"end": 3102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3112,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3177,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3112,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3218,
											"end": 3222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3234,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3198,
											"end": 3207,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3235,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3252,
											"end": 3328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3328,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3252,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 3335,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 3335,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 3335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 3335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 3335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 3335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3461,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3539,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3563,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3539,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3693,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3575,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3662,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3686,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3662,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3921,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3699,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3832,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3807,
											"end": 3833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3807,
											"end": 3833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3911,
											"end": 3912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3893,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3843,
											"end": 3914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3914,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3843,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3921,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4004,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3927,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 3971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4004,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4004,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4132,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4010,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4083,
											"end": 4107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4108,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4063,
											"end": 4126,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4126,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4063,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4281,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4138,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 4200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4220,
											"end": 4233,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4269,
											"end": 4274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4242,
											"end": 4275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4242,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4638,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4287,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4357,
											"end": 4363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4406,
											"end": 4408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4394,
											"end": 4403,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4381,
											"end": 4404,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4409,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4374,
											"end": 4493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4412,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4491,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4412,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4493,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4374,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4532,
											"end": 4533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4613,
											"end": 4620,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4602,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4557,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4621,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4557,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4621,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4638,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4638,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4638,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4638,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"src/AutoCollectUpKeep.sol",
								"src/automation/AutomationBase.sol",
								"src/automation/AutomationCompatible.sol",
								"src/automation/AutomationCompatibleInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bank()": "76cdb03b",
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bank\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"bank\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AutoCollectUpKeep.sol\":\"AutoCollectUpKeep\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"src/AutoCollectUpKeep.sol\":{\"keccak256\":\"0xc6939455b6578aa60b11a482606a0403b80e8d405e58beadb32844aebe487c5b\",\"urls\":[\"bzz-raw://ef38f2032641776c7cc7c817d0dc1d1633beb5f5530b5c815e367361a34ddd46\",\"dweb:/ipfs/QmUBKBqng5HAp3HUx5u8GeK6WNv4nxAo9CBeAf8EssM3Gn\"]},\"src/automation/AutomationBase.sol\":{\"keccak256\":\"0x5d78f0751d8c5d932f03c906ee1667619d2bb010d8d8411ddd91221816c01918\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8aff4bd30528ca7ee610ba941f1887e80f7a5cc2e13292b641e37781fb78dd\",\"dweb:/ipfs/Qmc328bcmxWykaAZWDtWNFKJDLka8NLyUev259hMUcfaos\"]},\"src/automation/AutomationCompatible.sol\":{\"keccak256\":\"0x4b0be178174348feb14489c64ba2b1c50a1e7da6189c196c94fa728360f42a65\",\"urls\":[\"bzz-raw://fd306cab2443e7c2da03a5eb5cbfd26c4f358e942394c9ea0d7c78c9616626a2\",\"dweb:/ipfs/QmSm5NMYWzMD2vXRHDjziz9HmnHxsapNVQwhsh5kwWmvJ5\"]},\"src/automation/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x9ffdd3353be8a612bd95f5ffb8dcab21d0eef54e3c6b4c0638e0d309502a2746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296a33ee6c5c9c919a3f09da97ac98cf415d6ec33f9b871e30b70bddba44acde\",\"dweb:/ipfs/QmPtFVFhVPw4xqVRHgvdE8qXjw9WVSPf7j77Cr1ib7UqAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				},
				"IBank": {
					"abi": [
						{
							"inputs": [],
							"name": "collect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collect()": "e5225381"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AutoCollectUpKeep.sol\":\"IBank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"src/AutoCollectUpKeep.sol\":{\"keccak256\":\"0xc6939455b6578aa60b11a482606a0403b80e8d405e58beadb32844aebe487c5b\",\"urls\":[\"bzz-raw://ef38f2032641776c7cc7c817d0dc1d1633beb5f5530b5c815e367361a34ddd46\",\"dweb:/ipfs/QmUBKBqng5HAp3HUx5u8GeK6WNv4nxAo9CBeAf8EssM3Gn\"]},\"src/automation/AutomationBase.sol\":{\"keccak256\":\"0x5d78f0751d8c5d932f03c906ee1667619d2bb010d8d8411ddd91221816c01918\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8aff4bd30528ca7ee610ba941f1887e80f7a5cc2e13292b641e37781fb78dd\",\"dweb:/ipfs/Qmc328bcmxWykaAZWDtWNFKJDLka8NLyUev259hMUcfaos\"]},\"src/automation/AutomationCompatible.sol\":{\"keccak256\":\"0x4b0be178174348feb14489c64ba2b1c50a1e7da6189c196c94fa728360f42a65\",\"urls\":[\"bzz-raw://fd306cab2443e7c2da03a5eb5cbfd26c4f358e942394c9ea0d7c78c9616626a2\",\"dweb:/ipfs/QmSm5NMYWzMD2vXRHDjziz9HmnHxsapNVQwhsh5kwWmvJ5\"]},\"src/automation/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x9ffdd3353be8a612bd95f5ffb8dcab21d0eef54e3c6b4c0638e0d309502a2746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296a33ee6c5c9c919a3f09da97ac98cf415d6ec33f9b871e30b70bddba44acde\",\"dweb:/ipfs/QmPtFVFhVPw4xqVRHgvdE8qXjw9WVSPf7j77Cr1ib7UqAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/automation/AutomationBase.sol": {
				"AutomationBase": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/automation/AutomationBase.sol\":57:572  contract AutomationBase {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/automation/AutomationBase.sol\":57:572  contract AutomationBase {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a067134200f678e4b12c340ba0fbce721bfeec45f28b1e0b64faa1ab9306f26664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220a067134200f678e4b12c340ba0fbce721bfeec45f28b1e0b64faa1ab9306f26664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH8 0x134200F678E4B12C CALLVALUE SIGNEXTEND LOG0 0xFB 0xCE PUSH19 0x1BFEEC45F28B1E0B64FAA1AB9306F26664736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "57:515:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220a067134200f678e4b12c340ba0fbce721bfeec45f28b1e0b64faa1ab9306f26664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH8 0x134200F678E4B12C CALLVALUE SIGNEXTEND LOG0 0xFB 0xCE PUSH19 0x1BFEEC45F28B1E0B64FAA1AB9306F26664736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "57:515:2:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"preventExecution()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a067134200f678e4b12c340ba0fbce721bfeec45f28b1e0b64faa1ab9306f26664736f6c63430008190033",
									".code": [
										{
											"begin": 57,
											"end": 572,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 57,
											"end": 572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 572,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"src/AutoCollectUpKeep.sol",
								"src/automation/AutomationBase.sol",
								"src/automation/AutomationCompatible.sol",
								"src/automation/AutomationCompatibleInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/automation/AutomationBase.sol\":{\"keccak256\":\"0x5d78f0751d8c5d932f03c906ee1667619d2bb010d8d8411ddd91221816c01918\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8aff4bd30528ca7ee610ba941f1887e80f7a5cc2e13292b641e37781fb78dd\",\"dweb:/ipfs/Qmc328bcmxWykaAZWDtWNFKJDLka8NLyUev259hMUcfaos\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/automation/AutomationCompatible.sol": {
				"AutomationCompatible": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/automation/AutomationBase.sol\":{\"keccak256\":\"0x5d78f0751d8c5d932f03c906ee1667619d2bb010d8d8411ddd91221816c01918\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8aff4bd30528ca7ee610ba941f1887e80f7a5cc2e13292b641e37781fb78dd\",\"dweb:/ipfs/Qmc328bcmxWykaAZWDtWNFKJDLka8NLyUev259hMUcfaos\"]},\"src/automation/AutomationCompatible.sol\":{\"keccak256\":\"0x4b0be178174348feb14489c64ba2b1c50a1e7da6189c196c94fa728360f42a65\",\"urls\":[\"bzz-raw://fd306cab2443e7c2da03a5eb5cbfd26c4f358e942394c9ea0d7c78c9616626a2\",\"dweb:/ipfs/QmSm5NMYWzMD2vXRHDjziz9HmnHxsapNVQwhsh5kwWmvJ5\"]},\"src/automation/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x9ffdd3353be8a612bd95f5ffb8dcab21d0eef54e3c6b4c0638e0d309502a2746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296a33ee6c5c9c919a3f09da97ac98cf415d6ec33f9b871e30b70bddba44acde\",\"dweb:/ipfs/QmPtFVFhVPw4xqVRHgvdE8qXjw9WVSPf7j77Cr1ib7UqAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"src/automation/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/automation/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/automation/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x9ffdd3353be8a612bd95f5ffb8dcab21d0eef54e3c6b4c0638e0d309502a2746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296a33ee6c5c9c919a3f09da97ac98cf415d6ec33f9b871e30b70bddba44acde\",\"dweb:/ipfs/QmPtFVFhVPw4xqVRHgvdE8qXjw9WVSPf7j77Cr1ib7UqAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/AutoCollectUpKeep.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/AutoCollectUpKeep.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/automation/AutomationCompatible.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/automation/AutomationCompatible.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/AutoCollectUpKeep.sol:21:24:\n   |\n21 |   function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 453,
					"file": "src/AutoCollectUpKeep.sol",
					"start": 429
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/AutoCollectUpKeep.sol:21:101:\n   |\n21 |   function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {\n   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 530,
					"file": "src/AutoCollectUpKeep.sol",
					"start": 506
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/AutoCollectUpKeep.sol:32:26:\n   |\n32 |   function performUpkeep(bytes calldata performData) external override {\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 780,
					"file": "src/AutoCollectUpKeep.sol",
					"start": 754
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"src/AutoCollectUpKeep.sol": {
				"ast": {
					"absolutePath": "src/AutoCollectUpKeep.sol",
					"exportedSymbols": {
						"AutoCollectUpKeep": [
							156
						],
						"AutomationBase": [
							186
						],
						"AutomationCompatible": [
							195
						],
						"AutomationCompatibleInterface": [
							214
						],
						"IBank": [
							85
						],
						"IERC20": [
							77
						]
					},
					"id": 157,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 157,
							"sourceUnit": 78,
							"src": "25:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/automation/AutomationCompatible.sol",
							"file": "./automation/AutomationCompatible.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 157,
							"sourceUnit": 196,
							"src": "82:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBank",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 85,
							"linearizedBaseContracts": [
								85
							],
							"name": "IBank",
							"nameLocation": "142:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e5225381",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "163:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:2:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:0:1"
									},
									"scope": 85,
									"src": "154:28:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 157,
							"src": "132:52:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 86,
										"name": "AutomationCompatible",
										"nameLocations": [
											"216:20:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "216:20:1"
									},
									"id": 87,
									"nodeType": "InheritanceSpecifier",
									"src": "216:20:1"
								}
							],
							"canonicalName": "AutoCollectUpKeep",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 156,
							"linearizedBaseContracts": [
								156,
								195,
								214,
								186
							],
							"name": "AutoCollectUpKeep",
							"nameLocation": "195:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 89,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "266:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 156,
									"src": "241:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 88,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "241:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "76cdb03b",
									"id": 91,
									"mutability": "immutable",
									"name": "bank",
									"nameLocation": "300:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 156,
									"src": "275:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 90,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "352:52:1",
										"statements": [
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 98,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "362:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 99,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "370:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "362:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "362:14:1"
											},
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 102,
														"name": "bank",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "386:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 103,
														"name": "_bank",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "393:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "386:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "386:12:1"
											}
										]
									},
									"id": 107,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "329:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "321:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_bank",
												"nameLocation": "345:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "337:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:31:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:0:1"
									},
									"scope": 156,
									"src": "309:95:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										207
									],
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "532:194:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 121,
																"name": "bank",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "638:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 118,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 89,
																		"src": "621:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 117,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "614:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "614:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "628:9:1",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "614:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "614:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "35653138",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "646:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000"
														},
														"value": "5e18"
													},
													"src": "614:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "IfStatement",
												"src": "611:75:1",
												"trueBody": {
													"id": 129,
													"nodeType": "Block",
													"src": "652:34:1",
													"statements": [
														{
															"expression": {
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 125,
																	"name": "upkeepNeeded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "660:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "675:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "660:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 128,
															"nodeType": "ExpressionStatement",
															"src": "660:19:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "417:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 111,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "469:8:1"
									},
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "444:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "429:24:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 108,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "429:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:26:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "492:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "487:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "519:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "506:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "506:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:45:1"
									},
									"scope": 156,
									"src": "408:318:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										213
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "800:87:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 142,
																"name": "bank",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "833:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 139,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 89,
																		"src": "816:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 138,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "809:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "809:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "823:9:1",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "809:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "809:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "35653138",
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "841:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000"
														},
														"value": "5e18"
													},
													"src": "809:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"nodeType": "IfStatement",
												"src": "806:77:1",
												"trueBody": {
													"id": 152,
													"nodeType": "Block",
													"src": "847:36:1",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 147,
																				"name": "bank",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 91,
																				"src": "861:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 146,
																			"name": "IBank",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 85,
																			"src": "855:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IBank_$85_$",
																				"typeString": "type(contract IBank)"
																			}
																		},
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "855:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBank_$85",
																			"typeString": "contract IBank"
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "867:7:1",
																	"memberName": "collect",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 84,
																	"src": "855:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
																		"typeString": "function () external"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "855:21:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 151,
															"nodeType": "ExpressionStatement",
															"src": "855:21:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "740:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "791:8:1"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "769:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "754:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "754:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:28:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:1"
									},
									"scope": 156,
									"src": "731:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 157,
							"src": "186:704:1",
							"usedErrors": [
								160
							],
							"usedEvents": []
						}
					],
					"src": "0:890:1"
				},
				"id": 1
			},
			"src/automation/AutomationBase.sol": {
				"ast": {
					"absolutePath": "src/automation/AutomationBase.sol",
					"exportedSymbols": {
						"AutomationBase": [
							186
						]
					},
					"id": 187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 158,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 186,
							"linearizedBaseContracts": [
								186
							],
							"name": "AutomationBase",
							"nameLocation": "66:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "b60ac5db",
									"id": 160,
									"name": "OnlySimulatedBackend",
									"nameLocation": "91:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:2"
									},
									"src": "85:29:2"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "290:83:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 164,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967270,
															"src": "300:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "303:6:2",
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"src": "300:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 166,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "313:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "313:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "300:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "IfStatement",
												"src": "296:73:2",
												"trueBody": {
													"id": 174,
													"nodeType": "Block",
													"src": "325:44:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 171,
																	"name": "OnlySimulatedBackend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "340:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "340:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 173,
															"nodeType": "RevertStatement",
															"src": "333:29:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "118:127:2",
										"text": " @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preventExecution",
									"nameLocation": "257:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:2:2"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:0:2"
									},
									"scope": 186,
									"src": "248:125:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "534:36:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 180,
														"name": "preventExecution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "540:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "540:18:2"
											},
											{
												"id": 183,
												"nodeType": "PlaceholderStatement",
												"src": "564:1:2"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "377:129:2",
										"text": " @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."
									},
									"id": 185,
									"name": "cannotExecute",
									"nameLocation": "518:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:2:2"
									},
									"src": "509:61:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 187,
							"src": "57:515:2",
							"usedErrors": [
								160
							],
							"usedEvents": []
						}
					],
					"src": "32:540:2"
				},
				"id": 2
			},
			"src/automation/AutomationCompatible.sol": {
				"ast": {
					"absolutePath": "src/automation/AutomationCompatible.sol",
					"exportedSymbols": {
						"AutomationBase": [
							186
						],
						"AutomationCompatible": [
							195
						],
						"AutomationCompatibleInterface": [
							214
						]
					},
					"id": 196,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "src/automation/AutomationBase.sol",
							"file": "./AutomationBase.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 196,
							"sourceUnit": 187,
							"src": "25:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/automation/AutomationCompatibleInterface.sol",
							"file": "./AutomationCompatibleInterface.sol",
							"id": 190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 196,
							"sourceUnit": 215,
							"src": "56:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 191,
										"name": "AutomationBase",
										"nameLocations": [
											"145:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 186,
										"src": "145:14:3"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "145:14:3"
								},
								{
									"baseName": {
										"id": 193,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"161:29:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 214,
										"src": "161:29:3"
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "161:29:3"
								}
							],
							"canonicalName": "AutomationCompatible",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 195,
							"linearizedBaseContracts": [
								195,
								214,
								186
							],
							"name": "AutomationCompatible",
							"nameLocation": "121:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 196,
							"src": "103:90:3",
							"usedErrors": [
								160
							],
							"usedEvents": []
						}
					],
					"src": "0:193:3"
				},
				"id": 3
			},
			"src/automation/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "src/automation/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							214
						]
					},
					"id": 215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 197,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 214,
							"linearizedBaseContracts": [
								214
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "67:29:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "101:985:4",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1098:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1125:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1110:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1110:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:26:4"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1159:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1154:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1154:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1186:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1173:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1173:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:45:4"
									},
									"scope": 214,
									"src": "1089:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1203:1003:4",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2218:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2247:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2232:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2232:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:28:4"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:0:4"
									},
									"scope": 214,
									"src": "2209:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 215,
							"src": "57:2214:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2239:4"
				},
				"id": 4
			}
		}
	}
}